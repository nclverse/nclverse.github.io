// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__22797__delegate = function (args){
return console.log.apply(console,(function (){var G__22796 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__22796) : cljs.core.into_array.call(null,G__22796));
})());
};
var G__22797 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22798__i = 0, G__22798__a = new Array(arguments.length -  0);
while (G__22798__i < G__22798__a.length) {G__22798__a[G__22798__i] = arguments[G__22798__i + 0]; ++G__22798__i;}
  args = new cljs.core.IndexedSeq(G__22798__a,0);
} 
return G__22797__delegate.call(this,args);};
G__22797.cljs$lang$maxFixedArity = 0;
G__22797.cljs$lang$applyTo = (function (arglist__22799){
var args = cljs.core.seq(arglist__22799);
return G__22797__delegate(args);
});
G__22797.cljs$core$IFn$_invoke$arity$variadic = G__22797__delegate;
return G__22797;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__22801 = x;
return goog.isString(G__22801);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__22803 = x__$1;
return goog.typeOf(G__22803);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__16133__auto__ = ty;
if(cljs.core.truth_(and__16133__auto__)){
return ty.cljs$lang$type;
} else {
return and__16133__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__22805 = obj;
return goog.typeOf(G__22805);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__22807 = Symbol;
return goog.typeOf(G__22807);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__17032__auto___22809 = len;
var i_22810 = (0);
while(true){
if((i_22810 < n__17032__auto___22809)){
(new_arr[i_22810] = (arr[i_22810]));

var G__22811 = (i_22810 + (1));
i_22810 = G__22811;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__22812 = (i + (1));
i = G__22812;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__22821__delegate = function (array,i,idxs){
var G__22818 = aget;
var G__22819 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__22820 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__22818,G__22819,G__22820) : cljs.core.apply.call(null,G__22818,G__22819,G__22820));
};
var G__22821 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__22822__i = 0, G__22822__a = new Array(arguments.length -  2);
while (G__22822__i < G__22822__a.length) {G__22822__a[G__22822__i] = arguments[G__22822__i + 2]; ++G__22822__i;}
  idxs = new cljs.core.IndexedSeq(G__22822__a,0);
} 
return G__22821__delegate.call(this,array,i,idxs);};
G__22821.cljs$lang$maxFixedArity = 2;
G__22821.cljs$lang$applyTo = (function (arglist__22823){
var array = cljs.core.first(arglist__22823);
arglist__22823 = cljs.core.next(arglist__22823);
var i = cljs.core.first(arglist__22823);
var idxs = cljs.core.rest(arglist__22823);
return G__22821__delegate(array,i,idxs);
});
G__22821.cljs$core$IFn$_invoke$arity$variadic = G__22821__delegate;
return G__22821;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__22824 = null;
if (arguments.length > 2) {
var G__22825__i = 0, G__22825__a = new Array(arguments.length -  2);
while (G__22825__i < G__22825__a.length) {G__22825__a[G__22825__i] = arguments[G__22825__i + 2]; ++G__22825__i;}
G__22824 = new cljs.core.IndexedSeq(G__22825__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__22824);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__22834__delegate = function (array,idx,idx2,idxv){
var G__22830 = aset;
var G__22831 = (array[idx]);
var G__22832 = idx2;
var G__22833 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__22830,G__22831,G__22832,G__22833) : cljs.core.apply.call(null,G__22830,G__22831,G__22832,G__22833));
};
var G__22834 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__22835__i = 0, G__22835__a = new Array(arguments.length -  3);
while (G__22835__i < G__22835__a.length) {G__22835__a[G__22835__i] = arguments[G__22835__i + 3]; ++G__22835__i;}
  idxv = new cljs.core.IndexedSeq(G__22835__a,0);
} 
return G__22834__delegate.call(this,array,idx,idx2,idxv);};
G__22834.cljs$lang$maxFixedArity = 3;
G__22834.cljs$lang$applyTo = (function (arglist__22836){
var array = cljs.core.first(arglist__22836);
arglist__22836 = cljs.core.next(arglist__22836);
var idx = cljs.core.first(arglist__22836);
arglist__22836 = cljs.core.next(arglist__22836);
var idx2 = cljs.core.first(arglist__22836);
var idxv = cljs.core.rest(arglist__22836);
return G__22834__delegate(array,idx,idx2,idxv);
});
G__22834.cljs$core$IFn$_invoke$arity$variadic = G__22834__delegate;
return G__22834;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__22837 = null;
if (arguments.length > 3) {
var G__22838__i = 0, G__22838__a = new Array(arguments.length -  3);
while (G__22838__i < G__22838__a.length) {G__22838__a[G__22838__i] = arguments[G__22838__i + 3]; ++G__22838__i;}
G__22837 = new cljs.core.IndexedSeq(G__22838__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__22837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__22844 = (function (a,x){
a.push(x);

return a;
});
var G__22845 = [];
var G__22846 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22844,G__22845,G__22846) : cljs.core.reduce.call(null,G__22844,G__22845,G__22846));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__22847__i = 0, G__22847__a = new Array(arguments.length -  2);
while (G__22847__i < G__22847__a.length) {G__22847__a[G__22847__i] = arguments[G__22847__i + 2]; ++G__22847__i;}
  args = new cljs.core.IndexedSeq(G__22847__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__22848){
var obj = cljs.core.first(arglist__22848);
arglist__22848 = cljs.core.next(arglist__22848);
var s = cljs.core.first(arglist__22848);
var args = cljs.core.rest(arglist__22848);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj22850 = {};
return obj22850;
})();


cljs.core.IFn = (function (){var obj22852 = {};
return obj22852;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22898 = x__16789__auto__;
return goog.typeOf(G__22898);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22900 = x__16789__auto__;
return goog.typeOf(G__22900);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22902 = x__16789__auto__;
return goog.typeOf(G__22902);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22904 = x__16789__auto__;
return goog.typeOf(G__22904);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22906 = x__16789__auto__;
return goog.typeOf(G__22906);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22908 = x__16789__auto__;
return goog.typeOf(G__22908);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22910 = x__16789__auto__;
return goog.typeOf(G__22910);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22912 = x__16789__auto__;
return goog.typeOf(G__22912);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22914 = x__16789__auto__;
return goog.typeOf(G__22914);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22916 = x__16789__auto__;
return goog.typeOf(G__22916);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22918 = x__16789__auto__;
return goog.typeOf(G__22918);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22920 = x__16789__auto__;
return goog.typeOf(G__22920);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22922 = x__16789__auto__;
return goog.typeOf(G__22922);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22924 = x__16789__auto__;
return goog.typeOf(G__22924);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22926 = x__16789__auto__;
return goog.typeOf(G__22926);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22928 = x__16789__auto__;
return goog.typeOf(G__22928);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22930 = x__16789__auto__;
return goog.typeOf(G__22930);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22932 = x__16789__auto__;
return goog.typeOf(G__22932);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22934 = x__16789__auto__;
return goog.typeOf(G__22934);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22936 = x__16789__auto__;
return goog.typeOf(G__22936);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22938 = x__16789__auto__;
return goog.typeOf(G__22938);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__22940 = x__16789__auto__;
return goog.typeOf(G__22940);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj22942 = {};
return obj22942;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__16133__auto__ = value;
if(and__16133__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__16133__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__16789__auto__ = (((value == null))?null:value);
return (function (){var or__16145__auto__ = (cljs.core._clone[(function (){var G__22946 = x__16789__auto__;
return goog.typeOf(G__22946);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._clone["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj22948 = {};
return obj22948;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._count[(function (){var G__22952 = x__16789__auto__;
return goog.typeOf(G__22952);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._count["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj22954 = {};
return obj22954;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._empty[(function (){var G__22958 = x__16789__auto__;
return goog.typeOf(G__22958);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._empty["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj22960 = {};
return obj22960;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._conj[(function (){var G__22964 = x__16789__auto__;
return goog.typeOf(G__22964);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._conj["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj22966 = {};
return obj22966;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._nth[(function (){var G__22972 = x__16789__auto__;
return goog.typeOf(G__22972);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._nth["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._nth[(function (){var G__22974 = x__16789__auto__;
return goog.typeOf(G__22974);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._nth["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj22976 = {};
return obj22976;
})();


cljs.core.ISeq = (function (){var obj22978 = {};
return obj22978;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._first[(function (){var G__22982 = x__16789__auto__;
return goog.typeOf(G__22982);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._rest[(function (){var G__22986 = x__16789__auto__;
return goog.typeOf(G__22986);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._rest["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj22988 = {};
return obj22988;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._next[(function (){var G__22992 = x__16789__auto__;
return goog.typeOf(G__22992);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._next["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj22994 = {};
return obj22994;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._lookup[(function (){var G__23000 = x__16789__auto__;
return goog.typeOf(G__23000);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._lookup["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._lookup[(function (){var G__23002 = x__16789__auto__;
return goog.typeOf(G__23002);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._lookup["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj23004 = {};
return obj23004;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__23008 = x__16789__auto__;
return goog.typeOf(G__23008);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._assoc[(function (){var G__23012 = x__16789__auto__;
return goog.typeOf(G__23012);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj23014 = {};
return obj23014;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._dissoc[(function (){var G__23018 = x__16789__auto__;
return goog.typeOf(G__23018);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._dissoc["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj23020 = {};
return obj23020;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._key[(function (){var G__23024 = x__16789__auto__;
return goog.typeOf(G__23024);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._key["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._val[(function (){var G__23028 = x__16789__auto__;
return goog.typeOf(G__23028);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._val["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj23030 = {};
return obj23030;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._disjoin[(function (){var G__23034 = x__16789__auto__;
return goog.typeOf(G__23034);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._disjoin["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj23036 = {};
return obj23036;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._peek[(function (){var G__23040 = x__16789__auto__;
return goog.typeOf(G__23040);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._peek["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._pop[(function (){var G__23044 = x__16789__auto__;
return goog.typeOf(G__23044);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pop["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj23046 = {};
return obj23046;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_n[(function (){var G__23050 = x__16789__auto__;
return goog.typeOf(G__23050);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj23052 = {};
return obj23052;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._deref[(function (){var G__23056 = x__16789__auto__;
return goog.typeOf(G__23056);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._deref["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj23058 = {};
return obj23058;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._deref_with_timeout[(function (){var G__23062 = x__16789__auto__;
return goog.typeOf(G__23062);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj23064 = {};
return obj23064;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._meta[(function (){var G__23068 = x__16789__auto__;
return goog.typeOf(G__23068);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._meta["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj23070 = {};
return obj23070;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._with_meta[(function (){var G__23074 = x__16789__auto__;
return goog.typeOf(G__23074);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._with_meta["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj23076 = {};
return obj23076;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._reduce[(function (){var G__23082 = x__16789__auto__;
return goog.typeOf(G__23082);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._reduce[(function (){var G__23084 = x__16789__auto__;
return goog.typeOf(G__23084);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj23086 = {};
return obj23086;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._kv_reduce[(function (){var G__23090 = x__16789__auto__;
return goog.typeOf(G__23090);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj23092 = {};
return obj23092;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._equiv[(function (){var G__23096 = x__16789__auto__;
return goog.typeOf(G__23096);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._equiv["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj23098 = {};
return obj23098;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._hash[(function (){var G__23102 = x__16789__auto__;
return goog.typeOf(G__23102);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._hash["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj23104 = {};
return obj23104;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._seq[(function (){var G__23108 = x__16789__auto__;
return goog.typeOf(G__23108);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._seq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj23110 = {};
return obj23110;
})();


cljs.core.IList = (function (){var obj23112 = {};
return obj23112;
})();


cljs.core.IRecord = (function (){var obj23114 = {};
return obj23114;
})();


cljs.core.IReversible = (function (){var obj23116 = {};
return obj23116;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._rseq[(function (){var G__23120 = x__16789__auto__;
return goog.typeOf(G__23120);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._rseq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj23122 = {};
return obj23122;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._sorted_seq[(function (){var G__23126 = x__16789__auto__;
return goog.typeOf(G__23126);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._sorted_seq_from[(function (){var G__23130 = x__16789__auto__;
return goog.typeOf(G__23130);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._entry_key[(function (){var G__23134 = x__16789__auto__;
return goog.typeOf(G__23134);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._entry_key["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._comparator[(function (){var G__23138 = x__16789__auto__;
return goog.typeOf(G__23138);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._comparator["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj23140 = {};
return obj23140;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__16133__auto__ = writer;
if(and__16133__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__16133__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__16789__auto__ = (((writer == null))?null:writer);
return (function (){var or__16145__auto__ = (cljs.core._write[(function (){var G__23144 = x__16789__auto__;
return goog.typeOf(G__23144);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._write["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__16133__auto__ = writer;
if(and__16133__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__16133__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__16789__auto__ = (((writer == null))?null:writer);
return (function (){var or__16145__auto__ = (cljs.core._flush[(function (){var G__23148 = x__16789__auto__;
return goog.typeOf(G__23148);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._flush["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj23150 = {};
return obj23150;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._pr_writer[(function (){var G__23154 = x__16789__auto__;
return goog.typeOf(G__23154);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj23156 = {};
return obj23156;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__16133__auto__ = d;
if(and__16133__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__16789__auto__ = (((d == null))?null:d);
return (function (){var or__16145__auto__ = (cljs.core._realized_QMARK_[(function (){var G__23160 = x__16789__auto__;
return goog.typeOf(G__23160);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj23162 = {};
return obj23162;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._notify_watches[(function (){var G__23166 = x__16789__auto__;
return goog.typeOf(G__23166);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._add_watch[(function (){var G__23170 = x__16789__auto__;
return goog.typeOf(G__23170);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._add_watch["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._remove_watch[(function (){var G__23174 = x__16789__auto__;
return goog.typeOf(G__23174);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj23176 = {};
return obj23176;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._as_transient[(function (){var G__23180 = x__16789__auto__;
return goog.typeOf(G__23180);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._as_transient["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj23182 = {};
return obj23182;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._conj_BANG_[(function (){var G__23186 = x__16789__auto__;
return goog.typeOf(G__23186);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._persistent_BANG_[(function (){var G__23190 = x__16789__auto__;
return goog.typeOf(G__23190);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj23192 = {};
return obj23192;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_BANG_[(function (){var G__23196 = x__16789__auto__;
return goog.typeOf(G__23196);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj23198 = {};
return obj23198;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__23202 = x__16789__auto__;
return goog.typeOf(G__23202);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj23204 = {};
return obj23204;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__23208 = x__16789__auto__;
return goog.typeOf(G__23208);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._pop_BANG_[(function (){var G__23212 = x__16789__auto__;
return goog.typeOf(G__23212);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj23214 = {};
return obj23214;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__23218 = x__16789__auto__;
return goog.typeOf(G__23218);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj23220 = {};
return obj23220;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._compare[(function (){var G__23224 = x__16789__auto__;
return goog.typeOf(G__23224);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._compare["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj23226 = {};
return obj23226;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._drop_first[(function (){var G__23230 = x__16789__auto__;
return goog.typeOf(G__23230);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._drop_first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj23232 = {};
return obj23232;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_first[(function (){var G__23236 = x__16789__auto__;
return goog.typeOf(G__23236);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_rest[(function (){var G__23240 = x__16789__auto__;
return goog.typeOf(G__23240);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj23242 = {};
return obj23242;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_next[(function (){var G__23246 = x__16789__auto__;
return goog.typeOf(G__23246);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj23248 = {};
return obj23248;
})();

cljs.core._name = (function _name(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._name[(function (){var G__23252 = x__16789__auto__;
return goog.typeOf(G__23252);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._name["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._namespace[(function (){var G__23256 = x__16789__auto__;
return goog.typeOf(G__23256);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._namespace["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj23258 = {};
return obj23258;
})();


cljs.core.IReset = (function (){var obj23260 = {};
return obj23260;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._reset_BANG_[(function (){var G__23264 = x__16789__auto__;
return goog.typeOf(G__23264);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj23266 = {};
return obj23266;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__23276 = x__16789__auto__;
return goog.typeOf(G__23276);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__23278 = x__16789__auto__;
return goog.typeOf(G__23278);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__23280 = x__16789__auto__;
return goog.typeOf(G__23280);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__23282 = x__16789__auto__;
return goog.typeOf(G__23282);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj23284 = {};
return obj23284;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._vreset_BANG_[(function (){var G__23288 = x__16789__auto__;
return goog.typeOf(G__23288);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj23290 = {};
return obj23290;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._iterator[(function (){var G__23294 = x__16789__auto__;
return goog.typeOf(G__23294);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._iterator["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__23297 = (4294967295);
var G__23298 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23297,G__23298) : Math.imul.call(null,G__23297,G__23298));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__23301 = a;
var G__23302 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23301,G__23302) : Math.imul.call(null,G__23301,G__23302));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__23303 = (i + (2));
var G__23304 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__23303;
h1 = G__23304;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj23306 = {};
return obj23306;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__23307 = (i + (1));
var G__23308 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__23307;
hash = G__23308;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj23312 = {};
return obj23312;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__23315 = o;
if(G__23315){
var bit__16819__auto__ = (G__23315.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__16819__auto__) || (G__23315.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__23316 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23316) : Math.floor.call(null,G__23316));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.not(a.ns);
if(and__16133__auto__){
return b.ns;
} else {
return and__16133__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__23323 = a.ns;
var G__23324 = b.ns;
return goog.array.defaultCompare(G__23323,G__23324);
})();
if(((0) === nsc)){
var G__23325 = a.name;
var G__23326 = b.name;
return goog.array.defaultCompare(G__23325,G__23326);
} else {
return nsc;
}
}
} else {
var G__23327 = a.name;
var G__23328 = b.name;
return goog.array.defaultCompare(G__23327,G__23328);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__16566__auto__ = self__._hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__23330 = null;
var G__23330__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__23330__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__23330 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__23330__2.call(this,self__,coll);
case 3:
return G__23330__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23330.cljs$core$IFn$_invoke$arity$2 = G__23330__2;
G__23330.cljs$core$IFn$_invoke$arity$3 = G__23330__3;
return G__23330;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args23329){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23329)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__23378 = null;
var G__23378__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__23378__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__23378__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__23378__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__23378__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__23378__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__23378__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__23378__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__23378__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__23378__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__23378__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__23378__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__23378__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__23378__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__23378__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__23378__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__23378__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__23378__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__23378__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__23378__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__23378__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__23378__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23334 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23335 = a;
var G__23336 = b;
var G__23337 = c;
var G__23338 = d;
var G__23339 = e;
var G__23340 = f;
var G__23341 = g;
var G__23342 = h;
var G__23343 = i;
var G__23344 = j;
var G__23345 = k;
var G__23346 = l;
var G__23347 = m;
var G__23348 = n;
var G__23349 = o;
var G__23350 = p;
var G__23351 = q;
var G__23352 = r;
var G__23353 = s;
var G__23354 = t;
var G__23355 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23334,G__23335,G__23336,G__23337,G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347,G__23348,G__23349,G__23350,G__23351,G__23352,G__23353,G__23354,G__23355) : cljs.core.apply.call(null,G__23334,G__23335,G__23336,G__23337,G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347,G__23348,G__23349,G__23350,G__23351,G__23352,G__23353,G__23354,G__23355));
});
G__23378 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23378__1.call(this,self__);
case 2:
return G__23378__2.call(this,self__,a);
case 3:
return G__23378__3.call(this,self__,a,b);
case 4:
return G__23378__4.call(this,self__,a,b,c);
case 5:
return G__23378__5.call(this,self__,a,b,c,d);
case 6:
return G__23378__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23378__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23378__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23378__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23378__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23378__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23378__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23378__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23378__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23378__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23378__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23378__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23378__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23378__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23378__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23378__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23378__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23378.cljs$core$IFn$_invoke$arity$1 = G__23378__1;
G__23378.cljs$core$IFn$_invoke$arity$2 = G__23378__2;
G__23378.cljs$core$IFn$_invoke$arity$3 = G__23378__3;
G__23378.cljs$core$IFn$_invoke$arity$4 = G__23378__4;
G__23378.cljs$core$IFn$_invoke$arity$5 = G__23378__5;
G__23378.cljs$core$IFn$_invoke$arity$6 = G__23378__6;
G__23378.cljs$core$IFn$_invoke$arity$7 = G__23378__7;
G__23378.cljs$core$IFn$_invoke$arity$8 = G__23378__8;
G__23378.cljs$core$IFn$_invoke$arity$9 = G__23378__9;
G__23378.cljs$core$IFn$_invoke$arity$10 = G__23378__10;
G__23378.cljs$core$IFn$_invoke$arity$11 = G__23378__11;
G__23378.cljs$core$IFn$_invoke$arity$12 = G__23378__12;
G__23378.cljs$core$IFn$_invoke$arity$13 = G__23378__13;
G__23378.cljs$core$IFn$_invoke$arity$14 = G__23378__14;
G__23378.cljs$core$IFn$_invoke$arity$15 = G__23378__15;
G__23378.cljs$core$IFn$_invoke$arity$16 = G__23378__16;
G__23378.cljs$core$IFn$_invoke$arity$17 = G__23378__17;
G__23378.cljs$core$IFn$_invoke$arity$18 = G__23378__18;
G__23378.cljs$core$IFn$_invoke$arity$19 = G__23378__19;
G__23378.cljs$core$IFn$_invoke$arity$20 = G__23378__20;
G__23378.cljs$core$IFn$_invoke$arity$21 = G__23378__21;
G__23378.cljs$core$IFn$_invoke$arity$22 = G__23378__22;
return G__23378;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args23333){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23333)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__23356 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23357 = a;
var G__23358 = b;
var G__23359 = c;
var G__23360 = d;
var G__23361 = e;
var G__23362 = f;
var G__23363 = g;
var G__23364 = h;
var G__23365 = i;
var G__23366 = j;
var G__23367 = k;
var G__23368 = l;
var G__23369 = m;
var G__23370 = n;
var G__23371 = o;
var G__23372 = p;
var G__23373 = q;
var G__23374 = r;
var G__23375 = s;
var G__23376 = t;
var G__23377 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23356,G__23357,G__23358,G__23359,G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369,G__23370,G__23371,G__23372,G__23373,G__23374,G__23375,G__23376,G__23377) : cljs.core.apply.call(null,G__23356,G__23357,G__23358,G__23359,G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369,G__23370,G__23371,G__23372,G__23373,G__23374,G__23375,G__23376,G__23377));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__23380 = x;
if(G__23380){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__23380.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__23380.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23380);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23380);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__23382 = value;
if(G__23382){
var bit__16826__auto__ = (G__23382.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__16826__auto__) || (G__23382.cljs$core$ICloneable$)){
return true;
} else {
if((!G__23382.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23382);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23382);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23384 = coll;
if(G__23384){
var bit__16819__auto__ = (G__23384.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16819__auto__) || (G__23384.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23386 = coll;
if(G__23386){
var bit__16819__auto__ = (G__23386.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__23386.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__23388 = coll;
if(G__23388){
var bit__16819__auto__ = (G__23388.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__23388.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23390 = coll;
if(G__23390){
var bit__16819__auto__ = (G__23390.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16819__auto__) || (G__23390.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__23395__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__23396 = y;
var G__23397 = cljs.core.first(more);
var G__23398 = cljs.core.next(more);
x = G__23396;
y = G__23397;
more = G__23398;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23395 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23399__i = 0, G__23399__a = new Array(arguments.length -  2);
while (G__23399__i < G__23399__a.length) {G__23399__a[G__23399__i] = arguments[G__23399__i + 2]; ++G__23399__i;}
  more = new cljs.core.IndexedSeq(G__23399__a,0);
} 
return G__23395__delegate.call(this,x,y,more);};
G__23395.cljs$lang$maxFixedArity = 2;
G__23395.cljs$lang$applyTo = (function (arglist__23400){
var x = cljs.core.first(arglist__23400);
arglist__23400 = cljs.core.next(arglist__23400);
var y = cljs.core.first(arglist__23400);
var more = cljs.core.rest(arglist__23400);
return G__23395__delegate(x,y,more);
});
G__23395.cljs$core$IFn$_invoke$arity$variadic = G__23395__delegate;
return G__23395;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__23401 = null;
if (arguments.length > 2) {
var G__23402__i = 0, G__23402__a = new Array(arguments.length -  2);
while (G__23402__i < G__23402__a.length) {G__23402__a[G__23402__i] = arguments[G__23402__i + 2]; ++G__23402__i;}
G__23401 = new cljs.core.IndexedSeq(G__23402__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__23403 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__23403) : cljs.core.es6_iterator_seq.call(null,G__23403));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23404 = (n + (1));
var G__23405 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23406 = cljs.core.next(coll__$1);
n = G__23404;
hash_code = G__23405;
coll__$1 = G__23406;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23407 = (n + (1));
var G__23408 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23409 = cljs.core.next(coll__$1);
n = G__23407;
hash_code = G__23408;
coll__$1 = G__23409;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__23410 = o;
return goog.getUid(G__23410);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__23412 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23412) : cljs.core.deref.call(null,G__23412));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23419 = val;
var G__23420 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23419,G__23420) : f.call(null,G__23419,G__23420));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23425 = nval;
var G__23426 = (n + (1));
val = G__23425;
n = G__23426;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23421 = val__$1;
var G__23422 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23421,G__23422) : f.call(null,G__23421,G__23422));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23427 = nval;
var G__23428 = (n + (1));
val__$1 = G__23427;
n = G__23428;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23423 = val__$1;
var G__23424 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23423,G__23424) : f.call(null,G__23423,G__23424));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23429 = nval;
var G__23430 = (n + (1));
val__$1 = G__23429;
n = G__23430;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23437 = val;
var G__23438 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23437,G__23438) : f.call(null,G__23437,G__23438));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23443 = nval;
var G__23444 = (n + (1));
val = G__23443;
n = G__23444;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23439 = val__$1;
var G__23440 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23439,G__23440) : f.call(null,G__23439,G__23440));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23445 = nval;
var G__23446 = (n + (1));
val__$1 = G__23445;
n = G__23446;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23441 = val__$1;
var G__23442 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23441,G__23442) : f.call(null,G__23441,G__23442));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23447 = nval;
var G__23448 = (n + (1));
val__$1 = G__23447;
n = G__23448;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__23450 = x;
if(G__23450){
var bit__16826__auto__ = (G__23450.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16826__auto__) || (G__23450.cljs$core$ICounted$)){
return true;
} else {
if((!G__23450.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23450);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23450);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__23452 = x;
if(G__23452){
var bit__16826__auto__ = (G__23452.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16826__auto__) || (G__23452.cljs$core$IIndexed$)){
return true;
} else {
if((!G__23452.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23452);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23452);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23453 = coll__$1;
var G__23454 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23453,G__23454) : cljs.core.equiv_sequential.call(null,G__23453,G__23454));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23455 = o;
var G__23456 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23455,G__23456) : cljs.core.cons.call(null,G__23455,G__23456));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23459 = coll__$1;
var G__23460 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23459,G__23460) : cljs.core.equiv_sequential.call(null,G__23459,G__23460));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__23461 = cljs.core.List.EMPTY;
var G__23462 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__23461,G__23462) : cljs.core.with_meta.call(null,G__23461,G__23462));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__23463 = f;
var G__23464 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__23463,G__23464) : cljs.core.seq_reduce.call(null,G__23463,G__23464));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__23465 = f;
var G__23466 = start;
var G__23467 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__23465,G__23466,G__23467) : cljs.core.seq_reduce.call(null,G__23465,G__23466,G__23467));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23468 = o;
var G__23469 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23468,G__23469) : cljs.core.cons.call(null,G__23468,G__23469));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__23470 = sn;
s = G__23470;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__23475__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__23476 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__23477 = cljs.core.first(xs);
var G__23478 = cljs.core.next(xs);
coll = G__23476;
x = G__23477;
xs = G__23478;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__23475 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__23479__i = 0, G__23479__a = new Array(arguments.length -  2);
while (G__23479__i < G__23479__a.length) {G__23479__a[G__23479__i] = arguments[G__23479__i + 2]; ++G__23479__i;}
  xs = new cljs.core.IndexedSeq(G__23479__a,0);
} 
return G__23475__delegate.call(this,coll,x,xs);};
G__23475.cljs$lang$maxFixedArity = 2;
G__23475.cljs$lang$applyTo = (function (arglist__23480){
var coll = cljs.core.first(arglist__23480);
arglist__23480 = cljs.core.next(arglist__23480);
var x = cljs.core.first(arglist__23480);
var xs = cljs.core.rest(arglist__23480);
return G__23475__delegate(coll,x,xs);
});
G__23475.cljs$core$IFn$_invoke$arity$variadic = G__23475__delegate;
return G__23475;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__23481 = null;
if (arguments.length > 2) {
var G__23482__i = 0, G__23482__a = new Array(arguments.length -  2);
while (G__23482__i < G__23482__a.length) {G__23482__a[G__23482__i] = arguments[G__23482__i + 2]; ++G__23482__i;}
G__23481 = new cljs.core.IndexedSeq(G__23482__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__23481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__23483 = cljs.core.next(s);
var G__23484 = (acc + (1));
s = G__23483;
acc = G__23484;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__23486 = coll;
if(G__23486){
var bit__16819__auto__ = (G__23486.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16819__auto__) || (G__23486.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__23487 = cljs.core.next(coll);
var G__23488 = (n - (1));
coll = G__23487;
n = G__23488;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__23489 = cljs.core.next(coll);
var G__23490 = (n - (1));
var G__23491 = not_found;
coll = G__23489;
n = G__23490;
not_found = G__23491;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__23496 = coll;
if(G__23496){
var bit__16819__auto__ = (G__23496.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16819__auto__) || (G__23496.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23497 = coll;
if(G__23497){
var bit__16826__auto__ = (G__23497.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__23497.cljs$core$ISeq$)){
return true;
} else {
if((!G__23497.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23497);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23497);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__23498 = coll;
if(G__23498){
var bit__16819__auto__ = (G__23498.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16819__auto__) || (G__23498.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23499 = coll;
if(G__23499){
var bit__16826__auto__ = (G__23499.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__23499.cljs$core$ISeq$)){
return true;
} else {
if((!G__23499.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23499);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23499);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__23500 = (n__$1 - (1));
var G__23501 = cljs.core.rest(xs);
n__$1 = G__23500;
xs = G__23501;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__23504 = o;
if(G__23504){
var bit__16819__auto__ = (G__23504.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16819__auto__) || (G__23504.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__23505 = o;
if(G__23505){
var bit__16819__auto__ = (G__23505.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16819__auto__) || (G__23505.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__23509__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__23510 = ret;
var G__23511 = cljs.core.first(kvs);
var G__23512 = cljs.core.second(kvs);
var G__23513 = cljs.core.nnext(kvs);
coll = G__23510;
k = G__23511;
v = G__23512;
kvs = G__23513;
continue;
} else {
return ret;
}
break;
}
};
var G__23509 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__23514__i = 0, G__23514__a = new Array(arguments.length -  3);
while (G__23514__i < G__23514__a.length) {G__23514__a[G__23514__i] = arguments[G__23514__i + 3]; ++G__23514__i;}
  kvs = new cljs.core.IndexedSeq(G__23514__a,0);
} 
return G__23509__delegate.call(this,coll,k,v,kvs);};
G__23509.cljs$lang$maxFixedArity = 3;
G__23509.cljs$lang$applyTo = (function (arglist__23515){
var coll = cljs.core.first(arglist__23515);
arglist__23515 = cljs.core.next(arglist__23515);
var k = cljs.core.first(arglist__23515);
arglist__23515 = cljs.core.next(arglist__23515);
var v = cljs.core.first(arglist__23515);
var kvs = cljs.core.rest(arglist__23515);
return G__23509__delegate(coll,k,v,kvs);
});
G__23509.cljs$core$IFn$_invoke$arity$variadic = G__23509__delegate;
return G__23509;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__23516 = null;
if (arguments.length > 3) {
var G__23517__i = 0, G__23517__a = new Array(arguments.length -  3);
while (G__23517__i < G__23517__a.length) {G__23517__a[G__23517__i] = arguments[G__23517__i + 3]; ++G__23517__i;}
G__23516 = new cljs.core.IndexedSeq(G__23517__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__23516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__23520__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__23521 = ret;
var G__23522 = cljs.core.first(ks);
var G__23523 = cljs.core.next(ks);
coll = G__23521;
k = G__23522;
ks = G__23523;
continue;
} else {
return ret;
}
}
break;
}
};
var G__23520 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__23524__i = 0, G__23524__a = new Array(arguments.length -  2);
while (G__23524__i < G__23524__a.length) {G__23524__a[G__23524__i] = arguments[G__23524__i + 2]; ++G__23524__i;}
  ks = new cljs.core.IndexedSeq(G__23524__a,0);
} 
return G__23520__delegate.call(this,coll,k,ks);};
G__23520.cljs$lang$maxFixedArity = 2;
G__23520.cljs$lang$applyTo = (function (arglist__23525){
var coll = cljs.core.first(arglist__23525);
arglist__23525 = cljs.core.next(arglist__23525);
var k = cljs.core.first(arglist__23525);
var ks = cljs.core.rest(arglist__23525);
return G__23520__delegate(coll,k,ks);
});
G__23520.cljs$core$IFn$_invoke$arity$variadic = G__23520__delegate;
return G__23520;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__23526 = null;
if (arguments.length > 2) {
var G__23527__i = 0, G__23527__a = new Array(arguments.length -  2);
while (G__23527__i < G__23527__a.length) {G__23527__a[G__23527__i] = arguments[G__23527__i + 2]; ++G__23527__i;}
G__23526 = new cljs.core.IndexedSeq(G__23527__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__23526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__16145__auto__ = (function (){var G__23532 = f;
return goog.isFunction(G__23532);
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__23533 = f;
if(G__23533){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto____$1 = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
return G__23533.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__23533.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23533);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23533);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__23999 = null;
var G__23999__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__23999__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23535 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23535) : self__.afn.call(null,G__23535));
});
var G__23999__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23536 = a;
var G__23537 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23536,G__23537) : self__.afn.call(null,G__23536,G__23537));
});
var G__23999__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23538 = a;
var G__23539 = b;
var G__23540 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23538,G__23539,G__23540) : self__.afn.call(null,G__23538,G__23539,G__23540));
});
var G__23999__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23541 = a;
var G__23542 = b;
var G__23543 = c;
var G__23544 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23541,G__23542,G__23543,G__23544) : self__.afn.call(null,G__23541,G__23542,G__23543,G__23544));
});
var G__23999__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23545 = a;
var G__23546 = b;
var G__23547 = c;
var G__23548 = d;
var G__23549 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23545,G__23546,G__23547,G__23548,G__23549) : self__.afn.call(null,G__23545,G__23546,G__23547,G__23548,G__23549));
});
var G__23999__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23550 = a;
var G__23551 = b;
var G__23552 = c;
var G__23553 = d;
var G__23554 = e;
var G__23555 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23550,G__23551,G__23552,G__23553,G__23554,G__23555) : self__.afn.call(null,G__23550,G__23551,G__23552,G__23553,G__23554,G__23555));
});
var G__23999__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23556 = a;
var G__23557 = b;
var G__23558 = c;
var G__23559 = d;
var G__23560 = e;
var G__23561 = f;
var G__23562 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23556,G__23557,G__23558,G__23559,G__23560,G__23561,G__23562) : self__.afn.call(null,G__23556,G__23557,G__23558,G__23559,G__23560,G__23561,G__23562));
});
var G__23999__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23563 = a;
var G__23564 = b;
var G__23565 = c;
var G__23566 = d;
var G__23567 = e;
var G__23568 = f;
var G__23569 = g;
var G__23570 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570) : self__.afn.call(null,G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570));
});
var G__23999__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23571 = a;
var G__23572 = b;
var G__23573 = c;
var G__23574 = d;
var G__23575 = e;
var G__23576 = f;
var G__23577 = g;
var G__23578 = h;
var G__23579 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23571,G__23572,G__23573,G__23574,G__23575,G__23576,G__23577,G__23578,G__23579) : self__.afn.call(null,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576,G__23577,G__23578,G__23579));
});
var G__23999__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23580 = a;
var G__23581 = b;
var G__23582 = c;
var G__23583 = d;
var G__23584 = e;
var G__23585 = f;
var G__23586 = g;
var G__23587 = h;
var G__23588 = i;
var G__23589 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589) : self__.afn.call(null,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589));
});
var G__23999__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23590 = a;
var G__23591 = b;
var G__23592 = c;
var G__23593 = d;
var G__23594 = e;
var G__23595 = f;
var G__23596 = g;
var G__23597 = h;
var G__23598 = i;
var G__23599 = j;
var G__23600 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__23590,G__23591,G__23592,G__23593,G__23594,G__23595,G__23596,G__23597,G__23598,G__23599,G__23600) : self__.afn.call(null,G__23590,G__23591,G__23592,G__23593,G__23594,G__23595,G__23596,G__23597,G__23598,G__23599,G__23600));
});
var G__23999__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23601 = a;
var G__23602 = b;
var G__23603 = c;
var G__23604 = d;
var G__23605 = e;
var G__23606 = f;
var G__23607 = g;
var G__23608 = h;
var G__23609 = i;
var G__23610 = j;
var G__23611 = k;
var G__23612 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__23601,G__23602,G__23603,G__23604,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612) : self__.afn.call(null,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612));
});
var G__23999__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23613 = a;
var G__23614 = b;
var G__23615 = c;
var G__23616 = d;
var G__23617 = e;
var G__23618 = f;
var G__23619 = g;
var G__23620 = h;
var G__23621 = i;
var G__23622 = j;
var G__23623 = k;
var G__23624 = l;
var G__23625 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625) : self__.afn.call(null,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625));
});
var G__23999__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23626 = a;
var G__23627 = b;
var G__23628 = c;
var G__23629 = d;
var G__23630 = e;
var G__23631 = f;
var G__23632 = g;
var G__23633 = h;
var G__23634 = i;
var G__23635 = j;
var G__23636 = k;
var G__23637 = l;
var G__23638 = m;
var G__23639 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639) : self__.afn.call(null,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639));
});
var G__23999__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23640 = a;
var G__23641 = b;
var G__23642 = c;
var G__23643 = d;
var G__23644 = e;
var G__23645 = f;
var G__23646 = g;
var G__23647 = h;
var G__23648 = i;
var G__23649 = j;
var G__23650 = k;
var G__23651 = l;
var G__23652 = m;
var G__23653 = n;
var G__23654 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654) : self__.afn.call(null,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654));
});
var G__23999__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23655 = a;
var G__23656 = b;
var G__23657 = c;
var G__23658 = d;
var G__23659 = e;
var G__23660 = f;
var G__23661 = g;
var G__23662 = h;
var G__23663 = i;
var G__23664 = j;
var G__23665 = k;
var G__23666 = l;
var G__23667 = m;
var G__23668 = n;
var G__23669 = o;
var G__23670 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__23655,G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668,G__23669,G__23670) : self__.afn.call(null,G__23655,G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668,G__23669,G__23670));
});
var G__23999__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23671 = a;
var G__23672 = b;
var G__23673 = c;
var G__23674 = d;
var G__23675 = e;
var G__23676 = f;
var G__23677 = g;
var G__23678 = h;
var G__23679 = i;
var G__23680 = j;
var G__23681 = k;
var G__23682 = l;
var G__23683 = m;
var G__23684 = n;
var G__23685 = o;
var G__23686 = p;
var G__23687 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683,G__23684,G__23685,G__23686,G__23687) : self__.afn.call(null,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683,G__23684,G__23685,G__23686,G__23687));
});
var G__23999__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23688 = a;
var G__23689 = b;
var G__23690 = c;
var G__23691 = d;
var G__23692 = e;
var G__23693 = f;
var G__23694 = g;
var G__23695 = h;
var G__23696 = i;
var G__23697 = j;
var G__23698 = k;
var G__23699 = l;
var G__23700 = m;
var G__23701 = n;
var G__23702 = o;
var G__23703 = p;
var G__23704 = q;
var G__23705 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696,G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705) : self__.afn.call(null,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696,G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705));
});
var G__23999__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23706 = a;
var G__23707 = b;
var G__23708 = c;
var G__23709 = d;
var G__23710 = e;
var G__23711 = f;
var G__23712 = g;
var G__23713 = h;
var G__23714 = i;
var G__23715 = j;
var G__23716 = k;
var G__23717 = l;
var G__23718 = m;
var G__23719 = n;
var G__23720 = o;
var G__23721 = p;
var G__23722 = q;
var G__23723 = r;
var G__23724 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23706,G__23707,G__23708,G__23709,G__23710,G__23711,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721,G__23722,G__23723,G__23724) : self__.afn.call(null,G__23706,G__23707,G__23708,G__23709,G__23710,G__23711,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721,G__23722,G__23723,G__23724));
});
var G__23999__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23725 = a;
var G__23726 = b;
var G__23727 = c;
var G__23728 = d;
var G__23729 = e;
var G__23730 = f;
var G__23731 = g;
var G__23732 = h;
var G__23733 = i;
var G__23734 = j;
var G__23735 = k;
var G__23736 = l;
var G__23737 = m;
var G__23738 = n;
var G__23739 = o;
var G__23740 = p;
var G__23741 = q;
var G__23742 = r;
var G__23743 = s;
var G__23744 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__23725,G__23726,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740,G__23741,G__23742,G__23743,G__23744) : self__.afn.call(null,G__23725,G__23726,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740,G__23741,G__23742,G__23743,G__23744));
});
var G__23999__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23745 = self__.afn;
var G__23746 = a;
var G__23747 = b;
var G__23748 = c;
var G__23749 = d;
var G__23750 = e;
var G__23751 = f;
var G__23752 = g;
var G__23753 = h;
var G__23754 = i;
var G__23755 = j;
var G__23756 = k;
var G__23757 = l;
var G__23758 = m;
var G__23759 = n;
var G__23760 = o;
var G__23761 = p;
var G__23762 = q;
var G__23763 = r;
var G__23764 = s;
var G__23765 = t;
var G__23766 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766) : cljs.core.apply.call(null,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766));
});
G__23999 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23999__1.call(this,self__);
case 2:
return G__23999__2.call(this,self__,a);
case 3:
return G__23999__3.call(this,self__,a,b);
case 4:
return G__23999__4.call(this,self__,a,b,c);
case 5:
return G__23999__5.call(this,self__,a,b,c,d);
case 6:
return G__23999__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23999__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23999__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23999__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23999__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23999__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23999__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23999__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23999__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23999__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23999__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23999__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23999__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23999__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23999__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23999__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23999__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23999.cljs$core$IFn$_invoke$arity$1 = G__23999__1;
G__23999.cljs$core$IFn$_invoke$arity$2 = G__23999__2;
G__23999.cljs$core$IFn$_invoke$arity$3 = G__23999__3;
G__23999.cljs$core$IFn$_invoke$arity$4 = G__23999__4;
G__23999.cljs$core$IFn$_invoke$arity$5 = G__23999__5;
G__23999.cljs$core$IFn$_invoke$arity$6 = G__23999__6;
G__23999.cljs$core$IFn$_invoke$arity$7 = G__23999__7;
G__23999.cljs$core$IFn$_invoke$arity$8 = G__23999__8;
G__23999.cljs$core$IFn$_invoke$arity$9 = G__23999__9;
G__23999.cljs$core$IFn$_invoke$arity$10 = G__23999__10;
G__23999.cljs$core$IFn$_invoke$arity$11 = G__23999__11;
G__23999.cljs$core$IFn$_invoke$arity$12 = G__23999__12;
G__23999.cljs$core$IFn$_invoke$arity$13 = G__23999__13;
G__23999.cljs$core$IFn$_invoke$arity$14 = G__23999__14;
G__23999.cljs$core$IFn$_invoke$arity$15 = G__23999__15;
G__23999.cljs$core$IFn$_invoke$arity$16 = G__23999__16;
G__23999.cljs$core$IFn$_invoke$arity$17 = G__23999__17;
G__23999.cljs$core$IFn$_invoke$arity$18 = G__23999__18;
G__23999.cljs$core$IFn$_invoke$arity$19 = G__23999__19;
G__23999.cljs$core$IFn$_invoke$arity$20 = G__23999__20;
G__23999.cljs$core$IFn$_invoke$arity$21 = G__23999__21;
G__23999.cljs$core$IFn$_invoke$arity$22 = G__23999__22;
return G__23999;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args23534){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23534)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__23767 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23767) : self__.afn.call(null,G__23767));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__23768 = a;
var G__23769 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23768,G__23769) : self__.afn.call(null,G__23768,G__23769));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__23770 = a;
var G__23771 = b;
var G__23772 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23770,G__23771,G__23772) : self__.afn.call(null,G__23770,G__23771,G__23772));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__23773 = a;
var G__23774 = b;
var G__23775 = c;
var G__23776 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23773,G__23774,G__23775,G__23776) : self__.afn.call(null,G__23773,G__23774,G__23775,G__23776));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__23777 = a;
var G__23778 = b;
var G__23779 = c;
var G__23780 = d;
var G__23781 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23777,G__23778,G__23779,G__23780,G__23781) : self__.afn.call(null,G__23777,G__23778,G__23779,G__23780,G__23781));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__23782 = a;
var G__23783 = b;
var G__23784 = c;
var G__23785 = d;
var G__23786 = e;
var G__23787 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23782,G__23783,G__23784,G__23785,G__23786,G__23787) : self__.afn.call(null,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__23788 = a;
var G__23789 = b;
var G__23790 = c;
var G__23791 = d;
var G__23792 = e;
var G__23793 = f;
var G__23794 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794) : self__.afn.call(null,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__23795 = a;
var G__23796 = b;
var G__23797 = c;
var G__23798 = d;
var G__23799 = e;
var G__23800 = f;
var G__23801 = g;
var G__23802 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802) : self__.afn.call(null,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__23803 = a;
var G__23804 = b;
var G__23805 = c;
var G__23806 = d;
var G__23807 = e;
var G__23808 = f;
var G__23809 = g;
var G__23810 = h;
var G__23811 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811) : self__.afn.call(null,G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__23812 = a;
var G__23813 = b;
var G__23814 = c;
var G__23815 = d;
var G__23816 = e;
var G__23817 = f;
var G__23818 = g;
var G__23819 = h;
var G__23820 = i;
var G__23821 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821) : self__.afn.call(null,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__23822 = a;
var G__23823 = b;
var G__23824 = c;
var G__23825 = d;
var G__23826 = e;
var G__23827 = f;
var G__23828 = g;
var G__23829 = h;
var G__23830 = i;
var G__23831 = j;
var G__23832 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832) : self__.afn.call(null,G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__23833 = a;
var G__23834 = b;
var G__23835 = c;
var G__23836 = d;
var G__23837 = e;
var G__23838 = f;
var G__23839 = g;
var G__23840 = h;
var G__23841 = i;
var G__23842 = j;
var G__23843 = k;
var G__23844 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839,G__23840,G__23841,G__23842,G__23843,G__23844) : self__.afn.call(null,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839,G__23840,G__23841,G__23842,G__23843,G__23844));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__23845 = a;
var G__23846 = b;
var G__23847 = c;
var G__23848 = d;
var G__23849 = e;
var G__23850 = f;
var G__23851 = g;
var G__23852 = h;
var G__23853 = i;
var G__23854 = j;
var G__23855 = k;
var G__23856 = l;
var G__23857 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856,G__23857) : self__.afn.call(null,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856,G__23857));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__23858 = a;
var G__23859 = b;
var G__23860 = c;
var G__23861 = d;
var G__23862 = e;
var G__23863 = f;
var G__23864 = g;
var G__23865 = h;
var G__23866 = i;
var G__23867 = j;
var G__23868 = k;
var G__23869 = l;
var G__23870 = m;
var G__23871 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870,G__23871) : self__.afn.call(null,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870,G__23871));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__23872 = a;
var G__23873 = b;
var G__23874 = c;
var G__23875 = d;
var G__23876 = e;
var G__23877 = f;
var G__23878 = g;
var G__23879 = h;
var G__23880 = i;
var G__23881 = j;
var G__23882 = k;
var G__23883 = l;
var G__23884 = m;
var G__23885 = n;
var G__23886 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886) : self__.afn.call(null,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__23887 = a;
var G__23888 = b;
var G__23889 = c;
var G__23890 = d;
var G__23891 = e;
var G__23892 = f;
var G__23893 = g;
var G__23894 = h;
var G__23895 = i;
var G__23896 = j;
var G__23897 = k;
var G__23898 = l;
var G__23899 = m;
var G__23900 = n;
var G__23901 = o;
var G__23902 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902) : self__.afn.call(null,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__23903 = a;
var G__23904 = b;
var G__23905 = c;
var G__23906 = d;
var G__23907 = e;
var G__23908 = f;
var G__23909 = g;
var G__23910 = h;
var G__23911 = i;
var G__23912 = j;
var G__23913 = k;
var G__23914 = l;
var G__23915 = m;
var G__23916 = n;
var G__23917 = o;
var G__23918 = p;
var G__23919 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919) : self__.afn.call(null,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__23920 = a;
var G__23921 = b;
var G__23922 = c;
var G__23923 = d;
var G__23924 = e;
var G__23925 = f;
var G__23926 = g;
var G__23927 = h;
var G__23928 = i;
var G__23929 = j;
var G__23930 = k;
var G__23931 = l;
var G__23932 = m;
var G__23933 = n;
var G__23934 = o;
var G__23935 = p;
var G__23936 = q;
var G__23937 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__23920,G__23921,G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937) : self__.afn.call(null,G__23920,G__23921,G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__23938 = a;
var G__23939 = b;
var G__23940 = c;
var G__23941 = d;
var G__23942 = e;
var G__23943 = f;
var G__23944 = g;
var G__23945 = h;
var G__23946 = i;
var G__23947 = j;
var G__23948 = k;
var G__23949 = l;
var G__23950 = m;
var G__23951 = n;
var G__23952 = o;
var G__23953 = p;
var G__23954 = q;
var G__23955 = r;
var G__23956 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23938,G__23939,G__23940,G__23941,G__23942,G__23943,G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956) : self__.afn.call(null,G__23938,G__23939,G__23940,G__23941,G__23942,G__23943,G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__23957 = a;
var G__23958 = b;
var G__23959 = c;
var G__23960 = d;
var G__23961 = e;
var G__23962 = f;
var G__23963 = g;
var G__23964 = h;
var G__23965 = i;
var G__23966 = j;
var G__23967 = k;
var G__23968 = l;
var G__23969 = m;
var G__23970 = n;
var G__23971 = o;
var G__23972 = p;
var G__23973 = q;
var G__23974 = r;
var G__23975 = s;
var G__23976 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970,G__23971,G__23972,G__23973,G__23974,G__23975,G__23976) : self__.afn.call(null,G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970,G__23971,G__23972,G__23973,G__23974,G__23975,G__23976));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__23977 = self__.afn;
var G__23978 = a;
var G__23979 = b;
var G__23980 = c;
var G__23981 = d;
var G__23982 = e;
var G__23983 = f;
var G__23984 = g;
var G__23985 = h;
var G__23986 = i;
var G__23987 = j;
var G__23988 = k;
var G__23989 = l;
var G__23990 = m;
var G__23991 = n;
var G__23992 = o;
var G__23993 = p;
var G__23994 = q;
var G__23995 = r;
var G__23996 = s;
var G__23997 = t;
var G__23998 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985,G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998) : cljs.core.apply.call(null,G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985,G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__24003 = o;
if(G__24003){
var bit__16826__auto__ = (G__24003.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__16826__auto__) || (G__24003.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__24003.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24003);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24003);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__16133__auto__ = !((o == null));
if(and__16133__auto__){
var G__24007 = o;
if(G__24007){
var bit__16826__auto__ = (G__24007.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16826__auto__) || (G__24007.cljs$core$IMeta$)){
return true;
} else {
if((!G__24007.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24007);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24007);
}
} else {
return and__16133__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__24010__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24011 = ret;
var G__24012 = cljs.core.first(ks);
var G__24013 = cljs.core.next(ks);
coll = G__24011;
k = G__24012;
ks = G__24013;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24010 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24014__i = 0, G__24014__a = new Array(arguments.length -  2);
while (G__24014__i < G__24014__a.length) {G__24014__a[G__24014__i] = arguments[G__24014__i + 2]; ++G__24014__i;}
  ks = new cljs.core.IndexedSeq(G__24014__a,0);
} 
return G__24010__delegate.call(this,coll,k,ks);};
G__24010.cljs$lang$maxFixedArity = 2;
G__24010.cljs$lang$applyTo = (function (arglist__24015){
var coll = cljs.core.first(arglist__24015);
arglist__24015 = cljs.core.next(arglist__24015);
var k = cljs.core.first(arglist__24015);
var ks = cljs.core.rest(arglist__24015);
return G__24010__delegate(coll,k,ks);
});
G__24010.cljs$core$IFn$_invoke$arity$variadic = G__24010__delegate;
return G__24010;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__24016 = null;
if (arguments.length > 2) {
var G__24017__i = 0, G__24017__a = new Array(arguments.length -  2);
while (G__24017__i < G__24017__a.length) {G__24017__a[G__24017__i] = arguments[G__24017__i + 2]; ++G__24017__i;}
G__24016 = new cljs.core.IndexedSeq(G__24017__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24019 = x;
if(G__24019){
var bit__16826__auto__ = (G__24019.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__16826__auto__) || (G__24019.cljs$core$ICollection$)){
return true;
} else {
if((!G__24019.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24019);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24019);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24021 = x;
if(G__24021){
var bit__16826__auto__ = (G__24021.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__16826__auto__) || (G__24021.cljs$core$ISet$)){
return true;
} else {
if((!G__24021.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24021);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24021);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__24023 = x;
if(G__24023){
var bit__16826__auto__ = (G__24023.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__16826__auto__) || (G__24023.cljs$core$IAssociative$)){
return true;
} else {
if((!G__24023.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24023);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24023);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__24025 = x;
if(G__24025){
var bit__16826__auto__ = (G__24025.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__16826__auto__) || (G__24025.cljs$core$ISequential$)){
return true;
} else {
if((!G__24025.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24025);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24025);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__24027 = x;
if(G__24027){
var bit__16826__auto__ = (G__24027.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__16826__auto__) || (G__24027.cljs$core$ISorted$)){
return true;
} else {
if((!G__24027.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24027);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24027);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__24029 = x;
if(G__24029){
var bit__16826__auto__ = (G__24029.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16826__auto__) || (G__24029.cljs$core$IReduce$)){
return true;
} else {
if((!G__24029.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24029);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24029);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24031 = x;
if(G__24031){
var bit__16826__auto__ = (G__24031.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16826__auto__) || (G__24031.cljs$core$IMap$)){
return true;
} else {
if((!G__24031.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24031);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24031);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__24033 = x;
if(G__24033){
var bit__16826__auto__ = (G__24033.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__16826__auto__) || (G__24033.cljs$core$IVector$)){
return true;
} else {
if((!G__24033.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24033);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24033);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__24035 = x;
if(G__24035){
var bit__16819__auto__ = (G__24035.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__16819__auto__) || (G__24035.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj24041 = {};
return obj24041;
});
var js_obj__1 = (function() { 
var G__24044__delegate = function (keyvals){
var G__24042 = goog.object.create;
var G__24043 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__24042,G__24043) : cljs.core.apply.call(null,G__24042,G__24043));
};
var G__24044 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24045__i = 0, G__24045__a = new Array(arguments.length -  0);
while (G__24045__i < G__24045__a.length) {G__24045__a[G__24045__i] = arguments[G__24045__i + 0]; ++G__24045__i;}
  keyvals = new cljs.core.IndexedSeq(G__24045__a,0);
} 
return G__24044__delegate.call(this,keyvals);};
G__24044.cljs$lang$maxFixedArity = 0;
G__24044.cljs$lang$applyTo = (function (arglist__24046){
var keyvals = cljs.core.seq(arglist__24046);
return G__24044__delegate(keyvals);
});
G__24044.cljs$core$IFn$_invoke$arity$variadic = G__24044__delegate;
return G__24044;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__24047 = null;
if (arguments.length > 0) {
var G__24048__i = 0, G__24048__a = new Array(arguments.length -  0);
while (G__24048__i < G__24048__a.length) {G__24048__a[G__24048__i] = arguments[G__24048__i + 0]; ++G__24048__i;}
G__24047 = new cljs.core.IndexedSeq(G__24048__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__24047);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__24051_24053 = obj;
var G__24052_24054 = ((function (G__24051_24053,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__24051_24053,keys))
;
goog.object.forEach(G__24051_24053,G__24052_24054);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24055 = (i__$1 + (1));
var G__24056 = (j__$1 + (1));
var G__24057 = (len__$1 - (1));
i__$1 = G__24055;
j__$1 = G__24056;
len__$1 = G__24057;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24058 = (i__$1 - (1));
var G__24059 = (j__$1 - (1));
var G__24060 = (len__$1 - (1));
i__$1 = G__24058;
j__$1 = G__24059;
len__$1 = G__24060;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj24062 = {};
return obj24062;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__24064 = s;
if(G__24064){
var bit__16826__auto__ = (G__24064.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__24064.cljs$core$ISeq$)){
return true;
} else {
if((!G__24064.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24064);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24064);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__24066 = s;
if(G__24066){
var bit__16826__auto__ = (G__24066.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16826__auto__) || (G__24066.cljs$core$ISeqable$)){
return true;
} else {
if((!G__24066.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24066);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24066);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__16145__auto__ = cljs.core.fn_QMARK_(f);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var G__24070 = f;
if(G__24070){
var bit__16826__auto__ = (G__24070.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__16826__auto__) || (G__24070.cljs$core$IFn$)){
return true;
} else {
if((!G__24070.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24070);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24070);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__24083 = n;
return isNaN(G__24083);
})())) && (!((n === Infinity))) && (((function (){var G__24084 = n;
return parseFloat(G__24084);
})() === (function (){var G__24085 = n;
var G__24086 = (10);
return parseInt(G__24085,G__24086);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__24087__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__24088 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__24089 = etc;
s = G__24088;
xs = G__24089;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__24087 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24090__i = 0, G__24090__a = new Array(arguments.length -  2);
while (G__24090__i < G__24090__a.length) {G__24090__a[G__24090__i] = arguments[G__24090__i + 2]; ++G__24090__i;}
  more = new cljs.core.IndexedSeq(G__24090__a,0);
} 
return G__24087__delegate.call(this,x,y,more);};
G__24087.cljs$lang$maxFixedArity = 2;
G__24087.cljs$lang$applyTo = (function (arglist__24091){
var x = cljs.core.first(arglist__24091);
arglist__24091 = cljs.core.next(arglist__24091);
var y = cljs.core.first(arglist__24091);
var more = cljs.core.rest(arglist__24091);
return G__24087__delegate(x,y,more);
});
G__24087.cljs$core$IFn$_invoke$arity$variadic = G__24087__delegate;
return G__24087;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__24092 = null;
if (arguments.length > 2) {
var G__24093__i = 0, G__24093__a = new Array(arguments.length -  2);
while (G__24093__i < G__24093__a.length) {G__24093__a[G__24093__i] = arguments[G__24093__i + 2]; ++G__24093__i;}
G__24092 = new cljs.core.IndexedSeq(G__24093__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__24097 = x;
if(G__24097){
var bit__16819__auto__ = (G__24097.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__16819__auto__) || (G__24097.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__24098 = x;
var G__24099 = y;
return goog.array.defaultCompare(G__24098,G__24099);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__24104 = xs;
var G__24105 = ys;
var G__24106 = len;
var G__24107 = (n + (1));
xs = G__24104;
ys = G__24105;
len = G__24106;
n = G__24107;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__24112 = x;
var G__24113 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24112,G__24113) : f.call(null,G__24112,G__24113));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24114 = y;
var G__24115 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24114,G__24115) : f.call(null,G__24114,G__24115));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__24121 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24121) : cljs.core.to_array.call(null,G__24121));
})();
var G__24122_24124 = a;
var G__24123_24125 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__24122_24124,G__24123_24125);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__24131 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24131) : keyfn.call(null,G__24131));
})(),(function (){var G__24132 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24132) : keyfn.call(null,G__24132));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__24138 = f;
var G__24139 = cljs.core.first(s);
var G__24140 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24138,G__24139,G__24140) : cljs.core.reduce.call(null,G__24138,G__24139,G__24140));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__24141 = val__$1;
var G__24142 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24141,G__24142) : f.call(null,G__24141,G__24142));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24143 = nval;
var G__24144 = cljs.core.next(coll__$1);
val__$1 = G__24143;
coll__$1 = G__24144;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__24148 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24148) : cljs.core.to_array.call(null,G__24148));
})();
var G__24149_24151 = a;
goog.array.shuffle(G__24149_24151);

var G__24150 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__24150) : cljs.core.vec.call(null,G__24150));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__24154 = coll;
if(G__24154){
var bit__16819__auto__ = (G__24154.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16819__auto__) || (G__24154.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__24155 = coll;
if(G__24155){
var bit__16819__auto__ = (G__24155.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16819__auto__) || (G__24155.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__24164 = null;
var G__24164__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__24164__1 = (function (x){
var G__24161 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__24161) : cf.call(null,G__24161));
});
var G__24164__2 = (function (x,y){
var G__24162 = x;
var G__24163 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24162,G__24163) : f.call(null,G__24162,G__24163));
});
G__24164 = function(x,y){
switch(arguments.length){
case 0:
return G__24164__0.call(this);
case 1:
return G__24164__1.call(this,x);
case 2:
return G__24164__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24164.cljs$core$IFn$_invoke$arity$0 = G__24164__0;
G__24164.cljs$core$IFn$_invoke$arity$1 = G__24164__1;
G__24164.cljs$core$IFn$_invoke$arity$2 = G__24164__2;
return G__24164;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__24171 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24171) : xform.call(null,G__24171));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__24172 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__24172) : f__$1.call(null,G__24172));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__24173__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__24173 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24174__i = 0, G__24174__a = new Array(arguments.length -  2);
while (G__24174__i < G__24174__a.length) {G__24174__a[G__24174__i] = arguments[G__24174__i + 2]; ++G__24174__i;}
  more = new cljs.core.IndexedSeq(G__24174__a,0);
} 
return G__24173__delegate.call(this,x,y,more);};
G__24173.cljs$lang$maxFixedArity = 2;
G__24173.cljs$lang$applyTo = (function (arglist__24175){
var x = cljs.core.first(arglist__24175);
arglist__24175 = cljs.core.next(arglist__24175);
var y = cljs.core.first(arglist__24175);
var more = cljs.core.rest(arglist__24175);
return G__24173__delegate(x,y,more);
});
G__24173.cljs$core$IFn$_invoke$arity$variadic = G__24173__delegate;
return G__24173;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__24176 = null;
if (arguments.length > 2) {
var G__24177__i = 0, G__24177__a = new Array(arguments.length -  2);
while (G__24177__i < G__24177__a.length) {G__24177__a[G__24177__i] = arguments[G__24177__i + 2]; ++G__24177__i;}
G__24176 = new cljs.core.IndexedSeq(G__24177__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24176);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__24178__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__24178 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24179__i = 0, G__24179__a = new Array(arguments.length -  2);
while (G__24179__i < G__24179__a.length) {G__24179__a[G__24179__i] = arguments[G__24179__i + 2]; ++G__24179__i;}
  more = new cljs.core.IndexedSeq(G__24179__a,0);
} 
return G__24178__delegate.call(this,x,y,more);};
G__24178.cljs$lang$maxFixedArity = 2;
G__24178.cljs$lang$applyTo = (function (arglist__24180){
var x = cljs.core.first(arglist__24180);
arglist__24180 = cljs.core.next(arglist__24180);
var y = cljs.core.first(arglist__24180);
var more = cljs.core.rest(arglist__24180);
return G__24178__delegate(x,y,more);
});
G__24178.cljs$core$IFn$_invoke$arity$variadic = G__24178__delegate;
return G__24178;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__24181 = null;
if (arguments.length > 2) {
var G__24182__i = 0, G__24182__a = new Array(arguments.length -  2);
while (G__24182__i < G__24182__a.length) {G__24182__a[G__24182__i] = arguments[G__24182__i + 2]; ++G__24182__i;}
G__24181 = new cljs.core.IndexedSeq(G__24182__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24181);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__24183__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__24183 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24184__i = 0, G__24184__a = new Array(arguments.length -  2);
while (G__24184__i < G__24184__a.length) {G__24184__a[G__24184__i] = arguments[G__24184__i + 2]; ++G__24184__i;}
  more = new cljs.core.IndexedSeq(G__24184__a,0);
} 
return G__24183__delegate.call(this,x,y,more);};
G__24183.cljs$lang$maxFixedArity = 2;
G__24183.cljs$lang$applyTo = (function (arglist__24185){
var x = cljs.core.first(arglist__24185);
arglist__24185 = cljs.core.next(arglist__24185);
var y = cljs.core.first(arglist__24185);
var more = cljs.core.rest(arglist__24185);
return G__24183__delegate(x,y,more);
});
G__24183.cljs$core$IFn$_invoke$arity$variadic = G__24183__delegate;
return G__24183;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__24186 = null;
if (arguments.length > 2) {
var G__24187__i = 0, G__24187__a = new Array(arguments.length -  2);
while (G__24187__i < G__24187__a.length) {G__24187__a[G__24187__i] = arguments[G__24187__i + 2]; ++G__24187__i;}
G__24186 = new cljs.core.IndexedSeq(G__24187__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__24192__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24192 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24193__i = 0, G__24193__a = new Array(arguments.length -  2);
while (G__24193__i < G__24193__a.length) {G__24193__a[G__24193__i] = arguments[G__24193__i + 2]; ++G__24193__i;}
  more = new cljs.core.IndexedSeq(G__24193__a,0);
} 
return G__24192__delegate.call(this,x,y,more);};
G__24192.cljs$lang$maxFixedArity = 2;
G__24192.cljs$lang$applyTo = (function (arglist__24194){
var x = cljs.core.first(arglist__24194);
arglist__24194 = cljs.core.next(arglist__24194);
var y = cljs.core.first(arglist__24194);
var more = cljs.core.rest(arglist__24194);
return G__24192__delegate(x,y,more);
});
G__24192.cljs$core$IFn$_invoke$arity$variadic = G__24192__delegate;
return G__24192;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__24195 = null;
if (arguments.length > 2) {
var G__24196__i = 0, G__24196__a = new Array(arguments.length -  2);
while (G__24196__i < G__24196__a.length) {G__24196__a[G__24196__i] = arguments[G__24196__i + 2]; ++G__24196__i;}
G__24195 = new cljs.core.IndexedSeq(G__24196__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__24197__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__24198 = y;
var G__24199 = cljs.core.first(more);
var G__24200 = cljs.core.next(more);
x = G__24198;
y = G__24199;
more = G__24200;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24197 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24201__i = 0, G__24201__a = new Array(arguments.length -  2);
while (G__24201__i < G__24201__a.length) {G__24201__a[G__24201__i] = arguments[G__24201__i + 2]; ++G__24201__i;}
  more = new cljs.core.IndexedSeq(G__24201__a,0);
} 
return G__24197__delegate.call(this,x,y,more);};
G__24197.cljs$lang$maxFixedArity = 2;
G__24197.cljs$lang$applyTo = (function (arglist__24202){
var x = cljs.core.first(arglist__24202);
arglist__24202 = cljs.core.next(arglist__24202);
var y = cljs.core.first(arglist__24202);
var more = cljs.core.rest(arglist__24202);
return G__24197__delegate(x,y,more);
});
G__24197.cljs$core$IFn$_invoke$arity$variadic = G__24197__delegate;
return G__24197;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__24203 = null;
if (arguments.length > 2) {
var G__24204__i = 0, G__24204__a = new Array(arguments.length -  2);
while (G__24204__i < G__24204__a.length) {G__24204__a[G__24204__i] = arguments[G__24204__i + 2]; ++G__24204__i;}
G__24203 = new cljs.core.IndexedSeq(G__24204__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__24205__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__24206 = y;
var G__24207 = cljs.core.first(more);
var G__24208 = cljs.core.next(more);
x = G__24206;
y = G__24207;
more = G__24208;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24205 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24209__i = 0, G__24209__a = new Array(arguments.length -  2);
while (G__24209__i < G__24209__a.length) {G__24209__a[G__24209__i] = arguments[G__24209__i + 2]; ++G__24209__i;}
  more = new cljs.core.IndexedSeq(G__24209__a,0);
} 
return G__24205__delegate.call(this,x,y,more);};
G__24205.cljs$lang$maxFixedArity = 2;
G__24205.cljs$lang$applyTo = (function (arglist__24210){
var x = cljs.core.first(arglist__24210);
arglist__24210 = cljs.core.next(arglist__24210);
var y = cljs.core.first(arglist__24210);
var more = cljs.core.rest(arglist__24210);
return G__24205__delegate(x,y,more);
});
G__24205.cljs$core$IFn$_invoke$arity$variadic = G__24205__delegate;
return G__24205;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__24211 = null;
if (arguments.length > 2) {
var G__24212__i = 0, G__24212__a = new Array(arguments.length -  2);
while (G__24212__i < G__24212__a.length) {G__24212__a[G__24212__i] = arguments[G__24212__i + 2]; ++G__24212__i;}
G__24211 = new cljs.core.IndexedSeq(G__24212__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24211);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__24213__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__24214 = y;
var G__24215 = cljs.core.first(more);
var G__24216 = cljs.core.next(more);
x = G__24214;
y = G__24215;
more = G__24216;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24213 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24217__i = 0, G__24217__a = new Array(arguments.length -  2);
while (G__24217__i < G__24217__a.length) {G__24217__a[G__24217__i] = arguments[G__24217__i + 2]; ++G__24217__i;}
  more = new cljs.core.IndexedSeq(G__24217__a,0);
} 
return G__24213__delegate.call(this,x,y,more);};
G__24213.cljs$lang$maxFixedArity = 2;
G__24213.cljs$lang$applyTo = (function (arglist__24218){
var x = cljs.core.first(arglist__24218);
arglist__24218 = cljs.core.next(arglist__24218);
var y = cljs.core.first(arglist__24218);
var more = cljs.core.rest(arglist__24218);
return G__24213__delegate(x,y,more);
});
G__24213.cljs$core$IFn$_invoke$arity$variadic = G__24213__delegate;
return G__24213;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__24219 = null;
if (arguments.length > 2) {
var G__24220__i = 0, G__24220__a = new Array(arguments.length -  2);
while (G__24220__i < G__24220__a.length) {G__24220__a[G__24220__i] = arguments[G__24220__i + 2]; ++G__24220__i;}
G__24219 = new cljs.core.IndexedSeq(G__24220__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24219);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__24221__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__24222 = y;
var G__24223 = cljs.core.first(more);
var G__24224 = cljs.core.next(more);
x = G__24222;
y = G__24223;
more = G__24224;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24221 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24225__i = 0, G__24225__a = new Array(arguments.length -  2);
while (G__24225__i < G__24225__a.length) {G__24225__a[G__24225__i] = arguments[G__24225__i + 2]; ++G__24225__i;}
  more = new cljs.core.IndexedSeq(G__24225__a,0);
} 
return G__24221__delegate.call(this,x,y,more);};
G__24221.cljs$lang$maxFixedArity = 2;
G__24221.cljs$lang$applyTo = (function (arglist__24226){
var x = cljs.core.first(arglist__24226);
arglist__24226 = cljs.core.next(arglist__24226);
var y = cljs.core.first(arglist__24226);
var more = cljs.core.rest(arglist__24226);
return G__24221__delegate(x,y,more);
});
G__24221.cljs$core$IFn$_invoke$arity$variadic = G__24221__delegate;
return G__24221;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__24227 = null;
if (arguments.length > 2) {
var G__24228__i = 0, G__24228__a = new Array(arguments.length -  2);
while (G__24228__i < G__24228__a.length) {G__24228__a[G__24228__i] = arguments[G__24228__i + 2]; ++G__24228__i;}
G__24227 = new cljs.core.IndexedSeq(G__24228__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__16462__auto__ = x;
var y__16463__auto__ = y;
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
});
var max__3 = (function() { 
var G__24229__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__16462__auto__ = x;
var y__16463__auto__ = y;
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
})(),more);
};
var G__24229 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24230__i = 0, G__24230__a = new Array(arguments.length -  2);
while (G__24230__i < G__24230__a.length) {G__24230__a[G__24230__i] = arguments[G__24230__i + 2]; ++G__24230__i;}
  more = new cljs.core.IndexedSeq(G__24230__a,0);
} 
return G__24229__delegate.call(this,x,y,more);};
G__24229.cljs$lang$maxFixedArity = 2;
G__24229.cljs$lang$applyTo = (function (arglist__24231){
var x = cljs.core.first(arglist__24231);
arglist__24231 = cljs.core.next(arglist__24231);
var y = cljs.core.first(arglist__24231);
var more = cljs.core.rest(arglist__24231);
return G__24229__delegate(x,y,more);
});
G__24229.cljs$core$IFn$_invoke$arity$variadic = G__24229__delegate;
return G__24229;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__24232 = null;
if (arguments.length > 2) {
var G__24233__i = 0, G__24233__a = new Array(arguments.length -  2);
while (G__24233__i < G__24233__a.length) {G__24233__a[G__24233__i] = arguments[G__24233__i + 2]; ++G__24233__i;}
G__24232 = new cljs.core.IndexedSeq(G__24233__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24232);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__16469__auto__ = x;
var y__16470__auto__ = y;
return ((x__16469__auto__ < y__16470__auto__) ? x__16469__auto__ : y__16470__auto__);
});
var min__3 = (function() { 
var G__24234__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__16469__auto__ = x;
var y__16470__auto__ = y;
return ((x__16469__auto__ < y__16470__auto__) ? x__16469__auto__ : y__16470__auto__);
})(),more);
};
var G__24234 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24235__i = 0, G__24235__a = new Array(arguments.length -  2);
while (G__24235__i < G__24235__a.length) {G__24235__a[G__24235__i] = arguments[G__24235__i + 2]; ++G__24235__i;}
  more = new cljs.core.IndexedSeq(G__24235__a,0);
} 
return G__24234__delegate.call(this,x,y,more);};
G__24234.cljs$lang$maxFixedArity = 2;
G__24234.cljs$lang$applyTo = (function (arglist__24236){
var x = cljs.core.first(arglist__24236);
arglist__24236 = cljs.core.next(arglist__24236);
var y = cljs.core.first(arglist__24236);
var more = cljs.core.rest(arglist__24236);
return G__24234__delegate(x,y,more);
});
G__24234.cljs$core$IFn$_invoke$arity$variadic = G__24234__delegate;
return G__24234;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__24237 = null;
if (arguments.length > 2) {
var G__24238__i = 0, G__24238__a = new Array(arguments.length -  2);
while (G__24238__i < G__24238__a.length) {G__24238__a[G__24238__i] = arguments[G__24238__i + 2]; ++G__24238__i;}
G__24237 = new cljs.core.IndexedSeq(G__24238__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__24239__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__24239 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24240__i = 0, G__24240__a = new Array(arguments.length -  2);
while (G__24240__i < G__24240__a.length) {G__24240__a[G__24240__i] = arguments[G__24240__i + 2]; ++G__24240__i;}
  more = new cljs.core.IndexedSeq(G__24240__a,0);
} 
return G__24239__delegate.call(this,x,y,more);};
G__24239.cljs$lang$maxFixedArity = 2;
G__24239.cljs$lang$applyTo = (function (arglist__24241){
var x = cljs.core.first(arglist__24241);
arglist__24241 = cljs.core.next(arglist__24241);
var y = cljs.core.first(arglist__24241);
var more = cljs.core.rest(arglist__24241);
return G__24239__delegate(x,y,more);
});
G__24239.cljs$core$IFn$_invoke$arity$variadic = G__24239__delegate;
return G__24239;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__24242 = null;
if (arguments.length > 2) {
var G__24243__i = 0, G__24243__a = new Array(arguments.length -  2);
while (G__24243__i < G__24243__a.length) {G__24243__a[G__24243__i] = arguments[G__24243__i + 2]; ++G__24243__i;}
G__24242 = new cljs.core.IndexedSeq(G__24243__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__24244__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__24244 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24245__i = 0, G__24245__a = new Array(arguments.length -  2);
while (G__24245__i < G__24245__a.length) {G__24245__a[G__24245__i] = arguments[G__24245__i + 2]; ++G__24245__i;}
  more = new cljs.core.IndexedSeq(G__24245__a,0);
} 
return G__24244__delegate.call(this,x,y,more);};
G__24244.cljs$lang$maxFixedArity = 2;
G__24244.cljs$lang$applyTo = (function (arglist__24246){
var x = cljs.core.first(arglist__24246);
arglist__24246 = cljs.core.next(arglist__24246);
var y = cljs.core.first(arglist__24246);
var more = cljs.core.rest(arglist__24246);
return G__24244__delegate(x,y,more);
});
G__24244.cljs$core$IFn$_invoke$arity$variadic = G__24244__delegate;
return G__24244;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__24247 = null;
if (arguments.length > 2) {
var G__24248__i = 0, G__24248__a = new Array(arguments.length -  2);
while (G__24248__i < G__24248__a.length) {G__24248__a[G__24248__i] = arguments[G__24248__i + 2]; ++G__24248__i;}
G__24247 = new cljs.core.IndexedSeq(G__24248__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__24253__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24253 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24254__i = 0, G__24254__a = new Array(arguments.length -  2);
while (G__24254__i < G__24254__a.length) {G__24254__a[G__24254__i] = arguments[G__24254__i + 2]; ++G__24254__i;}
  more = new cljs.core.IndexedSeq(G__24254__a,0);
} 
return G__24253__delegate.call(this,x,y,more);};
G__24253.cljs$lang$maxFixedArity = 2;
G__24253.cljs$lang$applyTo = (function (arglist__24255){
var x = cljs.core.first(arglist__24255);
arglist__24255 = cljs.core.next(arglist__24255);
var y = cljs.core.first(arglist__24255);
var more = cljs.core.rest(arglist__24255);
return G__24253__delegate(x,y,more);
});
G__24253.cljs$core$IFn$_invoke$arity$variadic = G__24253__delegate;
return G__24253;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__24256 = null;
if (arguments.length > 2) {
var G__24257__i = 0, G__24257__a = new Array(arguments.length -  2);
while (G__24257__i < G__24257__a.length) {G__24257__a[G__24257__i] = arguments[G__24257__i + 2]; ++G__24257__i;}
G__24256 = new cljs.core.IndexedSeq(G__24257__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24256);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__24258__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__24258 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24259__i = 0, G__24259__a = new Array(arguments.length -  2);
while (G__24259__i < G__24259__a.length) {G__24259__a[G__24259__i] = arguments[G__24259__i + 2]; ++G__24259__i;}
  more = new cljs.core.IndexedSeq(G__24259__a,0);
} 
return G__24258__delegate.call(this,x,y,more);};
G__24258.cljs$lang$maxFixedArity = 2;
G__24258.cljs$lang$applyTo = (function (arglist__24260){
var x = cljs.core.first(arglist__24260);
arglist__24260 = cljs.core.next(arglist__24260);
var y = cljs.core.first(arglist__24260);
var more = cljs.core.rest(arglist__24260);
return G__24258__delegate(x,y,more);
});
G__24258.cljs$core$IFn$_invoke$arity$variadic = G__24258__delegate;
return G__24258;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__24261 = null;
if (arguments.length > 2) {
var G__24262__i = 0, G__24262__a = new Array(arguments.length -  2);
while (G__24262__i < G__24262__a.length) {G__24262__a[G__24262__i] = arguments[G__24262__i + 2]; ++G__24262__i;}
G__24261 = new cljs.core.IndexedSeq(G__24262__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24261);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__24263__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__24263 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24264__i = 0, G__24264__a = new Array(arguments.length -  2);
while (G__24264__i < G__24264__a.length) {G__24264__a[G__24264__i] = arguments[G__24264__i + 2]; ++G__24264__i;}
  more = new cljs.core.IndexedSeq(G__24264__a,0);
} 
return G__24263__delegate.call(this,x,y,more);};
G__24263.cljs$lang$maxFixedArity = 2;
G__24263.cljs$lang$applyTo = (function (arglist__24265){
var x = cljs.core.first(arglist__24265);
arglist__24265 = cljs.core.next(arglist__24265);
var y = cljs.core.first(arglist__24265);
var more = cljs.core.rest(arglist__24265);
return G__24263__delegate(x,y,more);
});
G__24263.cljs$core$IFn$_invoke$arity$variadic = G__24263__delegate;
return G__24263;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__24266 = null;
if (arguments.length > 2) {
var G__24267__i = 0, G__24267__a = new Array(arguments.length -  2);
while (G__24267__i < G__24267__a.length) {G__24267__a[G__24267__i] = arguments[G__24267__i + 2]; ++G__24267__i;}
G__24266 = new cljs.core.IndexedSeq(G__24267__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24266);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__24270 = x;
var G__24271 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__24270,G__24271) : cljs.core.mod.call(null,G__24270,G__24271));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__24272__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__24272 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24273__i = 0, G__24273__a = new Array(arguments.length -  2);
while (G__24273__i < G__24273__a.length) {G__24273__a[G__24273__i] = arguments[G__24273__i + 2]; ++G__24273__i;}
  more = new cljs.core.IndexedSeq(G__24273__a,0);
} 
return G__24272__delegate.call(this,x,y,more);};
G__24272.cljs$lang$maxFixedArity = 2;
G__24272.cljs$lang$applyTo = (function (arglist__24274){
var x = cljs.core.first(arglist__24274);
arglist__24274 = cljs.core.next(arglist__24274);
var y = cljs.core.first(arglist__24274);
var more = cljs.core.rest(arglist__24274);
return G__24272__delegate(x,y,more);
});
G__24272.cljs$core$IFn$_invoke$arity$variadic = G__24272__delegate;
return G__24272;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__24275 = null;
if (arguments.length > 2) {
var G__24276__i = 0, G__24276__a = new Array(arguments.length -  2);
while (G__24276__i < G__24276__a.length) {G__24276__a[G__24276__i] = arguments[G__24276__i + 2]; ++G__24276__i;}
G__24275 = new cljs.core.IndexedSeq(G__24276__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__24277__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__24277 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24278__i = 0, G__24278__a = new Array(arguments.length -  2);
while (G__24278__i < G__24278__a.length) {G__24278__a[G__24278__i] = arguments[G__24278__i + 2]; ++G__24278__i;}
  more = new cljs.core.IndexedSeq(G__24278__a,0);
} 
return G__24277__delegate.call(this,x,y,more);};
G__24277.cljs$lang$maxFixedArity = 2;
G__24277.cljs$lang$applyTo = (function (arglist__24279){
var x = cljs.core.first(arglist__24279);
arglist__24279 = cljs.core.next(arglist__24279);
var y = cljs.core.first(arglist__24279);
var more = cljs.core.rest(arglist__24279);
return G__24277__delegate(x,y,more);
});
G__24277.cljs$core$IFn$_invoke$arity$variadic = G__24277__delegate;
return G__24277;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__24280 = null;
if (arguments.length > 2) {
var G__24281__i = 0, G__24281__a = new Array(arguments.length -  2);
while (G__24281__i < G__24281__a.length) {G__24281__a[G__24281__i] = arguments[G__24281__i + 2]; ++G__24281__i;}
G__24280 = new cljs.core.IndexedSeq(G__24281__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24280);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__24284 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24284) : Math.floor.call(null,G__24284));
} else {
var G__24285 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24285) : Math.ceil.call(null,G__24285));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__24286__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__24286 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24287__i = 0, G__24287__a = new Array(arguments.length -  2);
while (G__24287__i < G__24287__a.length) {G__24287__a[G__24287__i] = arguments[G__24287__i + 2]; ++G__24287__i;}
  more = new cljs.core.IndexedSeq(G__24287__a,0);
} 
return G__24286__delegate.call(this,x,y,more);};
G__24286.cljs$lang$maxFixedArity = 2;
G__24286.cljs$lang$applyTo = (function (arglist__24288){
var x = cljs.core.first(arglist__24288);
arglist__24288 = cljs.core.next(arglist__24288);
var y = cljs.core.first(arglist__24288);
var more = cljs.core.rest(arglist__24288);
return G__24286__delegate(x,y,more);
});
G__24286.cljs$core$IFn$_invoke$arity$variadic = G__24286__delegate;
return G__24286;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__24289 = null;
if (arguments.length > 2) {
var G__24290__i = 0, G__24290__a = new Array(arguments.length -  2);
while (G__24290__i < G__24290__a.length) {G__24290__a[G__24290__i] = arguments[G__24290__i + 2]; ++G__24290__i;}
G__24289 = new cljs.core.IndexedSeq(G__24290__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24289);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__24291__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__24291 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24292__i = 0, G__24292__a = new Array(arguments.length -  2);
while (G__24292__i < G__24292__a.length) {G__24292__a[G__24292__i] = arguments[G__24292__i + 2]; ++G__24292__i;}
  more = new cljs.core.IndexedSeq(G__24292__a,0);
} 
return G__24291__delegate.call(this,x,y,more);};
G__24291.cljs$lang$maxFixedArity = 2;
G__24291.cljs$lang$applyTo = (function (arglist__24293){
var x = cljs.core.first(arglist__24293);
arglist__24293 = cljs.core.next(arglist__24293);
var y = cljs.core.first(arglist__24293);
var more = cljs.core.rest(arglist__24293);
return G__24291__delegate(x,y,more);
});
G__24291.cljs$core$IFn$_invoke$arity$variadic = G__24291__delegate;
return G__24291;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__24294 = null;
if (arguments.length > 2) {
var G__24295__i = 0, G__24295__a = new Array(arguments.length -  2);
while (G__24295__i < G__24295__a.length) {G__24295__a[G__24295__i] = arguments[G__24295__i + 2]; ++G__24295__i;}
G__24294 = new cljs.core.IndexedSeq(G__24295__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24294);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__24296__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__24296 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24297__i = 0, G__24297__a = new Array(arguments.length -  2);
while (G__24297__i < G__24297__a.length) {G__24297__a[G__24297__i] = arguments[G__24297__i + 2]; ++G__24297__i;}
  more = new cljs.core.IndexedSeq(G__24297__a,0);
} 
return G__24296__delegate.call(this,x,y,more);};
G__24296.cljs$lang$maxFixedArity = 2;
G__24296.cljs$lang$applyTo = (function (arglist__24298){
var x = cljs.core.first(arglist__24298);
arglist__24298 = cljs.core.next(arglist__24298);
var y = cljs.core.first(arglist__24298);
var more = cljs.core.rest(arglist__24298);
return G__24296__delegate(x,y,more);
});
G__24296.cljs$core$IFn$_invoke$arity$variadic = G__24296__delegate;
return G__24296;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__24299 = null;
if (arguments.length > 2) {
var G__24300__i = 0, G__24300__a = new Array(arguments.length -  2);
while (G__24300__i < G__24300__a.length) {G__24300__a[G__24300__i] = arguments[G__24300__i + 2]; ++G__24300__i;}
G__24299 = new cljs.core.IndexedSeq(G__24300__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__24301__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__24301 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24302__i = 0, G__24302__a = new Array(arguments.length -  2);
while (G__24302__i < G__24302__a.length) {G__24302__a[G__24302__i] = arguments[G__24302__i + 2]; ++G__24302__i;}
  more = new cljs.core.IndexedSeq(G__24302__a,0);
} 
return G__24301__delegate.call(this,x,y,more);};
G__24301.cljs$lang$maxFixedArity = 2;
G__24301.cljs$lang$applyTo = (function (arglist__24303){
var x = cljs.core.first(arglist__24303);
arglist__24303 = cljs.core.next(arglist__24303);
var y = cljs.core.first(arglist__24303);
var more = cljs.core.rest(arglist__24303);
return G__24301__delegate(x,y,more);
});
G__24301.cljs$core$IFn$_invoke$arity$variadic = G__24301__delegate;
return G__24301;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__24304 = null;
if (arguments.length > 2) {
var G__24305__i = 0, G__24305__a = new Array(arguments.length -  2);
while (G__24305__i < G__24305__a.length) {G__24305__a[G__24305__i] = arguments[G__24305__i + 2]; ++G__24305__i;}
G__24304 = new cljs.core.IndexedSeq(G__24305__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24304);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__24310__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24311 = y;
var G__24312 = cljs.core.first(more);
var G__24313 = cljs.core.next(more);
x = G__24311;
y = G__24312;
more = G__24313;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24310 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24314__i = 0, G__24314__a = new Array(arguments.length -  2);
while (G__24314__i < G__24314__a.length) {G__24314__a[G__24314__i] = arguments[G__24314__i + 2]; ++G__24314__i;}
  more = new cljs.core.IndexedSeq(G__24314__a,0);
} 
return G__24310__delegate.call(this,x,y,more);};
G__24310.cljs$lang$maxFixedArity = 2;
G__24310.cljs$lang$applyTo = (function (arglist__24315){
var x = cljs.core.first(arglist__24315);
arglist__24315 = cljs.core.next(arglist__24315);
var y = cljs.core.first(arglist__24315);
var more = cljs.core.rest(arglist__24315);
return G__24310__delegate(x,y,more);
});
G__24310.cljs$core$IFn$_invoke$arity$variadic = G__24310__delegate;
return G__24310;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__24316 = null;
if (arguments.length > 2) {
var G__24317__i = 0, G__24317__a = new Array(arguments.length -  2);
while (G__24317__i < G__24317__a.length) {G__24317__a[G__24317__i] = arguments[G__24317__i + 2]; ++G__24317__i;}
G__24316 = new cljs.core.IndexedSeq(G__24317__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24316);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__24318 = (n__$1 - (1));
var G__24319 = cljs.core.next(xs);
n__$1 = G__24318;
xs = G__24319;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__24323 = x;
return goog.string.buildString(G__24323);
}
});
var str__2 = (function() { 
var G__24324__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__24325 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__24326 = cljs.core.next(more);
sb = G__24325;
more = G__24326;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__24324 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__24327__i = 0, G__24327__a = new Array(arguments.length -  1);
while (G__24327__i < G__24327__a.length) {G__24327__a[G__24327__i] = arguments[G__24327__i + 1]; ++G__24327__i;}
  ys = new cljs.core.IndexedSeq(G__24327__a,0);
} 
return G__24324__delegate.call(this,x,ys);};
G__24324.cljs$lang$maxFixedArity = 1;
G__24324.cljs$lang$applyTo = (function (arglist__24328){
var x = cljs.core.first(arglist__24328);
var ys = cljs.core.rest(arglist__24328);
return G__24324__delegate(x,ys);
});
G__24324.cljs$core$IFn$_invoke$arity$variadic = G__24324__delegate;
return G__24324;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__24329 = null;
if (arguments.length > 1) {
var G__24330__i = 0, G__24330__a = new Array(arguments.length -  1);
while (G__24330__i < G__24330__a.length) {G__24330__a[G__24330__i] = arguments[G__24330__i + 1]; ++G__24330__i;}
G__24329 = new cljs.core.IndexedSeq(G__24330__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__24331 = cljs.core.next(xs);
var G__24332 = cljs.core.next(ys);
xs = G__24331;
ys = G__24332;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__24333 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__24334 = cljs.core.next(s);
res = G__24333;
s = G__24334;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__24339 = ((h + (cljs.core.hash((function (){var G__24337 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24337) : cljs.core.key.call(null,G__24337));
})()) ^ cljs.core.hash((function (){var G__24338 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24338) : cljs.core.val.call(null,G__24338));
})()))) % (4503599627370496));
var G__24340 = cljs.core.next(s);
h = G__24339;
s = G__24340;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__24341 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__24342 = cljs.core.next(s__$1);
h = G__24341;
s__$1 = G__24342;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__24353_24363 = cljs.core.seq(fn_map);
var chunk__24354_24364 = null;
var count__24355_24365 = (0);
var i__24356_24366 = (0);
while(true){
if((i__24356_24366 < count__24355_24365)){
var vec__24357_24367 = chunk__24354_24364.cljs$core$IIndexed$_nth$arity$2(null,i__24356_24366);
var key_name_24368 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24357_24367,(0),null);
var f_24369 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24357_24367,(1),null);
var str_name_24370 = (function (){var G__24358 = key_name_24368;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24358) : cljs.core.name.call(null,G__24358));
})();
(obj[str_name_24370] = f_24369);

var G__24371 = seq__24353_24363;
var G__24372 = chunk__24354_24364;
var G__24373 = count__24355_24365;
var G__24374 = (i__24356_24366 + (1));
seq__24353_24363 = G__24371;
chunk__24354_24364 = G__24372;
count__24355_24365 = G__24373;
i__24356_24366 = G__24374;
continue;
} else {
var temp__4126__auto___24375 = cljs.core.seq(seq__24353_24363);
if(temp__4126__auto___24375){
var seq__24353_24376__$1 = temp__4126__auto___24375;
if(cljs.core.chunked_seq_QMARK_(seq__24353_24376__$1)){
var c__16932__auto___24377 = (function (){var G__24359 = seq__24353_24376__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__24359) : cljs.core.chunk_first.call(null,G__24359));
})();
var G__24378 = (function (){var G__24360 = seq__24353_24376__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__24360) : cljs.core.chunk_rest.call(null,G__24360));
})();
var G__24379 = c__16932__auto___24377;
var G__24380 = cljs.core.count(c__16932__auto___24377);
var G__24381 = (0);
seq__24353_24363 = G__24378;
chunk__24354_24364 = G__24379;
count__24355_24365 = G__24380;
i__24356_24366 = G__24381;
continue;
} else {
var vec__24361_24382 = cljs.core.first(seq__24353_24376__$1);
var key_name_24383 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24361_24382,(0),null);
var f_24384 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24361_24382,(1),null);
var str_name_24385 = (function (){var G__24362 = key_name_24383;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24362) : cljs.core.name.call(null,G__24362));
})();
(obj[str_name_24385] = f_24384);

var G__24386 = cljs.core.next(seq__24353_24376__$1);
var G__24387 = null;
var G__24388 = (0);
var G__24389 = (0);
seq__24353_24363 = G__24386;
chunk__24354_24364 = G__24387;
count__24355_24365 = G__24388;
i__24356_24366 = G__24389;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__24391 = coll;
if(G__24391){
var bit__16826__auto__ = (G__24391.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__16826__auto__) || (G__24391.cljs$core$IReversible$)){
return true;
} else {
if((!G__24391.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24391);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24391);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__24392 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__24392;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__24393 = (i - (1));
var G__24394 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__24393;
r = G__24394;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__24395__i = 0, G__24395__a = new Array(arguments.length -  0);
while (G__24395__i < G__24395__a.length) {G__24395__a[G__24395__i] = arguments[G__24395__i + 0]; ++G__24395__i;}
  xs = new cljs.core.IndexedSeq(G__24395__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__24396){
var xs = cljs.core.seq(arglist__24396);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__16145__auto__ = (coll == null);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var G__24400 = coll;
if(G__24400){
var bit__16819__auto__ = (G__24400.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__24400.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__24402 = x;
if(G__24402){
var bit__16826__auto__ = (G__24402.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__16826__auto__) || (G__24402.cljs$core$IList$)){
return true;
} else {
if((!G__24402.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24402);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24402);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.not(a.ns);
if(and__16133__auto__){
return b.ns;
} else {
return and__16133__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24409 = a.ns;
var G__24410 = b.ns;
return goog.array.defaultCompare(G__24409,G__24410);
})();
if(((0) === nsc)){
var G__24411 = a.name;
var G__24412 = b.name;
return goog.array.defaultCompare(G__24411,G__24412);
} else {
return nsc;
}
}
} else {
var G__24413 = a.name;
var G__24414 = b.name;
return goog.array.defaultCompare(G__24413,G__24414);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__16566__auto__ = self__._hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__24416 = null;
var G__24416__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__24416__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__24416 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24416__2.call(this,self__,coll);
case 3:
return G__24416__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24416.cljs$core$IFn$_invoke$arity$2 = G__24416__2;
G__24416.cljs$core$IFn$_invoke$arity$3 = G__24416__3;
return G__24416;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args24415){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24415)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__24418 = x;
if(G__24418){
var bit__16819__auto__ = (G__24418.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16819__auto__) || (G__24418.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__24420 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24420) : cljs.core.name.call(null,G__24420));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__24421 = ls.sval();
ls = G__24421;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__24423 = s;
if(G__24423){
var bit__16819__auto__ = (G__24423.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__16819__auto__) || (G__24423.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__24424 = cljs.core.next(s__$1);
s__$1 = G__24424;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_24425 = (0);
var xs_24426 = cljs.core.seq(coll);
while(true){
if(xs_24426){
(ret[i_24425] = cljs.core.to_array(cljs.core.first(xs_24426)));

var G__24427 = (i_24425 + (1));
var G__24428 = cljs.core.next(xs_24426);
i_24425 = G__24427;
xs_24426 = G__24428;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24431 = (i + (1));
var G__24432 = cljs.core.next(s__$1);
i = G__24431;
s__$1 = G__24432;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___24433 = size;
var i_24434 = (0);
while(true){
if((i_24434 < n__17032__auto___24433)){
(a[i_24434] = init_val_or_seq);

var G__24435 = (i_24434 + (1));
i_24434 = G__24435;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24438 = (i + (1));
var G__24439 = cljs.core.next(s__$1);
i = G__24438;
s__$1 = G__24439;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___24440 = size;
var i_24441 = (0);
while(true){
if((i_24441 < n__17032__auto___24440)){
(a[i_24441] = init_val_or_seq);

var G__24442 = (i_24441 + (1));
i_24441 = G__24442;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24445 = (i + (1));
var G__24446 = cljs.core.next(s__$1);
i = G__24445;
s__$1 = G__24446;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___24447 = size;
var i_24448 = (0);
while(true){
if((i_24448 < n__17032__auto___24447)){
(a[i_24448] = init_val_or_seq);

var G__24449 = (i_24448 + (1));
i_24448 = G__24449;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24452 = (i + (1));
var G__24453 = cljs.core.next(s__$1);
i = G__24452;
s__$1 = G__24453;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___24454 = size;
var i_24455 = (0);
while(true){
if((i_24455 < n__17032__auto___24454)){
(a[i_24455] = init_val_or_seq);

var G__24456 = (i_24455 + (1));
i_24455 = G__24456;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__24457 = cljs.core.next(s__$1);
var G__24458 = (i - (1));
var G__24459 = (sum + (1));
s__$1 = G__24457;
i = G__24458;
sum = G__24459;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__24479__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__24479 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__24480__i = 0, G__24480__a = new Array(arguments.length -  2);
while (G__24480__i < G__24480__a.length) {G__24480__a[G__24480__i] = arguments[G__24480__i + 2]; ++G__24480__i;}
  zs = new cljs.core.IndexedSeq(G__24480__a,0);
} 
return G__24479__delegate.call(this,x,y,zs);};
G__24479.cljs$lang$maxFixedArity = 2;
G__24479.cljs$lang$applyTo = (function (arglist__24481){
var x = cljs.core.first(arglist__24481);
arglist__24481 = cljs.core.next(arglist__24481);
var y = cljs.core.first(arglist__24481);
var zs = cljs.core.rest(arglist__24481);
return G__24479__delegate(x,y,zs);
});
G__24479.cljs$core$IFn$_invoke$arity$variadic = G__24479__delegate;
return G__24479;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__24482 = null;
if (arguments.length > 2) {
var G__24483__i = 0, G__24483__a = new Array(arguments.length -  2);
while (G__24483__i < G__24483__a.length) {G__24483__a[G__24483__i] = arguments[G__24483__i + 2]; ++G__24483__i;}
G__24482 = new cljs.core.IndexedSeq(G__24483__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__24484__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__24484 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__24485__i = 0, G__24485__a = new Array(arguments.length -  4);
while (G__24485__i < G__24485__a.length) {G__24485__a[G__24485__i] = arguments[G__24485__i + 4]; ++G__24485__i;}
  more = new cljs.core.IndexedSeq(G__24485__a,0);
} 
return G__24484__delegate.call(this,a,b,c,d,more);};
G__24484.cljs$lang$maxFixedArity = 4;
G__24484.cljs$lang$applyTo = (function (arglist__24486){
var a = cljs.core.first(arglist__24486);
arglist__24486 = cljs.core.next(arglist__24486);
var b = cljs.core.first(arglist__24486);
arglist__24486 = cljs.core.next(arglist__24486);
var c = cljs.core.first(arglist__24486);
arglist__24486 = cljs.core.next(arglist__24486);
var d = cljs.core.first(arglist__24486);
var more = cljs.core.rest(arglist__24486);
return G__24484__delegate(a,b,c,d,more);
});
G__24484.cljs$core$IFn$_invoke$arity$variadic = G__24484__delegate;
return G__24484;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__24487 = null;
if (arguments.length > 4) {
var G__24488__i = 0, G__24488__a = new Array(arguments.length -  4);
while (G__24488__i < G__24488__a.length) {G__24488__a[G__24488__i] = arguments[G__24488__i + 4]; ++G__24488__i;}
G__24487 = new cljs.core.IndexedSeq(G__24488__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__24487);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__24489__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24490 = ntcoll;
var G__24491 = cljs.core.first(vals);
var G__24492 = cljs.core.next(vals);
tcoll = G__24490;
val = G__24491;
vals = G__24492;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24489 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24493__i = 0, G__24493__a = new Array(arguments.length -  2);
while (G__24493__i < G__24493__a.length) {G__24493__a[G__24493__i] = arguments[G__24493__i + 2]; ++G__24493__i;}
  vals = new cljs.core.IndexedSeq(G__24493__a,0);
} 
return G__24489__delegate.call(this,tcoll,val,vals);};
G__24489.cljs$lang$maxFixedArity = 2;
G__24489.cljs$lang$applyTo = (function (arglist__24494){
var tcoll = cljs.core.first(arglist__24494);
arglist__24494 = cljs.core.next(arglist__24494);
var val = cljs.core.first(arglist__24494);
var vals = cljs.core.rest(arglist__24494);
return G__24489__delegate(tcoll,val,vals);
});
G__24489.cljs$core$IFn$_invoke$arity$variadic = G__24489__delegate;
return G__24489;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__24495 = null;
if (arguments.length > 2) {
var G__24496__i = 0, G__24496__a = new Array(arguments.length -  2);
while (G__24496__i < G__24496__a.length) {G__24496__a[G__24496__i] = arguments[G__24496__i + 2]; ++G__24496__i;}
G__24495 = new cljs.core.IndexedSeq(G__24496__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24495);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__24497__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__24498 = ntcoll;
var G__24499 = cljs.core.first(kvs);
var G__24500 = cljs.core.second(kvs);
var G__24501 = cljs.core.nnext(kvs);
tcoll = G__24498;
key = G__24499;
val = G__24500;
kvs = G__24501;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24497 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24502__i = 0, G__24502__a = new Array(arguments.length -  3);
while (G__24502__i < G__24502__a.length) {G__24502__a[G__24502__i] = arguments[G__24502__i + 3]; ++G__24502__i;}
  kvs = new cljs.core.IndexedSeq(G__24502__a,0);
} 
return G__24497__delegate.call(this,tcoll,key,val,kvs);};
G__24497.cljs$lang$maxFixedArity = 3;
G__24497.cljs$lang$applyTo = (function (arglist__24503){
var tcoll = cljs.core.first(arglist__24503);
arglist__24503 = cljs.core.next(arglist__24503);
var key = cljs.core.first(arglist__24503);
arglist__24503 = cljs.core.next(arglist__24503);
var val = cljs.core.first(arglist__24503);
var kvs = cljs.core.rest(arglist__24503);
return G__24497__delegate(tcoll,key,val,kvs);
});
G__24497.cljs$core$IFn$_invoke$arity$variadic = G__24497__delegate;
return G__24497;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__24504 = null;
if (arguments.length > 3) {
var G__24505__i = 0, G__24505__a = new Array(arguments.length -  3);
while (G__24505__i < G__24505__a.length) {G__24505__a[G__24505__i] = arguments[G__24505__i + 3]; ++G__24505__i;}
G__24504 = new cljs.core.IndexedSeq(G__24505__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__24504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__24506__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__24507 = ntcoll;
var G__24508 = cljs.core.first(ks);
var G__24509 = cljs.core.next(ks);
tcoll = G__24507;
key = G__24508;
ks = G__24509;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24506 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24510__i = 0, G__24510__a = new Array(arguments.length -  2);
while (G__24510__i < G__24510__a.length) {G__24510__a[G__24510__i] = arguments[G__24510__i + 2]; ++G__24510__i;}
  ks = new cljs.core.IndexedSeq(G__24510__a,0);
} 
return G__24506__delegate.call(this,tcoll,key,ks);};
G__24506.cljs$lang$maxFixedArity = 2;
G__24506.cljs$lang$applyTo = (function (arglist__24511){
var tcoll = cljs.core.first(arglist__24511);
arglist__24511 = cljs.core.next(arglist__24511);
var key = cljs.core.first(arglist__24511);
var ks = cljs.core.rest(arglist__24511);
return G__24506__delegate(tcoll,key,ks);
});
G__24506.cljs$core$IFn$_invoke$arity$variadic = G__24506__delegate;
return G__24506;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__24512 = null;
if (arguments.length > 2) {
var G__24513__i = 0, G__24513__a = new Array(arguments.length -  2);
while (G__24513__i < G__24513__a.length) {G__24513__a[G__24513__i] = arguments[G__24513__i + 2]; ++G__24513__i;}
G__24512 = new cljs.core.IndexedSeq(G__24513__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__24512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__24514__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24515 = ntcoll;
var G__24516 = cljs.core.first(vals);
var G__24517 = cljs.core.next(vals);
tcoll = G__24515;
val = G__24516;
vals = G__24517;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24514 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24518__i = 0, G__24518__a = new Array(arguments.length -  2);
while (G__24518__i < G__24518__a.length) {G__24518__a[G__24518__i] = arguments[G__24518__i + 2]; ++G__24518__i;}
  vals = new cljs.core.IndexedSeq(G__24518__a,0);
} 
return G__24514__delegate.call(this,tcoll,val,vals);};
G__24514.cljs$lang$maxFixedArity = 2;
G__24514.cljs$lang$applyTo = (function (arglist__24519){
var tcoll = cljs.core.first(arglist__24519);
arglist__24519 = cljs.core.next(arglist__24519);
var val = cljs.core.first(arglist__24519);
var vals = cljs.core.rest(arglist__24519);
return G__24514__delegate(tcoll,val,vals);
});
G__24514.cljs$core$IFn$_invoke$arity$variadic = G__24514__delegate;
return G__24514;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__24520 = null;
if (arguments.length > 2) {
var G__24521__i = 0, G__24521__a = new Array(arguments.length -  2);
while (G__24521__i < G__24521__a.length) {G__24521__a[G__24521__i] = arguments[G__24521__i + 2]; ++G__24521__i;}
G__24520 = new cljs.core.IndexedSeq(G__24521__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a17076 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a17076);
} else {
var G__24732 = a17076;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24732) : f.call(null,G__24732));
}
} else {
var b17077 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a17076,b17077);
} else {
var G__24733 = a17076;
var G__24734 = b17077;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24733,G__24734) : f.call(null,G__24733,G__24734));
}
} else {
var c17078 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a17076,b17077,c17078);
} else {
var G__24735 = a17076;
var G__24736 = b17077;
var G__24737 = c17078;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24735,G__24736,G__24737) : f.call(null,G__24735,G__24736,G__24737));
}
} else {
var d17079 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a17076,b17077,c17078,d17079);
} else {
var G__24738 = a17076;
var G__24739 = b17077;
var G__24740 = c17078;
var G__24741 = d17079;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24738,G__24739,G__24740,G__24741) : f.call(null,G__24738,G__24739,G__24740,G__24741));
}
} else {
var e17080 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a17076,b17077,c17078,d17079,e17080);
} else {
var G__24742 = a17076;
var G__24743 = b17077;
var G__24744 = c17078;
var G__24745 = d17079;
var G__24746 = e17080;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24742,G__24743,G__24744,G__24745,G__24746) : f.call(null,G__24742,G__24743,G__24744,G__24745,G__24746));
}
} else {
var f17081 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a17076,b17077,c17078,d17079,e17080,f17081);
} else {
var G__24747 = a17076;
var G__24748 = b17077;
var G__24749 = c17078;
var G__24750 = d17079;
var G__24751 = e17080;
var G__24752 = f17081;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__24747,G__24748,G__24749,G__24750,G__24751,G__24752) : f.call(null,G__24747,G__24748,G__24749,G__24750,G__24751,G__24752));
}
} else {
var g17082 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a17076,b17077,c17078,d17079,e17080,f17081,g17082);
} else {
var G__24753 = a17076;
var G__24754 = b17077;
var G__24755 = c17078;
var G__24756 = d17079;
var G__24757 = e17080;
var G__24758 = f17081;
var G__24759 = g17082;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759) : f.call(null,G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759));
}
} else {
var h17083 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083);
} else {
var G__24760 = a17076;
var G__24761 = b17077;
var G__24762 = c17078;
var G__24763 = d17079;
var G__24764 = e17080;
var G__24765 = f17081;
var G__24766 = g17082;
var G__24767 = h17083;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__24760,G__24761,G__24762,G__24763,G__24764,G__24765,G__24766,G__24767) : f.call(null,G__24760,G__24761,G__24762,G__24763,G__24764,G__24765,G__24766,G__24767));
}
} else {
var i17084 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084);
} else {
var G__24768 = a17076;
var G__24769 = b17077;
var G__24770 = c17078;
var G__24771 = d17079;
var G__24772 = e17080;
var G__24773 = f17081;
var G__24774 = g17082;
var G__24775 = h17083;
var G__24776 = i17084;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__24768,G__24769,G__24770,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776) : f.call(null,G__24768,G__24769,G__24770,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776));
}
} else {
var j17085 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085);
} else {
var G__24777 = a17076;
var G__24778 = b17077;
var G__24779 = c17078;
var G__24780 = d17079;
var G__24781 = e17080;
var G__24782 = f17081;
var G__24783 = g17082;
var G__24784 = h17083;
var G__24785 = i17084;
var G__24786 = j17085;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__24777,G__24778,G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786) : f.call(null,G__24777,G__24778,G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786));
}
} else {
var k17086 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086);
} else {
var G__24787 = a17076;
var G__24788 = b17077;
var G__24789 = c17078;
var G__24790 = d17079;
var G__24791 = e17080;
var G__24792 = f17081;
var G__24793 = g17082;
var G__24794 = h17083;
var G__24795 = i17084;
var G__24796 = j17085;
var G__24797 = k17086;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797) : f.call(null,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797));
}
} else {
var l17087 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087);
} else {
var G__24798 = a17076;
var G__24799 = b17077;
var G__24800 = c17078;
var G__24801 = d17079;
var G__24802 = e17080;
var G__24803 = f17081;
var G__24804 = g17082;
var G__24805 = h17083;
var G__24806 = i17084;
var G__24807 = j17085;
var G__24808 = k17086;
var G__24809 = l17087;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809) : f.call(null,G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809));
}
} else {
var m17088 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088);
} else {
var G__24810 = a17076;
var G__24811 = b17077;
var G__24812 = c17078;
var G__24813 = d17079;
var G__24814 = e17080;
var G__24815 = f17081;
var G__24816 = g17082;
var G__24817 = h17083;
var G__24818 = i17084;
var G__24819 = j17085;
var G__24820 = k17086;
var G__24821 = l17087;
var G__24822 = m17088;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816,G__24817,G__24818,G__24819,G__24820,G__24821,G__24822) : f.call(null,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816,G__24817,G__24818,G__24819,G__24820,G__24821,G__24822));
}
} else {
var n17089 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089);
} else {
var G__24823 = a17076;
var G__24824 = b17077;
var G__24825 = c17078;
var G__24826 = d17079;
var G__24827 = e17080;
var G__24828 = f17081;
var G__24829 = g17082;
var G__24830 = h17083;
var G__24831 = i17084;
var G__24832 = j17085;
var G__24833 = k17086;
var G__24834 = l17087;
var G__24835 = m17088;
var G__24836 = n17089;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836) : f.call(null,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836));
}
} else {
var o17090 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090);
} else {
var G__24837 = a17076;
var G__24838 = b17077;
var G__24839 = c17078;
var G__24840 = d17079;
var G__24841 = e17080;
var G__24842 = f17081;
var G__24843 = g17082;
var G__24844 = h17083;
var G__24845 = i17084;
var G__24846 = j17085;
var G__24847 = k17086;
var G__24848 = l17087;
var G__24849 = m17088;
var G__24850 = n17089;
var G__24851 = o17090;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851) : f.call(null,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851));
}
} else {
var p17091 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091);
} else {
var G__24852 = a17076;
var G__24853 = b17077;
var G__24854 = c17078;
var G__24855 = d17079;
var G__24856 = e17080;
var G__24857 = f17081;
var G__24858 = g17082;
var G__24859 = h17083;
var G__24860 = i17084;
var G__24861 = j17085;
var G__24862 = k17086;
var G__24863 = l17087;
var G__24864 = m17088;
var G__24865 = n17089;
var G__24866 = o17090;
var G__24867 = p17091;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__24852,G__24853,G__24854,G__24855,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866,G__24867) : f.call(null,G__24852,G__24853,G__24854,G__24855,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866,G__24867));
}
} else {
var q17092 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092);
} else {
var G__24868 = a17076;
var G__24869 = b17077;
var G__24870 = c17078;
var G__24871 = d17079;
var G__24872 = e17080;
var G__24873 = f17081;
var G__24874 = g17082;
var G__24875 = h17083;
var G__24876 = i17084;
var G__24877 = j17085;
var G__24878 = k17086;
var G__24879 = l17087;
var G__24880 = m17088;
var G__24881 = n17089;
var G__24882 = o17090;
var G__24883 = p17091;
var G__24884 = q17092;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882,G__24883,G__24884) : f.call(null,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882,G__24883,G__24884));
}
} else {
var r17093 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093);
} else {
var G__24885 = a17076;
var G__24886 = b17077;
var G__24887 = c17078;
var G__24888 = d17079;
var G__24889 = e17080;
var G__24890 = f17081;
var G__24891 = g17082;
var G__24892 = h17083;
var G__24893 = i17084;
var G__24894 = j17085;
var G__24895 = k17086;
var G__24896 = l17087;
var G__24897 = m17088;
var G__24898 = n17089;
var G__24899 = o17090;
var G__24900 = p17091;
var G__24901 = q17092;
var G__24902 = r17093;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895,G__24896,G__24897,G__24898,G__24899,G__24900,G__24901,G__24902) : f.call(null,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895,G__24896,G__24897,G__24898,G__24899,G__24900,G__24901,G__24902));
}
} else {
var s17094 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093,s17094);
} else {
var G__24903 = a17076;
var G__24904 = b17077;
var G__24905 = c17078;
var G__24906 = d17079;
var G__24907 = e17080;
var G__24908 = f17081;
var G__24909 = g17082;
var G__24910 = h17083;
var G__24911 = i17084;
var G__24912 = j17085;
var G__24913 = k17086;
var G__24914 = l17087;
var G__24915 = m17088;
var G__24916 = n17089;
var G__24917 = o17090;
var G__24918 = p17091;
var G__24919 = q17092;
var G__24920 = r17093;
var G__24921 = s17094;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__24903,G__24904,G__24905,G__24906,G__24907,G__24908,G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916,G__24917,G__24918,G__24919,G__24920,G__24921) : f.call(null,G__24903,G__24904,G__24905,G__24906,G__24907,G__24908,G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916,G__24917,G__24918,G__24919,G__24920,G__24921));
}
} else {
var t17095 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093,s17094,t17095);
} else {
var G__24922 = a17076;
var G__24923 = b17077;
var G__24924 = c17078;
var G__24925 = d17079;
var G__24926 = e17080;
var G__24927 = f17081;
var G__24928 = g17082;
var G__24929 = h17083;
var G__24930 = i17084;
var G__24931 = j17085;
var G__24932 = k17086;
var G__24933 = l17087;
var G__24934 = m17088;
var G__24935 = n17089;
var G__24936 = o17090;
var G__24937 = p17091;
var G__24938 = q17092;
var G__24939 = r17093;
var G__24940 = s17094;
var G__24941 = t17095;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941) : f.call(null,G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__24942__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__24942 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__24943__i = 0, G__24943__a = new Array(arguments.length -  5);
while (G__24943__i < G__24943__a.length) {G__24943__a[G__24943__i] = arguments[G__24943__i + 5]; ++G__24943__i;}
  args = new cljs.core.IndexedSeq(G__24943__a,0);
} 
return G__24942__delegate.call(this,f,a,b,c,d,args);};
G__24942.cljs$lang$maxFixedArity = 5;
G__24942.cljs$lang$applyTo = (function (arglist__24944){
var f = cljs.core.first(arglist__24944);
arglist__24944 = cljs.core.next(arglist__24944);
var a = cljs.core.first(arglist__24944);
arglist__24944 = cljs.core.next(arglist__24944);
var b = cljs.core.first(arglist__24944);
arglist__24944 = cljs.core.next(arglist__24944);
var c = cljs.core.first(arglist__24944);
arglist__24944 = cljs.core.next(arglist__24944);
var d = cljs.core.first(arglist__24944);
var args = cljs.core.rest(arglist__24944);
return G__24942__delegate(f,a,b,c,d,args);
});
G__24942.cljs$core$IFn$_invoke$arity$variadic = G__24942__delegate;
return G__24942;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__24945 = null;
if (arguments.length > 5) {
var G__24946__i = 0, G__24946__a = new Array(arguments.length -  5);
while (G__24946__i < G__24946__a.length) {G__24946__a[G__24946__i] = arguments[G__24946__i + 5]; ++G__24946__i;}
G__24945 = new cljs.core.IndexedSeq(G__24946__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__24945);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__24962 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24962) : f.call(null,G__24962));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__24963 = cljs.core.meta(obj);
var G__24964 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24963,G__24964) : f.call(null,G__24963,G__24964));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__24965 = cljs.core.meta(obj);
var G__24966 = a;
var G__24967 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24965,G__24966,G__24967) : f.call(null,G__24965,G__24966,G__24967));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__24968 = cljs.core.meta(obj);
var G__24969 = a;
var G__24970 = b;
var G__24971 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24968,G__24969,G__24970,G__24971) : f.call(null,G__24968,G__24969,G__24970,G__24971));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__24972 = cljs.core.meta(obj);
var G__24973 = a;
var G__24974 = b;
var G__24975 = c;
var G__24976 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24972,G__24973,G__24974,G__24975,G__24976) : f.call(null,G__24972,G__24973,G__24974,G__24975,G__24976));
})());
});
var vary_meta__7 = (function() { 
var G__24977__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__24977 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__24978__i = 0, G__24978__a = new Array(arguments.length -  6);
while (G__24978__i < G__24978__a.length) {G__24978__a[G__24978__i] = arguments[G__24978__i + 6]; ++G__24978__i;}
  args = new cljs.core.IndexedSeq(G__24978__a,0);
} 
return G__24977__delegate.call(this,obj,f,a,b,c,d,args);};
G__24977.cljs$lang$maxFixedArity = 6;
G__24977.cljs$lang$applyTo = (function (arglist__24979){
var obj = cljs.core.first(arglist__24979);
arglist__24979 = cljs.core.next(arglist__24979);
var f = cljs.core.first(arglist__24979);
arglist__24979 = cljs.core.next(arglist__24979);
var a = cljs.core.first(arglist__24979);
arglist__24979 = cljs.core.next(arglist__24979);
var b = cljs.core.first(arglist__24979);
arglist__24979 = cljs.core.next(arglist__24979);
var c = cljs.core.first(arglist__24979);
arglist__24979 = cljs.core.next(arglist__24979);
var d = cljs.core.first(arglist__24979);
var args = cljs.core.rest(arglist__24979);
return G__24977__delegate(obj,f,a,b,c,d,args);
});
G__24977.cljs$core$IFn$_invoke$arity$variadic = G__24977__delegate;
return G__24977;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__24980 = null;
if (arguments.length > 6) {
var G__24981__i = 0, G__24981__a = new Array(arguments.length -  6);
while (G__24981__i < G__24981__a.length) {G__24981__a[G__24981__i] = arguments[G__24981__i + 6]; ++G__24981__i;}
G__24980 = new cljs.core.IndexedSeq(G__24981__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__24980);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__24982__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__24982 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24983__i = 0, G__24983__a = new Array(arguments.length -  2);
while (G__24983__i < G__24983__a.length) {G__24983__a[G__24983__i] = arguments[G__24983__i + 2]; ++G__24983__i;}
  more = new cljs.core.IndexedSeq(G__24983__a,0);
} 
return G__24982__delegate.call(this,x,y,more);};
G__24982.cljs$lang$maxFixedArity = 2;
G__24982.cljs$lang$applyTo = (function (arglist__24984){
var x = cljs.core.first(arglist__24984);
arglist__24984 = cljs.core.next(arglist__24984);
var y = cljs.core.first(arglist__24984);
var more = cljs.core.rest(arglist__24984);
return G__24982__delegate(x,y,more);
});
G__24982.cljs$core$IFn$_invoke$arity$variadic = G__24982__delegate;
return G__24982;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__24985 = null;
if (arguments.length > 2) {
var G__24986__i = 0, G__24986__a = new Array(arguments.length -  2);
while (G__24986__i < G__24986__a.length) {G__24986__a[G__24986__i] = arguments[G__24986__i + 2]; ++G__24986__i;}
G__24985 = new cljs.core.IndexedSeq(G__24986__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24985);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t24990 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t24990 = (function (nil_iter,meta24991){
this.nil_iter = nil_iter;
this.meta24991 = meta24991;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t24990.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t24990.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t24990.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t24990.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_24992){
var self__ = this;
var _24992__$1 = this;
return self__.meta24991;
});

cljs.core.t24990.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_24992,meta24991__$1){
var self__ = this;
var _24992__$1 = this;
return (new cljs.core.t24990(self__.nil_iter,meta24991__$1));
});

cljs.core.t24990.cljs$lang$type = true;

cljs.core.t24990.cljs$lang$ctorStr = "cljs.core/t24990";

cljs.core.t24990.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/t24990");
});

cljs.core.__GT_t24990 = (function __GT_t24990(nil_iter__$1,meta24991){
return (new cljs.core.t24990(nil_iter__$1,meta24991));
});

}

return (new cljs.core.t24990(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16133__auto__ = !((lt.stepper == null));
if(and__16133__auto__){
return self__.iter.hasNext();
} else {
return and__16133__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__24993 = lt;
var G__24994 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__24993,G__24994) : self__.xform.call(null,G__24993,G__24994));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__24995 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__24995) : self__.xform.call(null,G__24995));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__24997 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24997) : xform.call(null,G__24997));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__24999 = cljs.core.next(iters__$1);
iters__$1 = G__24999;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__17032__auto___25000 = self__.iters.length;
var i_25001 = (0);
while(true){
if((i_25001 < n__17032__auto___25000)){
(self__.nexts[i_25001] = (self__.iters[i_25001]).next());

var G__25002 = (i_25001 + (1));
i_25001 = G__25002;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16133__auto__ = !((lt.stepper == null));
if(and__16133__auto__){
return this$.hasNext();
} else {
return and__16133__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__24998 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__24998) : self__.xform.call(null,G__24998));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__25007 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25007) : xform.call(null,G__25007));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__25008_25012 = cljs.core.seq(colls);
var chunk__25009_25013 = null;
var count__25010_25014 = (0);
var i__25011_25015 = (0);
while(true){
if((i__25011_25015 < count__25010_25014)){
var coll_25016 = chunk__25009_25013.cljs$core$IIndexed$_nth$arity$2(null,i__25011_25015);
iters.push(cljs.core.iter(coll_25016));

var G__25017 = seq__25008_25012;
var G__25018 = chunk__25009_25013;
var G__25019 = count__25010_25014;
var G__25020 = (i__25011_25015 + (1));
seq__25008_25012 = G__25017;
chunk__25009_25013 = G__25018;
count__25010_25014 = G__25019;
i__25011_25015 = G__25020;
continue;
} else {
var temp__4126__auto___25021 = cljs.core.seq(seq__25008_25012);
if(temp__4126__auto___25021){
var seq__25008_25022__$1 = temp__4126__auto___25021;
if(cljs.core.chunked_seq_QMARK_(seq__25008_25022__$1)){
var c__16932__auto___25023 = cljs.core.chunk_first(seq__25008_25022__$1);
var G__25024 = cljs.core.chunk_rest(seq__25008_25022__$1);
var G__25025 = c__16932__auto___25023;
var G__25026 = cljs.core.count(c__16932__auto___25023);
var G__25027 = (0);
seq__25008_25012 = G__25024;
chunk__25009_25013 = G__25025;
count__25010_25014 = G__25026;
i__25011_25015 = G__25027;
continue;
} else {
var coll_25028 = cljs.core.first(seq__25008_25022__$1);
iters.push(cljs.core.iter(coll_25028));

var G__25029 = cljs.core.next(seq__25008_25022__$1);
var G__25030 = null;
var G__25031 = (0);
var G__25032 = (0);
seq__25008_25012 = G__25029;
chunk__25009_25013 = G__25030;
count__25010_25014 = G__25031;
i__25011_25015 = G__25032;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__16145__auto__ = cljs.core.seq(coll);
if(or__16145__auto__){
return or__16145__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__25033__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__25033 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__25034__i = 0, G__25034__a = new Array(arguments.length -  2);
while (G__25034__i < G__25034__a.length) {G__25034__a[G__25034__i] = arguments[G__25034__i + 2]; ++G__25034__i;}
  colls = new cljs.core.IndexedSeq(G__25034__a,0);
} 
return G__25033__delegate.call(this,xform,coll,colls);};
G__25033.cljs$lang$maxFixedArity = 2;
G__25033.cljs$lang$applyTo = (function (arglist__25035){
var xform = cljs.core.first(arglist__25035);
arglist__25035 = cljs.core.next(arglist__25035);
var coll = cljs.core.first(arglist__25035);
var colls = cljs.core.rest(arglist__25035);
return G__25033__delegate(xform,coll,colls);
});
G__25033.cljs$core$IFn$_invoke$arity$variadic = G__25033__delegate;
return G__25033;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__25036 = null;
if (arguments.length > 2) {
var G__25037__i = 0, G__25037__a = new Array(arguments.length -  2);
while (G__25037__i < G__25037__a.length) {G__25037__a[G__25037__i] = arguments[G__25037__i + 2]; ++G__25037__i;}
G__25036 = new cljs.core.IndexedSeq(G__25037__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__25036);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__25039 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25039) : pred.call(null,G__25039));
})())){
var G__25040 = pred;
var G__25041 = cljs.core.next(coll);
pred = G__25040;
coll = G__25041;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__16145__auto__ = (function (){var G__25045 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25045) : pred.call(null,G__25045));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__25046 = pred;
var G__25047 = cljs.core.next(coll);
pred = G__25046;
coll = G__25047;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__25054 = null;
var G__25054__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__25054__1 = (function (x){
return cljs.core.not((function (){var G__25051 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25051) : f.call(null,G__25051));
})());
});
var G__25054__2 = (function (x,y){
return cljs.core.not((function (){var G__25052 = x;
var G__25053 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25052,G__25053) : f.call(null,G__25052,G__25053));
})());
});
var G__25054__3 = (function() { 
var G__25055__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__25055 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25056__i = 0, G__25056__a = new Array(arguments.length -  2);
while (G__25056__i < G__25056__a.length) {G__25056__a[G__25056__i] = arguments[G__25056__i + 2]; ++G__25056__i;}
  zs = new cljs.core.IndexedSeq(G__25056__a,0);
} 
return G__25055__delegate.call(this,x,y,zs);};
G__25055.cljs$lang$maxFixedArity = 2;
G__25055.cljs$lang$applyTo = (function (arglist__25057){
var x = cljs.core.first(arglist__25057);
arglist__25057 = cljs.core.next(arglist__25057);
var y = cljs.core.first(arglist__25057);
var zs = cljs.core.rest(arglist__25057);
return G__25055__delegate(x,y,zs);
});
G__25055.cljs$core$IFn$_invoke$arity$variadic = G__25055__delegate;
return G__25055;
})()
;
G__25054 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__25054__0.call(this);
case 1:
return G__25054__1.call(this,x);
case 2:
return G__25054__2.call(this,x,y);
default:
var G__25058 = null;
if (arguments.length > 2) {
var G__25059__i = 0, G__25059__a = new Array(arguments.length -  2);
while (G__25059__i < G__25059__a.length) {G__25059__a[G__25059__i] = arguments[G__25059__i + 2]; ++G__25059__i;}
G__25058 = new cljs.core.IndexedSeq(G__25059__a,0);
}
return G__25054__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25054.cljs$lang$maxFixedArity = 2;
G__25054.cljs$lang$applyTo = G__25054__3.cljs$lang$applyTo;
G__25054.cljs$core$IFn$_invoke$arity$0 = G__25054__0;
G__25054.cljs$core$IFn$_invoke$arity$1 = G__25054__1;
G__25054.cljs$core$IFn$_invoke$arity$2 = G__25054__2;
G__25054.cljs$core$IFn$_invoke$arity$variadic = G__25054__3.cljs$core$IFn$_invoke$arity$variadic;
return G__25054;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__25060__delegate = function (args){
return x;
};
var G__25060 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25061__i = 0, G__25061__a = new Array(arguments.length -  0);
while (G__25061__i < G__25061__a.length) {G__25061__a[G__25061__i] = arguments[G__25061__i + 0]; ++G__25061__i;}
  args = new cljs.core.IndexedSeq(G__25061__a,0);
} 
return G__25060__delegate.call(this,args);};
G__25060.cljs$lang$maxFixedArity = 0;
G__25060.cljs$lang$applyTo = (function (arglist__25062){
var args = cljs.core.seq(arglist__25062);
return G__25060__delegate(args);
});
G__25060.cljs$core$IFn$_invoke$arity$variadic = G__25060__delegate;
return G__25060;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__25117 = null;
var G__25117__0 = (function (){
var G__25090 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25090) : f.call(null,G__25090));
});
var G__25117__1 = (function (x){
var G__25091 = (function (){var G__25092 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25092) : g.call(null,G__25092));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25091) : f.call(null,G__25091));
});
var G__25117__2 = (function (x,y){
var G__25093 = (function (){var G__25094 = x;
var G__25095 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25094,G__25095) : g.call(null,G__25094,G__25095));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25093) : f.call(null,G__25093));
});
var G__25117__3 = (function (x,y,z){
var G__25096 = (function (){var G__25097 = x;
var G__25098 = y;
var G__25099 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25097,G__25098,G__25099) : g.call(null,G__25097,G__25098,G__25099));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25096) : f.call(null,G__25096));
});
var G__25117__4 = (function() { 
var G__25118__delegate = function (x,y,z,args){
var G__25100 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25100) : f.call(null,G__25100));
};
var G__25118 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25119__i = 0, G__25119__a = new Array(arguments.length -  3);
while (G__25119__i < G__25119__a.length) {G__25119__a[G__25119__i] = arguments[G__25119__i + 3]; ++G__25119__i;}
  args = new cljs.core.IndexedSeq(G__25119__a,0);
} 
return G__25118__delegate.call(this,x,y,z,args);};
G__25118.cljs$lang$maxFixedArity = 3;
G__25118.cljs$lang$applyTo = (function (arglist__25120){
var x = cljs.core.first(arglist__25120);
arglist__25120 = cljs.core.next(arglist__25120);
var y = cljs.core.first(arglist__25120);
arglist__25120 = cljs.core.next(arglist__25120);
var z = cljs.core.first(arglist__25120);
var args = cljs.core.rest(arglist__25120);
return G__25118__delegate(x,y,z,args);
});
G__25118.cljs$core$IFn$_invoke$arity$variadic = G__25118__delegate;
return G__25118;
})()
;
G__25117 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25117__0.call(this);
case 1:
return G__25117__1.call(this,x);
case 2:
return G__25117__2.call(this,x,y);
case 3:
return G__25117__3.call(this,x,y,z);
default:
var G__25121 = null;
if (arguments.length > 3) {
var G__25122__i = 0, G__25122__a = new Array(arguments.length -  3);
while (G__25122__i < G__25122__a.length) {G__25122__a[G__25122__i] = arguments[G__25122__i + 3]; ++G__25122__i;}
G__25121 = new cljs.core.IndexedSeq(G__25122__a,0);
}
return G__25117__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25121);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25117.cljs$lang$maxFixedArity = 3;
G__25117.cljs$lang$applyTo = G__25117__4.cljs$lang$applyTo;
G__25117.cljs$core$IFn$_invoke$arity$0 = G__25117__0;
G__25117.cljs$core$IFn$_invoke$arity$1 = G__25117__1;
G__25117.cljs$core$IFn$_invoke$arity$2 = G__25117__2;
G__25117.cljs$core$IFn$_invoke$arity$3 = G__25117__3;
G__25117.cljs$core$IFn$_invoke$arity$variadic = G__25117__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25117;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__25123 = null;
var G__25123__0 = (function (){
var G__25101 = (function (){var G__25102 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25102) : g.call(null,G__25102));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25101) : f.call(null,G__25101));
});
var G__25123__1 = (function (x){
var G__25103 = (function (){var G__25104 = (function (){var G__25105 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25105) : h.call(null,G__25105));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25104) : g.call(null,G__25104));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25103) : f.call(null,G__25103));
});
var G__25123__2 = (function (x,y){
var G__25106 = (function (){var G__25107 = (function (){var G__25108 = x;
var G__25109 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25108,G__25109) : h.call(null,G__25108,G__25109));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25107) : g.call(null,G__25107));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25106) : f.call(null,G__25106));
});
var G__25123__3 = (function (x,y,z){
var G__25110 = (function (){var G__25111 = (function (){var G__25112 = x;
var G__25113 = y;
var G__25114 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25112,G__25113,G__25114) : h.call(null,G__25112,G__25113,G__25114));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25111) : g.call(null,G__25111));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25110) : f.call(null,G__25110));
});
var G__25123__4 = (function() { 
var G__25124__delegate = function (x,y,z,args){
var G__25115 = (function (){var G__25116 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25116) : g.call(null,G__25116));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25115) : f.call(null,G__25115));
};
var G__25124 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25125__i = 0, G__25125__a = new Array(arguments.length -  3);
while (G__25125__i < G__25125__a.length) {G__25125__a[G__25125__i] = arguments[G__25125__i + 3]; ++G__25125__i;}
  args = new cljs.core.IndexedSeq(G__25125__a,0);
} 
return G__25124__delegate.call(this,x,y,z,args);};
G__25124.cljs$lang$maxFixedArity = 3;
G__25124.cljs$lang$applyTo = (function (arglist__25126){
var x = cljs.core.first(arglist__25126);
arglist__25126 = cljs.core.next(arglist__25126);
var y = cljs.core.first(arglist__25126);
arglist__25126 = cljs.core.next(arglist__25126);
var z = cljs.core.first(arglist__25126);
var args = cljs.core.rest(arglist__25126);
return G__25124__delegate(x,y,z,args);
});
G__25124.cljs$core$IFn$_invoke$arity$variadic = G__25124__delegate;
return G__25124;
})()
;
G__25123 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25123__0.call(this);
case 1:
return G__25123__1.call(this,x);
case 2:
return G__25123__2.call(this,x,y);
case 3:
return G__25123__3.call(this,x,y,z);
default:
var G__25127 = null;
if (arguments.length > 3) {
var G__25128__i = 0, G__25128__a = new Array(arguments.length -  3);
while (G__25128__i < G__25128__a.length) {G__25128__a[G__25128__i] = arguments[G__25128__i + 3]; ++G__25128__i;}
G__25127 = new cljs.core.IndexedSeq(G__25128__a,0);
}
return G__25123__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25127);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25123.cljs$lang$maxFixedArity = 3;
G__25123.cljs$lang$applyTo = G__25123__4.cljs$lang$applyTo;
G__25123.cljs$core$IFn$_invoke$arity$0 = G__25123__0;
G__25123.cljs$core$IFn$_invoke$arity$1 = G__25123__1;
G__25123.cljs$core$IFn$_invoke$arity$2 = G__25123__2;
G__25123.cljs$core$IFn$_invoke$arity$3 = G__25123__3;
G__25123.cljs$core$IFn$_invoke$arity$variadic = G__25123__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25123;
})()
});
var comp__4 = (function() { 
var G__25129__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__25130__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__25131 = cljs.core.first(fs__$2).call(null,ret);
var G__25132 = cljs.core.next(fs__$2);
ret = G__25131;
fs__$2 = G__25132;
continue;
} else {
return ret;
}
break;
}
};
var G__25130 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25133__i = 0, G__25133__a = new Array(arguments.length -  0);
while (G__25133__i < G__25133__a.length) {G__25133__a[G__25133__i] = arguments[G__25133__i + 0]; ++G__25133__i;}
  args = new cljs.core.IndexedSeq(G__25133__a,0);
} 
return G__25130__delegate.call(this,args);};
G__25130.cljs$lang$maxFixedArity = 0;
G__25130.cljs$lang$applyTo = (function (arglist__25134){
var args = cljs.core.seq(arglist__25134);
return G__25130__delegate(args);
});
G__25130.cljs$core$IFn$_invoke$arity$variadic = G__25130__delegate;
return G__25130;
})()
;
;})(fs__$1))
};
var G__25129 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25135__i = 0, G__25135__a = new Array(arguments.length -  3);
while (G__25135__i < G__25135__a.length) {G__25135__a[G__25135__i] = arguments[G__25135__i + 3]; ++G__25135__i;}
  fs = new cljs.core.IndexedSeq(G__25135__a,0);
} 
return G__25129__delegate.call(this,f1,f2,f3,fs);};
G__25129.cljs$lang$maxFixedArity = 3;
G__25129.cljs$lang$applyTo = (function (arglist__25136){
var f1 = cljs.core.first(arglist__25136);
arglist__25136 = cljs.core.next(arglist__25136);
var f2 = cljs.core.first(arglist__25136);
arglist__25136 = cljs.core.next(arglist__25136);
var f3 = cljs.core.first(arglist__25136);
var fs = cljs.core.rest(arglist__25136);
return G__25129__delegate(f1,f2,f3,fs);
});
G__25129.cljs$core$IFn$_invoke$arity$variadic = G__25129__delegate;
return G__25129;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__25137 = null;
if (arguments.length > 3) {
var G__25138__i = 0, G__25138__a = new Array(arguments.length -  3);
while (G__25138__i < G__25138__a.length) {G__25138__a[G__25138__i] = arguments[G__25138__i + 3]; ++G__25138__i;}
G__25137 = new cljs.core.IndexedSeq(G__25138__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__25137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__25223 = null;
var G__25223__0 = (function (){
var G__25181 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25181) : f.call(null,G__25181));
});
var G__25223__1 = (function (x){
var G__25182 = arg1;
var G__25183 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25182,G__25183) : f.call(null,G__25182,G__25183));
});
var G__25223__2 = (function (x,y){
var G__25184 = arg1;
var G__25185 = x;
var G__25186 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25184,G__25185,G__25186) : f.call(null,G__25184,G__25185,G__25186));
});
var G__25223__3 = (function (x,y,z){
var G__25187 = arg1;
var G__25188 = x;
var G__25189 = y;
var G__25190 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25187,G__25188,G__25189,G__25190) : f.call(null,G__25187,G__25188,G__25189,G__25190));
});
var G__25223__4 = (function() { 
var G__25224__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__25224 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25225__i = 0, G__25225__a = new Array(arguments.length -  3);
while (G__25225__i < G__25225__a.length) {G__25225__a[G__25225__i] = arguments[G__25225__i + 3]; ++G__25225__i;}
  args = new cljs.core.IndexedSeq(G__25225__a,0);
} 
return G__25224__delegate.call(this,x,y,z,args);};
G__25224.cljs$lang$maxFixedArity = 3;
G__25224.cljs$lang$applyTo = (function (arglist__25226){
var x = cljs.core.first(arglist__25226);
arglist__25226 = cljs.core.next(arglist__25226);
var y = cljs.core.first(arglist__25226);
arglist__25226 = cljs.core.next(arglist__25226);
var z = cljs.core.first(arglist__25226);
var args = cljs.core.rest(arglist__25226);
return G__25224__delegate(x,y,z,args);
});
G__25224.cljs$core$IFn$_invoke$arity$variadic = G__25224__delegate;
return G__25224;
})()
;
G__25223 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25223__0.call(this);
case 1:
return G__25223__1.call(this,x);
case 2:
return G__25223__2.call(this,x,y);
case 3:
return G__25223__3.call(this,x,y,z);
default:
var G__25227 = null;
if (arguments.length > 3) {
var G__25228__i = 0, G__25228__a = new Array(arguments.length -  3);
while (G__25228__i < G__25228__a.length) {G__25228__a[G__25228__i] = arguments[G__25228__i + 3]; ++G__25228__i;}
G__25227 = new cljs.core.IndexedSeq(G__25228__a,0);
}
return G__25223__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25223.cljs$lang$maxFixedArity = 3;
G__25223.cljs$lang$applyTo = G__25223__4.cljs$lang$applyTo;
G__25223.cljs$core$IFn$_invoke$arity$0 = G__25223__0;
G__25223.cljs$core$IFn$_invoke$arity$1 = G__25223__1;
G__25223.cljs$core$IFn$_invoke$arity$2 = G__25223__2;
G__25223.cljs$core$IFn$_invoke$arity$3 = G__25223__3;
G__25223.cljs$core$IFn$_invoke$arity$variadic = G__25223__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25223;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__25229 = null;
var G__25229__0 = (function (){
var G__25191 = arg1;
var G__25192 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25191,G__25192) : f.call(null,G__25191,G__25192));
});
var G__25229__1 = (function (x){
var G__25193 = arg1;
var G__25194 = arg2;
var G__25195 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25193,G__25194,G__25195) : f.call(null,G__25193,G__25194,G__25195));
});
var G__25229__2 = (function (x,y){
var G__25196 = arg1;
var G__25197 = arg2;
var G__25198 = x;
var G__25199 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25196,G__25197,G__25198,G__25199) : f.call(null,G__25196,G__25197,G__25198,G__25199));
});
var G__25229__3 = (function (x,y,z){
var G__25200 = arg1;
var G__25201 = arg2;
var G__25202 = x;
var G__25203 = y;
var G__25204 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25200,G__25201,G__25202,G__25203,G__25204) : f.call(null,G__25200,G__25201,G__25202,G__25203,G__25204));
});
var G__25229__4 = (function() { 
var G__25230__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__25230 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25231__i = 0, G__25231__a = new Array(arguments.length -  3);
while (G__25231__i < G__25231__a.length) {G__25231__a[G__25231__i] = arguments[G__25231__i + 3]; ++G__25231__i;}
  args = new cljs.core.IndexedSeq(G__25231__a,0);
} 
return G__25230__delegate.call(this,x,y,z,args);};
G__25230.cljs$lang$maxFixedArity = 3;
G__25230.cljs$lang$applyTo = (function (arglist__25232){
var x = cljs.core.first(arglist__25232);
arglist__25232 = cljs.core.next(arglist__25232);
var y = cljs.core.first(arglist__25232);
arglist__25232 = cljs.core.next(arglist__25232);
var z = cljs.core.first(arglist__25232);
var args = cljs.core.rest(arglist__25232);
return G__25230__delegate(x,y,z,args);
});
G__25230.cljs$core$IFn$_invoke$arity$variadic = G__25230__delegate;
return G__25230;
})()
;
G__25229 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25229__0.call(this);
case 1:
return G__25229__1.call(this,x);
case 2:
return G__25229__2.call(this,x,y);
case 3:
return G__25229__3.call(this,x,y,z);
default:
var G__25233 = null;
if (arguments.length > 3) {
var G__25234__i = 0, G__25234__a = new Array(arguments.length -  3);
while (G__25234__i < G__25234__a.length) {G__25234__a[G__25234__i] = arguments[G__25234__i + 3]; ++G__25234__i;}
G__25233 = new cljs.core.IndexedSeq(G__25234__a,0);
}
return G__25229__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25233);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25229.cljs$lang$maxFixedArity = 3;
G__25229.cljs$lang$applyTo = G__25229__4.cljs$lang$applyTo;
G__25229.cljs$core$IFn$_invoke$arity$0 = G__25229__0;
G__25229.cljs$core$IFn$_invoke$arity$1 = G__25229__1;
G__25229.cljs$core$IFn$_invoke$arity$2 = G__25229__2;
G__25229.cljs$core$IFn$_invoke$arity$3 = G__25229__3;
G__25229.cljs$core$IFn$_invoke$arity$variadic = G__25229__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25229;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__25235 = null;
var G__25235__0 = (function (){
var G__25205 = arg1;
var G__25206 = arg2;
var G__25207 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25205,G__25206,G__25207) : f.call(null,G__25205,G__25206,G__25207));
});
var G__25235__1 = (function (x){
var G__25208 = arg1;
var G__25209 = arg2;
var G__25210 = arg3;
var G__25211 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25208,G__25209,G__25210,G__25211) : f.call(null,G__25208,G__25209,G__25210,G__25211));
});
var G__25235__2 = (function (x,y){
var G__25212 = arg1;
var G__25213 = arg2;
var G__25214 = arg3;
var G__25215 = x;
var G__25216 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25212,G__25213,G__25214,G__25215,G__25216) : f.call(null,G__25212,G__25213,G__25214,G__25215,G__25216));
});
var G__25235__3 = (function (x,y,z){
var G__25217 = arg1;
var G__25218 = arg2;
var G__25219 = arg3;
var G__25220 = x;
var G__25221 = y;
var G__25222 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25217,G__25218,G__25219,G__25220,G__25221,G__25222) : f.call(null,G__25217,G__25218,G__25219,G__25220,G__25221,G__25222));
});
var G__25235__4 = (function() { 
var G__25236__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__25236 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25237__i = 0, G__25237__a = new Array(arguments.length -  3);
while (G__25237__i < G__25237__a.length) {G__25237__a[G__25237__i] = arguments[G__25237__i + 3]; ++G__25237__i;}
  args = new cljs.core.IndexedSeq(G__25237__a,0);
} 
return G__25236__delegate.call(this,x,y,z,args);};
G__25236.cljs$lang$maxFixedArity = 3;
G__25236.cljs$lang$applyTo = (function (arglist__25238){
var x = cljs.core.first(arglist__25238);
arglist__25238 = cljs.core.next(arglist__25238);
var y = cljs.core.first(arglist__25238);
arglist__25238 = cljs.core.next(arglist__25238);
var z = cljs.core.first(arglist__25238);
var args = cljs.core.rest(arglist__25238);
return G__25236__delegate(x,y,z,args);
});
G__25236.cljs$core$IFn$_invoke$arity$variadic = G__25236__delegate;
return G__25236;
})()
;
G__25235 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25235__0.call(this);
case 1:
return G__25235__1.call(this,x);
case 2:
return G__25235__2.call(this,x,y);
case 3:
return G__25235__3.call(this,x,y,z);
default:
var G__25239 = null;
if (arguments.length > 3) {
var G__25240__i = 0, G__25240__a = new Array(arguments.length -  3);
while (G__25240__i < G__25240__a.length) {G__25240__a[G__25240__i] = arguments[G__25240__i + 3]; ++G__25240__i;}
G__25239 = new cljs.core.IndexedSeq(G__25240__a,0);
}
return G__25235__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25239);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25235.cljs$lang$maxFixedArity = 3;
G__25235.cljs$lang$applyTo = G__25235__4.cljs$lang$applyTo;
G__25235.cljs$core$IFn$_invoke$arity$0 = G__25235__0;
G__25235.cljs$core$IFn$_invoke$arity$1 = G__25235__1;
G__25235.cljs$core$IFn$_invoke$arity$2 = G__25235__2;
G__25235.cljs$core$IFn$_invoke$arity$3 = G__25235__3;
G__25235.cljs$core$IFn$_invoke$arity$variadic = G__25235__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25235;
})()
});
var partial__5 = (function() { 
var G__25241__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__25242__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__25242 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25243__i = 0, G__25243__a = new Array(arguments.length -  0);
while (G__25243__i < G__25243__a.length) {G__25243__a[G__25243__i] = arguments[G__25243__i + 0]; ++G__25243__i;}
  args = new cljs.core.IndexedSeq(G__25243__a,0);
} 
return G__25242__delegate.call(this,args);};
G__25242.cljs$lang$maxFixedArity = 0;
G__25242.cljs$lang$applyTo = (function (arglist__25244){
var args = cljs.core.seq(arglist__25244);
return G__25242__delegate(args);
});
G__25242.cljs$core$IFn$_invoke$arity$variadic = G__25242__delegate;
return G__25242;
})()
;
};
var G__25241 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__25245__i = 0, G__25245__a = new Array(arguments.length -  4);
while (G__25245__i < G__25245__a.length) {G__25245__a[G__25245__i] = arguments[G__25245__i + 4]; ++G__25245__i;}
  more = new cljs.core.IndexedSeq(G__25245__a,0);
} 
return G__25241__delegate.call(this,f,arg1,arg2,arg3,more);};
G__25241.cljs$lang$maxFixedArity = 4;
G__25241.cljs$lang$applyTo = (function (arglist__25246){
var f = cljs.core.first(arglist__25246);
arglist__25246 = cljs.core.next(arglist__25246);
var arg1 = cljs.core.first(arglist__25246);
arglist__25246 = cljs.core.next(arglist__25246);
var arg2 = cljs.core.first(arglist__25246);
arglist__25246 = cljs.core.next(arglist__25246);
var arg3 = cljs.core.first(arglist__25246);
var more = cljs.core.rest(arglist__25246);
return G__25241__delegate(f,arg1,arg2,arg3,more);
});
G__25241.cljs$core$IFn$_invoke$arity$variadic = G__25241__delegate;
return G__25241;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__25247 = null;
if (arguments.length > 4) {
var G__25248__i = 0, G__25248__a = new Array(arguments.length -  4);
while (G__25248__i < G__25248__a.length) {G__25248__a[G__25248__i] = arguments[G__25248__i + 4]; ++G__25248__i;}
G__25247 = new cljs.core.IndexedSeq(G__25248__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__25247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__25281 = null;
var G__25281__1 = (function (a){
var G__25265 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25265) : f.call(null,G__25265));
});
var G__25281__2 = (function (a,b){
var G__25266 = (((a == null))?x:a);
var G__25267 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25266,G__25267) : f.call(null,G__25266,G__25267));
});
var G__25281__3 = (function (a,b,c){
var G__25268 = (((a == null))?x:a);
var G__25269 = b;
var G__25270 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25268,G__25269,G__25270) : f.call(null,G__25268,G__25269,G__25270));
});
var G__25281__4 = (function() { 
var G__25282__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__25282 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25283__i = 0, G__25283__a = new Array(arguments.length -  3);
while (G__25283__i < G__25283__a.length) {G__25283__a[G__25283__i] = arguments[G__25283__i + 3]; ++G__25283__i;}
  ds = new cljs.core.IndexedSeq(G__25283__a,0);
} 
return G__25282__delegate.call(this,a,b,c,ds);};
G__25282.cljs$lang$maxFixedArity = 3;
G__25282.cljs$lang$applyTo = (function (arglist__25284){
var a = cljs.core.first(arglist__25284);
arglist__25284 = cljs.core.next(arglist__25284);
var b = cljs.core.first(arglist__25284);
arglist__25284 = cljs.core.next(arglist__25284);
var c = cljs.core.first(arglist__25284);
var ds = cljs.core.rest(arglist__25284);
return G__25282__delegate(a,b,c,ds);
});
G__25282.cljs$core$IFn$_invoke$arity$variadic = G__25282__delegate;
return G__25282;
})()
;
G__25281 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__25281__1.call(this,a);
case 2:
return G__25281__2.call(this,a,b);
case 3:
return G__25281__3.call(this,a,b,c);
default:
var G__25285 = null;
if (arguments.length > 3) {
var G__25286__i = 0, G__25286__a = new Array(arguments.length -  3);
while (G__25286__i < G__25286__a.length) {G__25286__a[G__25286__i] = arguments[G__25286__i + 3]; ++G__25286__i;}
G__25285 = new cljs.core.IndexedSeq(G__25286__a,0);
}
return G__25281__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25285);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25281.cljs$lang$maxFixedArity = 3;
G__25281.cljs$lang$applyTo = G__25281__4.cljs$lang$applyTo;
G__25281.cljs$core$IFn$_invoke$arity$1 = G__25281__1;
G__25281.cljs$core$IFn$_invoke$arity$2 = G__25281__2;
G__25281.cljs$core$IFn$_invoke$arity$3 = G__25281__3;
G__25281.cljs$core$IFn$_invoke$arity$variadic = G__25281__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25281;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__25287 = null;
var G__25287__2 = (function (a,b){
var G__25271 = (((a == null))?x:a);
var G__25272 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25271,G__25272) : f.call(null,G__25271,G__25272));
});
var G__25287__3 = (function (a,b,c){
var G__25273 = (((a == null))?x:a);
var G__25274 = (((b == null))?y:b);
var G__25275 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25273,G__25274,G__25275) : f.call(null,G__25273,G__25274,G__25275));
});
var G__25287__4 = (function() { 
var G__25288__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__25288 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25289__i = 0, G__25289__a = new Array(arguments.length -  3);
while (G__25289__i < G__25289__a.length) {G__25289__a[G__25289__i] = arguments[G__25289__i + 3]; ++G__25289__i;}
  ds = new cljs.core.IndexedSeq(G__25289__a,0);
} 
return G__25288__delegate.call(this,a,b,c,ds);};
G__25288.cljs$lang$maxFixedArity = 3;
G__25288.cljs$lang$applyTo = (function (arglist__25290){
var a = cljs.core.first(arglist__25290);
arglist__25290 = cljs.core.next(arglist__25290);
var b = cljs.core.first(arglist__25290);
arglist__25290 = cljs.core.next(arglist__25290);
var c = cljs.core.first(arglist__25290);
var ds = cljs.core.rest(arglist__25290);
return G__25288__delegate(a,b,c,ds);
});
G__25288.cljs$core$IFn$_invoke$arity$variadic = G__25288__delegate;
return G__25288;
})()
;
G__25287 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25287__2.call(this,a,b);
case 3:
return G__25287__3.call(this,a,b,c);
default:
var G__25291 = null;
if (arguments.length > 3) {
var G__25292__i = 0, G__25292__a = new Array(arguments.length -  3);
while (G__25292__i < G__25292__a.length) {G__25292__a[G__25292__i] = arguments[G__25292__i + 3]; ++G__25292__i;}
G__25291 = new cljs.core.IndexedSeq(G__25292__a,0);
}
return G__25287__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25287.cljs$lang$maxFixedArity = 3;
G__25287.cljs$lang$applyTo = G__25287__4.cljs$lang$applyTo;
G__25287.cljs$core$IFn$_invoke$arity$2 = G__25287__2;
G__25287.cljs$core$IFn$_invoke$arity$3 = G__25287__3;
G__25287.cljs$core$IFn$_invoke$arity$variadic = G__25287__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25287;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__25293 = null;
var G__25293__2 = (function (a,b){
var G__25276 = (((a == null))?x:a);
var G__25277 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25276,G__25277) : f.call(null,G__25276,G__25277));
});
var G__25293__3 = (function (a,b,c){
var G__25278 = (((a == null))?x:a);
var G__25279 = (((b == null))?y:b);
var G__25280 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25278,G__25279,G__25280) : f.call(null,G__25278,G__25279,G__25280));
});
var G__25293__4 = (function() { 
var G__25294__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__25294 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25295__i = 0, G__25295__a = new Array(arguments.length -  3);
while (G__25295__i < G__25295__a.length) {G__25295__a[G__25295__i] = arguments[G__25295__i + 3]; ++G__25295__i;}
  ds = new cljs.core.IndexedSeq(G__25295__a,0);
} 
return G__25294__delegate.call(this,a,b,c,ds);};
G__25294.cljs$lang$maxFixedArity = 3;
G__25294.cljs$lang$applyTo = (function (arglist__25296){
var a = cljs.core.first(arglist__25296);
arglist__25296 = cljs.core.next(arglist__25296);
var b = cljs.core.first(arglist__25296);
arglist__25296 = cljs.core.next(arglist__25296);
var c = cljs.core.first(arglist__25296);
var ds = cljs.core.rest(arglist__25296);
return G__25294__delegate(a,b,c,ds);
});
G__25294.cljs$core$IFn$_invoke$arity$variadic = G__25294__delegate;
return G__25294;
})()
;
G__25293 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25293__2.call(this,a,b);
case 3:
return G__25293__3.call(this,a,b,c);
default:
var G__25297 = null;
if (arguments.length > 3) {
var G__25298__i = 0, G__25298__a = new Array(arguments.length -  3);
while (G__25298__i < G__25298__a.length) {G__25298__a[G__25298__i] = arguments[G__25298__i + 3]; ++G__25298__i;}
G__25297 = new cljs.core.IndexedSeq(G__25298__a,0);
}
return G__25293__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25293.cljs$lang$maxFixedArity = 3;
G__25293.cljs$lang$applyTo = G__25293__4.cljs$lang$applyTo;
G__25293.cljs$core$IFn$_invoke$arity$2 = G__25293__2;
G__25293.cljs$core$IFn$_invoke$arity$3 = G__25293__3;
G__25293.cljs$core$IFn$_invoke$arity$variadic = G__25293__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25293;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__25329 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__25329) : cljs.core.volatile_BANG_.call(null,G__25329));
})();
return ((function (i){
return (function() {
var G__25359 = null;
var G__25359__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25359__1 = (function (result){
var G__25330 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25330) : rf.call(null,G__25330));
});
var G__25359__2 = (function (result,input){
var G__25331 = result;
var G__25332 = (function (){var G__25333 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__25334 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25333,G__25334) : f.call(null,G__25333,G__25334));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25331,G__25332) : rf.call(null,G__25331,G__25332));
});
G__25359 = function(result,input){
switch(arguments.length){
case 0:
return G__25359__0.call(this);
case 1:
return G__25359__1.call(this,result);
case 2:
return G__25359__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25359.cljs$core$IFn$_invoke$arity$0 = G__25359__0;
G__25359.cljs$core$IFn$_invoke$arity$1 = G__25359__1;
G__25359.cljs$core$IFn$_invoke$arity$2 = G__25359__2;
return G__25359;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___25360 = size;
var i_25361 = (0);
while(true){
if((i_25361 < n__17032__auto___25360)){
cljs.core.chunk_append(b,(function (){var G__25355 = (idx + i_25361);
var G__25356 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25361);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25355,G__25356) : f.call(null,G__25355,G__25356));
})());

var G__25362 = (i_25361 + (1));
i_25361 = G__25362;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__25357 = idx;
var G__25358 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25357,G__25358) : f.call(null,G__25357,G__25358));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__25381 = null;
var G__25381__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25381__1 = (function (result){
var G__25375 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25375) : rf.call(null,G__25375));
});
var G__25381__2 = (function (result,input){
var v = (function (){var G__25376 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25376) : f.call(null,G__25376));
})();
if((v == null)){
return result;
} else {
var G__25377 = result;
var G__25378 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25377,G__25378) : rf.call(null,G__25377,G__25378));
}
});
G__25381 = function(result,input){
switch(arguments.length){
case 0:
return G__25381__0.call(this);
case 1:
return G__25381__1.call(this,result);
case 2:
return G__25381__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25381.cljs$core$IFn$_invoke$arity$0 = G__25381__0;
G__25381.cljs$core$IFn$_invoke$arity$1 = G__25381__1;
G__25381.cljs$core$IFn$_invoke$arity$2 = G__25381__2;
return G__25381;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___25382 = size;
var i_25383 = (0);
while(true){
if((i_25383 < n__17032__auto___25382)){
var x_25384 = (function (){var G__25379 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25383);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25379) : f.call(null,G__25379));
})();
if((x_25384 == null)){
} else {
cljs.core.chunk_append(b,x_25384);
}

var G__25385 = (i_25383 + (1));
i_25383 = G__25385;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25380 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25380) : f.call(null,G__25380));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25386 = this$__$1;
return goog.getUid(G__25386);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__25387 = cljs.core.seq(self__.watches);
var chunk__25388 = null;
var count__25389 = (0);
var i__25390 = (0);
while(true){
if((i__25390 < count__25389)){
var vec__25391 = chunk__25388.cljs$core$IIndexed$_nth$arity$2(null,i__25390);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25391,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25391,(1),null);
var G__25392_25401 = key;
var G__25393_25402 = this$__$1;
var G__25394_25403 = oldval;
var G__25395_25404 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25392_25401,G__25393_25402,G__25394_25403,G__25395_25404) : f.call(null,G__25392_25401,G__25393_25402,G__25394_25403,G__25395_25404));

var G__25405 = seq__25387;
var G__25406 = chunk__25388;
var G__25407 = count__25389;
var G__25408 = (i__25390 + (1));
seq__25387 = G__25405;
chunk__25388 = G__25406;
count__25389 = G__25407;
i__25390 = G__25408;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25387);
if(temp__4126__auto__){
var seq__25387__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25387__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__25387__$1);
var G__25409 = cljs.core.chunk_rest(seq__25387__$1);
var G__25410 = c__16932__auto__;
var G__25411 = cljs.core.count(c__16932__auto__);
var G__25412 = (0);
seq__25387 = G__25409;
chunk__25388 = G__25410;
count__25389 = G__25411;
i__25390 = G__25412;
continue;
} else {
var vec__25396 = cljs.core.first(seq__25387__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25396,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25396,(1),null);
var G__25397_25413 = key;
var G__25398_25414 = this$__$1;
var G__25399_25415 = oldval;
var G__25400_25416 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25397_25413,G__25398_25414,G__25399_25415,G__25400_25416) : f.call(null,G__25397_25413,G__25398_25414,G__25399_25415,G__25400_25416));

var G__25417 = cljs.core.next(seq__25387__$1);
var G__25418 = null;
var G__25419 = (0);
var G__25420 = (0);
seq__25387 = G__25417;
chunk__25388 = G__25418;
count__25389 = G__25419;
i__25390 = G__25420;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__25424__delegate = function (x,p__25421){
var map__25423 = p__25421;
var map__25423__$1 = ((cljs.core.seq_QMARK_(map__25423))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25423):map__25423);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25423__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25423__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__25424 = function (x,var_args){
var p__25421 = null;
if (arguments.length > 1) {
var G__25425__i = 0, G__25425__a = new Array(arguments.length -  1);
while (G__25425__i < G__25425__a.length) {G__25425__a[G__25425__i] = arguments[G__25425__i + 1]; ++G__25425__i;}
  p__25421 = new cljs.core.IndexedSeq(G__25425__a,0);
} 
return G__25424__delegate.call(this,x,p__25421);};
G__25424.cljs$lang$maxFixedArity = 1;
G__25424.cljs$lang$applyTo = (function (arglist__25426){
var x = cljs.core.first(arglist__25426);
var p__25421 = cljs.core.rest(arglist__25426);
return G__25424__delegate(x,p__25421);
});
G__25424.cljs$core$IFn$_invoke$arity$variadic = G__25424__delegate;
return G__25424;
})()
;
atom = function(x,var_args){
var p__25421 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__25427 = null;
if (arguments.length > 1) {
var G__25428__i = 0, G__25428__a = new Array(arguments.length -  1);
while (G__25428__i < G__25428__a.length) {G__25428__a[G__25428__i] = arguments[G__25428__i + 1]; ++G__25428__i;}
G__25427 = new cljs.core.IndexedSeq(G__25428__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__25431 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__25431) : validate.call(null,G__25431));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__25432 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25432) : cljs.core.pr_str.call(null,G__25432));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25439 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25439) : f.call(null,G__25439));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25440 = a.state;
var G__25441 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25440,G__25441) : f.call(null,G__25440,G__25441));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25442 = a.state;
var G__25443 = x;
var G__25444 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25442,G__25443,G__25444) : f.call(null,G__25442,G__25443,G__25444));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__25445__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__25445 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__25446__i = 0, G__25446__a = new Array(arguments.length -  4);
while (G__25446__i < G__25446__a.length) {G__25446__a[G__25446__i] = arguments[G__25446__i + 4]; ++G__25446__i;}
  more = new cljs.core.IndexedSeq(G__25446__a,0);
} 
return G__25445__delegate.call(this,a,f,x,y,more);};
G__25445.cljs$lang$maxFixedArity = 4;
G__25445.cljs$lang$applyTo = (function (arglist__25447){
var a = cljs.core.first(arglist__25447);
arglist__25447 = cljs.core.next(arglist__25447);
var f = cljs.core.first(arglist__25447);
arglist__25447 = cljs.core.next(arglist__25447);
var x = cljs.core.first(arglist__25447);
arglist__25447 = cljs.core.next(arglist__25447);
var y = cljs.core.first(arglist__25447);
var more = cljs.core.rest(arglist__25447);
return G__25445__delegate(a,f,x,y,more);
});
G__25445.cljs$core$IFn$_invoke$arity$variadic = G__25445__delegate;
return G__25445;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__25448 = null;
if (arguments.length > 4) {
var G__25449__i = 0, G__25449__a = new Array(arguments.length -  4);
while (G__25449__i < G__25449__a.length) {G__25449__a[G__25449__i] = arguments[G__25449__i + 4]; ++G__25449__i;}
G__25448 = new cljs.core.IndexedSeq(G__25449__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__25448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25516 = null;
var G__25516__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25516__1 = (function (result){
var G__25483 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25483) : rf.call(null,G__25483));
});
var G__25516__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__25484 = i;
var G__25485 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25484,G__25485) : f.call(null,G__25484,G__25485));
})();
if((v == null)){
return result;
} else {
var G__25486 = result;
var G__25487 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25486,G__25487) : rf.call(null,G__25486,G__25487));
}
});
G__25516 = function(result,input){
switch(arguments.length){
case 0:
return G__25516__0.call(this);
case 1:
return G__25516__1.call(this,result);
case 2:
return G__25516__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25516.cljs$core$IFn$_invoke$arity$0 = G__25516__0;
G__25516.cljs$core$IFn$_invoke$arity$1 = G__25516__1;
G__25516.cljs$core$IFn$_invoke$arity$2 = G__25516__2;
return G__25516;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___25517 = size;
var i_25518 = (0);
while(true){
if((i_25518 < n__17032__auto___25517)){
var x_25519 = (function (){var G__25512 = (idx + i_25518);
var G__25513 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25518);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25512,G__25513) : f.call(null,G__25512,G__25513));
})();
if((x_25519 == null)){
} else {
cljs.core.chunk_append(b,x_25519);
}

var G__25520 = (i_25518 + (1));
i_25518 = G__25520;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25514 = idx;
var G__25515 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25514,G__25515) : f.call(null,G__25514,G__25515));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__25734 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25734) : p.call(null,G__25734));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__25736 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25736) : p.call(null,G__25736));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__25737 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25737) : p.call(null,G__25737));
} else {
return and__16133__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__25739 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25739) : p.call(null,G__25739));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__25741 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25741) : p.call(null,G__25741));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__25742 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25742) : p.call(null,G__25742));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__25911__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__25911 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25912__i = 0, G__25912__a = new Array(arguments.length -  3);
while (G__25912__i < G__25912__a.length) {G__25912__a[G__25912__i] = arguments[G__25912__i + 3]; ++G__25912__i;}
  args = new cljs.core.IndexedSeq(G__25912__a,0);
} 
return G__25911__delegate.call(this,x,y,z,args);};
G__25911.cljs$lang$maxFixedArity = 3;
G__25911.cljs$lang$applyTo = (function (arglist__25913){
var x = cljs.core.first(arglist__25913);
arglist__25913 = cljs.core.next(arglist__25913);
var y = cljs.core.first(arglist__25913);
arglist__25913 = cljs.core.next(arglist__25913);
var z = cljs.core.first(arglist__25913);
var args = cljs.core.rest(arglist__25913);
return G__25911__delegate(x,y,z,args);
});
G__25911.cljs$core$IFn$_invoke$arity$variadic = G__25911__delegate;
return G__25911;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__25914 = null;
if (arguments.length > 3) {
var G__25915__i = 0, G__25915__a = new Array(arguments.length -  3);
while (G__25915__i < G__25915__a.length) {G__25915__a[G__25915__i] = arguments[G__25915__i + 3]; ++G__25915__i;}
G__25914 = new cljs.core.IndexedSeq(G__25915__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25914);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__25774 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25774) : p1.call(null,G__25774));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__25775 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25775) : p2.call(null,G__25775));
} else {
return and__16133__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__25777 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25777) : p1.call(null,G__25777));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__25779 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25779) : p1.call(null,G__25779));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__25781 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25781) : p2.call(null,G__25781));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var G__25782 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25782) : p2.call(null,G__25782));
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__25784 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25784) : p1.call(null,G__25784));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__25786 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25786) : p1.call(null,G__25786));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__25788 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25788) : p1.call(null,G__25788));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__25790 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25790) : p2.call(null,G__25790));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__25792 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25792) : p2.call(null,G__25792));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var G__25793 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25793) : p2.call(null,G__25793));
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__25916__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25521_SHARP_){
var and__16133__auto__ = (function (){var G__25798 = p1__25521_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25798) : p1.call(null,G__25798));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__25799 = p1__25521_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25799) : p2.call(null,G__25799));
} else {
return and__16133__auto__;
}
}),args)));
};
var G__25916 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25917__i = 0, G__25917__a = new Array(arguments.length -  3);
while (G__25917__i < G__25917__a.length) {G__25917__a[G__25917__i] = arguments[G__25917__i + 3]; ++G__25917__i;}
  args = new cljs.core.IndexedSeq(G__25917__a,0);
} 
return G__25916__delegate.call(this,x,y,z,args);};
G__25916.cljs$lang$maxFixedArity = 3;
G__25916.cljs$lang$applyTo = (function (arglist__25918){
var x = cljs.core.first(arglist__25918);
arglist__25918 = cljs.core.next(arglist__25918);
var y = cljs.core.first(arglist__25918);
arglist__25918 = cljs.core.next(arglist__25918);
var z = cljs.core.first(arglist__25918);
var args = cljs.core.rest(arglist__25918);
return G__25916__delegate(x,y,z,args);
});
G__25916.cljs$core$IFn$_invoke$arity$variadic = G__25916__delegate;
return G__25916;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__25919 = null;
if (arguments.length > 3) {
var G__25920__i = 0, G__25920__a = new Array(arguments.length -  3);
while (G__25920__i < G__25920__a.length) {G__25920__a[G__25920__i] = arguments[G__25920__i + 3]; ++G__25920__i;}
G__25919 = new cljs.core.IndexedSeq(G__25920__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__25845 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25845) : p1.call(null,G__25845));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__25847 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25847) : p2.call(null,G__25847));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__25848 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25848) : p3.call(null,G__25848));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__25850 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25850) : p1.call(null,G__25850));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__25852 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25852) : p2.call(null,G__25852));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__25854 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25854) : p3.call(null,G__25854));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__25856 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25856) : p1.call(null,G__25856));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__25858 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25858) : p2.call(null,G__25858));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var G__25859 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25859) : p3.call(null,G__25859));
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__25861 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25861) : p1.call(null,G__25861));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__25863 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25863) : p2.call(null,G__25863));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__25865 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25865) : p3.call(null,G__25865));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__25867 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25867) : p1.call(null,G__25867));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__25869 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25869) : p2.call(null,G__25869));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var and__16133__auto____$5 = (function (){var G__25871 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25871) : p3.call(null,G__25871));
})();
if(cljs.core.truth_(and__16133__auto____$5)){
var and__16133__auto____$6 = (function (){var G__25873 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25873) : p1.call(null,G__25873));
})();
if(cljs.core.truth_(and__16133__auto____$6)){
var and__16133__auto____$7 = (function (){var G__25875 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25875) : p2.call(null,G__25875));
})();
if(cljs.core.truth_(and__16133__auto____$7)){
var G__25876 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25876) : p3.call(null,G__25876));
} else {
return and__16133__auto____$7;
}
} else {
return and__16133__auto____$6;
}
} else {
return and__16133__auto____$5;
}
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__25921__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25522_SHARP_){
var and__16133__auto__ = (function (){var G__25883 = p1__25522_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25883) : p1.call(null,G__25883));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__25885 = p1__25522_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25885) : p2.call(null,G__25885));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__25886 = p1__25522_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25886) : p3.call(null,G__25886));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
}),args)));
};
var G__25921 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25922__i = 0, G__25922__a = new Array(arguments.length -  3);
while (G__25922__i < G__25922__a.length) {G__25922__a[G__25922__i] = arguments[G__25922__i + 3]; ++G__25922__i;}
  args = new cljs.core.IndexedSeq(G__25922__a,0);
} 
return G__25921__delegate.call(this,x,y,z,args);};
G__25921.cljs$lang$maxFixedArity = 3;
G__25921.cljs$lang$applyTo = (function (arglist__25923){
var x = cljs.core.first(arglist__25923);
arglist__25923 = cljs.core.next(arglist__25923);
var y = cljs.core.first(arglist__25923);
arglist__25923 = cljs.core.next(arglist__25923);
var z = cljs.core.first(arglist__25923);
var args = cljs.core.rest(arglist__25923);
return G__25921__delegate(x,y,z,args);
});
G__25921.cljs$core$IFn$_invoke$arity$variadic = G__25921__delegate;
return G__25921;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__25924 = null;
if (arguments.length > 3) {
var G__25925__i = 0, G__25925__a = new Array(arguments.length -  3);
while (G__25925__i < G__25925__a.length) {G__25925__a[G__25925__i] = arguments[G__25925__i + 3]; ++G__25925__i;}
G__25924 = new cljs.core.IndexedSeq(G__25925__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__25926__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25523_SHARP_){
var G__25902 = x;
return (p1__25523_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25523_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25902) : p1__25523_SHARP_.call(null,G__25902));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25524_SHARP_){
var and__16133__auto__ = (function (){var G__25904 = x;
return (p1__25524_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25524_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25904) : p1__25524_SHARP_.call(null,G__25904));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__25905 = y;
return (p1__25524_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25524_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25905) : p1__25524_SHARP_.call(null,G__25905));
} else {
return and__16133__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25525_SHARP_){
var and__16133__auto__ = (function (){var G__25907 = x;
return (p1__25525_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25525_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25907) : p1__25525_SHARP_.call(null,G__25907));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__25909 = y;
return (p1__25525_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25525_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25909) : p1__25525_SHARP_.call(null,G__25909));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__25910 = z;
return (p1__25525_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25525_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25910) : p1__25525_SHARP_.call(null,G__25910));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__25927__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25526_SHARP_){
return cljs.core.every_QMARK_(p1__25526_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__25927 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25928__i = 0, G__25928__a = new Array(arguments.length -  3);
while (G__25928__i < G__25928__a.length) {G__25928__a[G__25928__i] = arguments[G__25928__i + 3]; ++G__25928__i;}
  args = new cljs.core.IndexedSeq(G__25928__a,0);
} 
return G__25927__delegate.call(this,x,y,z,args);};
G__25927.cljs$lang$maxFixedArity = 3;
G__25927.cljs$lang$applyTo = (function (arglist__25929){
var x = cljs.core.first(arglist__25929);
arglist__25929 = cljs.core.next(arglist__25929);
var y = cljs.core.first(arglist__25929);
arglist__25929 = cljs.core.next(arglist__25929);
var z = cljs.core.first(arglist__25929);
var args = cljs.core.rest(arglist__25929);
return G__25927__delegate(x,y,z,args);
});
G__25927.cljs$core$IFn$_invoke$arity$variadic = G__25927__delegate;
return G__25927;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__25930 = null;
if (arguments.length > 3) {
var G__25931__i = 0, G__25931__a = new Array(arguments.length -  3);
while (G__25931__i < G__25931__a.length) {G__25931__a[G__25931__i] = arguments[G__25931__i + 3]; ++G__25931__i;}
G__25930 = new cljs.core.IndexedSeq(G__25931__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__25926 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__25932__i = 0, G__25932__a = new Array(arguments.length -  3);
while (G__25932__i < G__25932__a.length) {G__25932__a[G__25932__i] = arguments[G__25932__i + 3]; ++G__25932__i;}
  ps = new cljs.core.IndexedSeq(G__25932__a,0);
} 
return G__25926__delegate.call(this,p1,p2,p3,ps);};
G__25926.cljs$lang$maxFixedArity = 3;
G__25926.cljs$lang$applyTo = (function (arglist__25933){
var p1 = cljs.core.first(arglist__25933);
arglist__25933 = cljs.core.next(arglist__25933);
var p2 = cljs.core.first(arglist__25933);
arglist__25933 = cljs.core.next(arglist__25933);
var p3 = cljs.core.first(arglist__25933);
var ps = cljs.core.rest(arglist__25933);
return G__25926__delegate(p1,p2,p3,ps);
});
G__25926.cljs$core$IFn$_invoke$arity$variadic = G__25926__delegate;
return G__25926;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__25934 = null;
if (arguments.length > 3) {
var G__25935__i = 0, G__25935__a = new Array(arguments.length -  3);
while (G__25935__i < G__25935__a.length) {G__25935__a[G__25935__i] = arguments[G__25935__i + 3]; ++G__25935__i;}
G__25934 = new cljs.core.IndexedSeq(G__25935__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__25934);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__26141 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26141) : p.call(null,G__26141));
});
var sp1__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__26143 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26143) : p.call(null,G__26143));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__26144 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26144) : p.call(null,G__26144));
}
});
var sp1__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__26146 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26146) : p.call(null,G__26146));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26148 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26148) : p.call(null,G__26148));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__26149 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26149) : p.call(null,G__26149));
}
}
});
var sp1__4 = (function() { 
var G__26310__delegate = function (x,y,z,args){
var or__16145__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__26310 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26311__i = 0, G__26311__a = new Array(arguments.length -  3);
while (G__26311__i < G__26311__a.length) {G__26311__a[G__26311__i] = arguments[G__26311__i + 3]; ++G__26311__i;}
  args = new cljs.core.IndexedSeq(G__26311__a,0);
} 
return G__26310__delegate.call(this,x,y,z,args);};
G__26310.cljs$lang$maxFixedArity = 3;
G__26310.cljs$lang$applyTo = (function (arglist__26312){
var x = cljs.core.first(arglist__26312);
arglist__26312 = cljs.core.next(arglist__26312);
var y = cljs.core.first(arglist__26312);
arglist__26312 = cljs.core.next(arglist__26312);
var z = cljs.core.first(arglist__26312);
var args = cljs.core.rest(arglist__26312);
return G__26310__delegate(x,y,z,args);
});
G__26310.cljs$core$IFn$_invoke$arity$variadic = G__26310__delegate;
return G__26310;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__26313 = null;
if (arguments.length > 3) {
var G__26314__i = 0, G__26314__a = new Array(arguments.length -  3);
while (G__26314__i < G__26314__a.length) {G__26314__a[G__26314__i] = arguments[G__26314__i + 3]; ++G__26314__i;}
G__26313 = new cljs.core.IndexedSeq(G__26314__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__16145__auto__ = (function (){var G__26181 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26181) : p1.call(null,G__26181));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__26182 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26182) : p2.call(null,G__26182));
}
});
var sp2__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__26184 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26184) : p1.call(null,G__26184));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26186 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26186) : p1.call(null,G__26186));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26188 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26188) : p2.call(null,G__26188));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var G__26189 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26189) : p2.call(null,G__26189));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__26191 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26191) : p1.call(null,G__26191));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26193 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26193) : p1.call(null,G__26193));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26195 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26195) : p1.call(null,G__26195));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__26197 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26197) : p2.call(null,G__26197));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__26199 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26199) : p2.call(null,G__26199));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var G__26200 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26200) : p2.call(null,G__26200));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__26315__delegate = function (x,y,z,args){
var or__16145__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__){
return (function (p1__25936_SHARP_){
var or__16145__auto____$1 = (function (){var G__26202 = p1__25936_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26202) : p1.call(null,G__26202));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__26203 = p1__25936_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26203) : p2.call(null,G__26203));
}
});})(or__16145__auto__))
,args);
}
};
var G__26315 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26316__i = 0, G__26316__a = new Array(arguments.length -  3);
while (G__26316__i < G__26316__a.length) {G__26316__a[G__26316__i] = arguments[G__26316__i + 3]; ++G__26316__i;}
  args = new cljs.core.IndexedSeq(G__26316__a,0);
} 
return G__26315__delegate.call(this,x,y,z,args);};
G__26315.cljs$lang$maxFixedArity = 3;
G__26315.cljs$lang$applyTo = (function (arglist__26317){
var x = cljs.core.first(arglist__26317);
arglist__26317 = cljs.core.next(arglist__26317);
var y = cljs.core.first(arglist__26317);
arglist__26317 = cljs.core.next(arglist__26317);
var z = cljs.core.first(arglist__26317);
var args = cljs.core.rest(arglist__26317);
return G__26315__delegate(x,y,z,args);
});
G__26315.cljs$core$IFn$_invoke$arity$variadic = G__26315__delegate;
return G__26315;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__26318 = null;
if (arguments.length > 3) {
var G__26319__i = 0, G__26319__a = new Array(arguments.length -  3);
while (G__26319__i < G__26319__a.length) {G__26319__a[G__26319__i] = arguments[G__26319__i + 3]; ++G__26319__i;}
G__26318 = new cljs.core.IndexedSeq(G__26319__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__16145__auto__ = (function (){var G__26249 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26249) : p1.call(null,G__26249));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26251 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26251) : p2.call(null,G__26251));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__26252 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26252) : p3.call(null,G__26252));
}
}
});
var sp3__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__26254 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26254) : p1.call(null,G__26254));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26256 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26256) : p2.call(null,G__26256));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26258 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26258) : p3.call(null,G__26258));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__26260 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26260) : p1.call(null,G__26260));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__26262 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26262) : p2.call(null,G__26262));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var G__26263 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26263) : p3.call(null,G__26263));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__26265 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26265) : p1.call(null,G__26265));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26267 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26267) : p2.call(null,G__26267));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26269 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26269) : p3.call(null,G__26269));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__26271 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26271) : p1.call(null,G__26271));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__26273 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26273) : p2.call(null,G__26273));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var or__16145__auto____$5 = (function (){var G__26275 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26275) : p3.call(null,G__26275));
})();
if(cljs.core.truth_(or__16145__auto____$5)){
return or__16145__auto____$5;
} else {
var or__16145__auto____$6 = (function (){var G__26277 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26277) : p1.call(null,G__26277));
})();
if(cljs.core.truth_(or__16145__auto____$6)){
return or__16145__auto____$6;
} else {
var or__16145__auto____$7 = (function (){var G__26279 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26279) : p2.call(null,G__26279));
})();
if(cljs.core.truth_(or__16145__auto____$7)){
return or__16145__auto____$7;
} else {
var G__26280 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26280) : p3.call(null,G__26280));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__26320__delegate = function (x,y,z,args){
var or__16145__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__){
return (function (p1__25937_SHARP_){
var or__16145__auto____$1 = (function (){var G__26282 = p1__25937_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26282) : p1.call(null,G__26282));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__26284 = p1__25937_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26284) : p2.call(null,G__26284));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var G__26285 = p1__25937_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26285) : p3.call(null,G__26285));
}
}
});})(or__16145__auto__))
,args);
}
};
var G__26320 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26321__i = 0, G__26321__a = new Array(arguments.length -  3);
while (G__26321__i < G__26321__a.length) {G__26321__a[G__26321__i] = arguments[G__26321__i + 3]; ++G__26321__i;}
  args = new cljs.core.IndexedSeq(G__26321__a,0);
} 
return G__26320__delegate.call(this,x,y,z,args);};
G__26320.cljs$lang$maxFixedArity = 3;
G__26320.cljs$lang$applyTo = (function (arglist__26322){
var x = cljs.core.first(arglist__26322);
arglist__26322 = cljs.core.next(arglist__26322);
var y = cljs.core.first(arglist__26322);
arglist__26322 = cljs.core.next(arglist__26322);
var z = cljs.core.first(arglist__26322);
var args = cljs.core.rest(arglist__26322);
return G__26320__delegate(x,y,z,args);
});
G__26320.cljs$core$IFn$_invoke$arity$variadic = G__26320__delegate;
return G__26320;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__26323 = null;
if (arguments.length > 3) {
var G__26324__i = 0, G__26324__a = new Array(arguments.length -  3);
while (G__26324__i < G__26324__a.length) {G__26324__a[G__26324__i] = arguments[G__26324__i + 3]; ++G__26324__i;}
G__26323 = new cljs.core.IndexedSeq(G__26324__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26323);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__26325__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__25938_SHARP_){
var G__26301 = x;
return (p1__25938_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25938_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26301) : p1__25938_SHARP_.call(null,G__26301));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__25939_SHARP_){
var or__16145__auto__ = (function (){var G__26303 = x;
return (p1__25939_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25939_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26303) : p1__25939_SHARP_.call(null,G__26303));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__26304 = y;
return (p1__25939_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25939_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26304) : p1__25939_SHARP_.call(null,G__26304));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__25940_SHARP_){
var or__16145__auto__ = (function (){var G__26306 = x;
return (p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26306) : p1__25940_SHARP_.call(null,G__26306));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__26308 = y;
return (p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26308) : p1__25940_SHARP_.call(null,G__26308));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__26309 = z;
return (p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26309) : p1__25940_SHARP_.call(null,G__26309));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__26326__delegate = function (x,y,z,args){
var or__16145__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__,ps__$1){
return (function (p1__25941_SHARP_){
return cljs.core.some(p1__25941_SHARP_,args);
});})(or__16145__auto__,ps__$1))
,ps__$1);
}
};
var G__26326 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26327__i = 0, G__26327__a = new Array(arguments.length -  3);
while (G__26327__i < G__26327__a.length) {G__26327__a[G__26327__i] = arguments[G__26327__i + 3]; ++G__26327__i;}
  args = new cljs.core.IndexedSeq(G__26327__a,0);
} 
return G__26326__delegate.call(this,x,y,z,args);};
G__26326.cljs$lang$maxFixedArity = 3;
G__26326.cljs$lang$applyTo = (function (arglist__26328){
var x = cljs.core.first(arglist__26328);
arglist__26328 = cljs.core.next(arglist__26328);
var y = cljs.core.first(arglist__26328);
arglist__26328 = cljs.core.next(arglist__26328);
var z = cljs.core.first(arglist__26328);
var args = cljs.core.rest(arglist__26328);
return G__26326__delegate(x,y,z,args);
});
G__26326.cljs$core$IFn$_invoke$arity$variadic = G__26326__delegate;
return G__26326;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__26329 = null;
if (arguments.length > 3) {
var G__26330__i = 0, G__26330__a = new Array(arguments.length -  3);
while (G__26330__i < G__26330__a.length) {G__26330__a[G__26330__i] = arguments[G__26330__i + 3]; ++G__26330__i;}
G__26329 = new cljs.core.IndexedSeq(G__26330__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__26325 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26331__i = 0, G__26331__a = new Array(arguments.length -  3);
while (G__26331__i < G__26331__a.length) {G__26331__a[G__26331__i] = arguments[G__26331__i + 3]; ++G__26331__i;}
  ps = new cljs.core.IndexedSeq(G__26331__a,0);
} 
return G__26325__delegate.call(this,p1,p2,p3,ps);};
G__26325.cljs$lang$maxFixedArity = 3;
G__26325.cljs$lang$applyTo = (function (arglist__26332){
var p1 = cljs.core.first(arglist__26332);
arglist__26332 = cljs.core.next(arglist__26332);
var p2 = cljs.core.first(arglist__26332);
arglist__26332 = cljs.core.next(arglist__26332);
var p3 = cljs.core.first(arglist__26332);
var ps = cljs.core.rest(arglist__26332);
return G__26325__delegate(p1,p2,p3,ps);
});
G__26325.cljs$core$IFn$_invoke$arity$variadic = G__26325__delegate;
return G__26325;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__26333 = null;
if (arguments.length > 3) {
var G__26334__i = 0, G__26334__a = new Array(arguments.length -  3);
while (G__26334__i < G__26334__a.length) {G__26334__a[G__26334__i] = arguments[G__26334__i + 3]; ++G__26334__i;}
G__26333 = new cljs.core.IndexedSeq(G__26334__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__26389 = null;
var G__26389__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26389__1 = (function (result){
var G__26375 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26375) : rf.call(null,G__26375));
});
var G__26389__2 = (function (result,input){
var G__26376 = result;
var G__26377 = (function (){var G__26378 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26378) : f.call(null,G__26378));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26376,G__26377) : rf.call(null,G__26376,G__26377));
});
var G__26389__3 = (function() { 
var G__26390__delegate = function (result,input,inputs){
var G__26379 = result;
var G__26380 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26379,G__26380) : rf.call(null,G__26379,G__26380));
};
var G__26390 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__26391__i = 0, G__26391__a = new Array(arguments.length -  2);
while (G__26391__i < G__26391__a.length) {G__26391__a[G__26391__i] = arguments[G__26391__i + 2]; ++G__26391__i;}
  inputs = new cljs.core.IndexedSeq(G__26391__a,0);
} 
return G__26390__delegate.call(this,result,input,inputs);};
G__26390.cljs$lang$maxFixedArity = 2;
G__26390.cljs$lang$applyTo = (function (arglist__26392){
var result = cljs.core.first(arglist__26392);
arglist__26392 = cljs.core.next(arglist__26392);
var input = cljs.core.first(arglist__26392);
var inputs = cljs.core.rest(arglist__26392);
return G__26390__delegate(result,input,inputs);
});
G__26390.cljs$core$IFn$_invoke$arity$variadic = G__26390__delegate;
return G__26390;
})()
;
G__26389 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__26389__0.call(this);
case 1:
return G__26389__1.call(this,result);
case 2:
return G__26389__2.call(this,result,input);
default:
var G__26393 = null;
if (arguments.length > 2) {
var G__26394__i = 0, G__26394__a = new Array(arguments.length -  2);
while (G__26394__i < G__26394__a.length) {G__26394__a[G__26394__i] = arguments[G__26394__i + 2]; ++G__26394__i;}
G__26393 = new cljs.core.IndexedSeq(G__26394__a,0);
}
return G__26389__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__26393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26389.cljs$lang$maxFixedArity = 2;
G__26389.cljs$lang$applyTo = G__26389__3.cljs$lang$applyTo;
G__26389.cljs$core$IFn$_invoke$arity$0 = G__26389__0;
G__26389.cljs$core$IFn$_invoke$arity$1 = G__26389__1;
G__26389.cljs$core$IFn$_invoke$arity$2 = G__26389__2;
G__26389.cljs$core$IFn$_invoke$arity$variadic = G__26389__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26389;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___26395 = size;
var i_26396 = (0);
while(true){
if((i_26396 < n__17032__auto___26395)){
cljs.core.chunk_append(b,(function (){var G__26381 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26396);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26381) : f.call(null,G__26381));
})());

var G__26397 = (i_26396 + (1));
i_26396 = G__26397;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26382 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26382) : f.call(null,G__26382));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__26383 = cljs.core.first(s1);
var G__26384 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26383,G__26384) : f.call(null,G__26383,G__26384));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__26385 = cljs.core.first(s1);
var G__26386 = cljs.core.first(s2);
var G__26387 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26385,G__26386,G__26387) : f.call(null,G__26385,G__26386,G__26387));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__26398__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__26335_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__26335_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__26398 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26399__i = 0, G__26399__a = new Array(arguments.length -  4);
while (G__26399__i < G__26399__a.length) {G__26399__a[G__26399__i] = arguments[G__26399__i + 4]; ++G__26399__i;}
  colls = new cljs.core.IndexedSeq(G__26399__a,0);
} 
return G__26398__delegate.call(this,f,c1,c2,c3,colls);};
G__26398.cljs$lang$maxFixedArity = 4;
G__26398.cljs$lang$applyTo = (function (arglist__26400){
var f = cljs.core.first(arglist__26400);
arglist__26400 = cljs.core.next(arglist__26400);
var c1 = cljs.core.first(arglist__26400);
arglist__26400 = cljs.core.next(arglist__26400);
var c2 = cljs.core.first(arglist__26400);
arglist__26400 = cljs.core.next(arglist__26400);
var c3 = cljs.core.first(arglist__26400);
var colls = cljs.core.rest(arglist__26400);
return G__26398__delegate(f,c1,c2,c3,colls);
});
G__26398.cljs$core$IFn$_invoke$arity$variadic = G__26398__delegate;
return G__26398;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__26401 = null;
if (arguments.length > 4) {
var G__26402__i = 0, G__26402__a = new Array(arguments.length -  4);
while (G__26402__i < G__26402__a.length) {G__26402__a[G__26402__i] = arguments[G__26402__i + 4]; ++G__26402__i;}
G__26401 = new cljs.core.IndexedSeq(G__26402__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26411 = null;
var G__26411__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26411__1 = (function (result){
var G__26408 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26408) : rf.call(null,G__26408));
});
var G__26411__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__26409 = result;
var G__26410 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26409,G__26410) : rf.call(null,G__26409,G__26410));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__26411 = function(result,input){
switch(arguments.length){
case 0:
return G__26411__0.call(this);
case 1:
return G__26411__1.call(this,result);
case 2:
return G__26411__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26411.cljs$core$IFn$_invoke$arity$0 = G__26411__0;
G__26411.cljs$core$IFn$_invoke$arity$1 = G__26411__1;
G__26411.cljs$core$IFn$_invoke$arity$2 = G__26411__2;
return G__26411;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26418 = null;
var G__26418__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26418__1 = (function (result){
var G__26415 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26415) : rf.call(null,G__26415));
});
var G__26418__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__26416 = result;
var G__26417 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26416,G__26417) : rf.call(null,G__26416,G__26417));
}
});
G__26418 = function(result,input){
switch(arguments.length){
case 0:
return G__26418__0.call(this);
case 1:
return G__26418__1.call(this,result);
case 2:
return G__26418__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26418.cljs$core$IFn$_invoke$arity$0 = G__26418__0;
G__26418.cljs$core$IFn$_invoke$arity$1 = G__26418__1;
G__26418.cljs$core$IFn$_invoke$arity$2 = G__26418__2;
return G__26418;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__26419 = (n__$1 - (1));
var G__26420 = cljs.core.rest(s);
n__$1 = G__26419;
coll__$1 = G__26420;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__26423 = cljs.core.next(s);
var G__26424 = cljs.core.next(lead);
s = G__26423;
lead = G__26424;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__26437 = null;
var G__26437__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26437__1 = (function (result){
var G__26431 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26431) : rf.call(null,G__26431));
});
var G__26437__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__16133__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__16133__auto__)){
var G__26432 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26432) : pred.call(null,G__26432));
} else {
return and__16133__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__26433 = result;
var G__26434 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26433,G__26434) : rf.call(null,G__26433,G__26434));
}
});
G__26437 = function(result,input){
switch(arguments.length){
case 0:
return G__26437__0.call(this);
case 1:
return G__26437__1.call(this,result);
case 2:
return G__26437__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26437.cljs$core$IFn$_invoke$arity$0 = G__26437__0;
G__26437.cljs$core$IFn$_invoke$arity$1 = G__26437__1;
G__26437.cljs$core$IFn$_invoke$arity$2 = G__26437__2;
return G__26437;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__16133__auto__ = s;
if(and__16133__auto__){
var G__26436 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__26436) : pred__$1.call(null,G__26436));
} else {
return and__16133__auto__;
}
})())){
var G__26438 = pred__$1;
var G__26439 = cljs.core.rest(s);
pred__$1 = G__26438;
coll__$1 = G__26439;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__26448 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26448) : f.call(null,G__26448));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__26451__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__26451 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26452__i = 0, G__26452__a = new Array(arguments.length -  2);
while (G__26452__i < G__26452__a.length) {G__26452__a[G__26452__i] = arguments[G__26452__i + 2]; ++G__26452__i;}
  colls = new cljs.core.IndexedSeq(G__26452__a,0);
} 
return G__26451__delegate.call(this,c1,c2,colls);};
G__26451.cljs$lang$maxFixedArity = 2;
G__26451.cljs$lang$applyTo = (function (arglist__26453){
var c1 = cljs.core.first(arglist__26453);
arglist__26453 = cljs.core.next(arglist__26453);
var c2 = cljs.core.first(arglist__26453);
var colls = cljs.core.rest(arglist__26453);
return G__26451__delegate(c1,c2,colls);
});
G__26451.cljs$core$IFn$_invoke$arity$variadic = G__26451__delegate;
return G__26451;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__26454 = null;
if (arguments.length > 2) {
var G__26455__i = 0, G__26455__a = new Array(arguments.length -  2);
while (G__26455__i < G__26455__a.length) {G__26455__a[G__26455__i] = arguments[G__26455__i + 2]; ++G__26455__i;}
G__26454 = new cljs.core.IndexedSeq(G__26455__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__26454);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__26470 = null;
var G__26470__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26470__1 = (function (result){
var G__26463 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26463) : rf.call(null,G__26463));
});
var G__26470__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__26464 = result;
var G__26465 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26464,G__26465) : rf.call(null,G__26464,G__26465));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__26466 = sepr;
var G__26467 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26466,G__26467) : rf.call(null,G__26466,G__26467));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__26468 = result;
var G__26469 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26468,G__26469) : rf.call(null,G__26468,G__26469));
}
});
G__26470 = function(result,input){
switch(arguments.length){
case 0:
return G__26470__0.call(this);
case 1:
return G__26470__1.call(this,result);
case 2:
return G__26470__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26470.cljs$core$IFn$_invoke$arity$0 = G__26470__0;
G__26470.cljs$core$IFn$_invoke$arity$1 = G__26470__1;
G__26470.cljs$core$IFn$_invoke$arity$2 = G__26470__2;
return G__26470;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__26479__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__26479 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__26480__i = 0, G__26480__a = new Array(arguments.length -  1);
while (G__26480__i < G__26480__a.length) {G__26480__a[G__26480__i] = arguments[G__26480__i + 1]; ++G__26480__i;}
  colls = new cljs.core.IndexedSeq(G__26480__a,0);
} 
return G__26479__delegate.call(this,f,colls);};
G__26479.cljs$lang$maxFixedArity = 1;
G__26479.cljs$lang$applyTo = (function (arglist__26481){
var f = cljs.core.first(arglist__26481);
var colls = cljs.core.rest(arglist__26481);
return G__26479__delegate(f,colls);
});
G__26479.cljs$core$IFn$_invoke$arity$variadic = G__26479__delegate;
return G__26479;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__26482 = null;
if (arguments.length > 1) {
var G__26483__i = 0, G__26483__a = new Array(arguments.length -  1);
while (G__26483__i < G__26483__a.length) {G__26483__a[G__26483__i] = arguments[G__26483__i + 1]; ++G__26483__i;}
G__26482 = new cljs.core.IndexedSeq(G__26483__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__26482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__26502 = null;
var G__26502__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26502__1 = (function (result){
var G__26496 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26496) : rf.call(null,G__26496));
});
var G__26502__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__26497 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26497) : pred.call(null,G__26497));
})())){
var G__26498 = result;
var G__26499 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26498,G__26499) : rf.call(null,G__26498,G__26499));
} else {
return result;
}
});
G__26502 = function(result,input){
switch(arguments.length){
case 0:
return G__26502__0.call(this);
case 1:
return G__26502__1.call(this,result);
case 2:
return G__26502__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26502.cljs$core$IFn$_invoke$arity$0 = G__26502__0;
G__26502.cljs$core$IFn$_invoke$arity$1 = G__26502__1;
G__26502.cljs$core$IFn$_invoke$arity$2 = G__26502__2;
return G__26502;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___26503 = size;
var i_26504 = (0);
while(true){
if((i_26504 < n__17032__auto___26503)){
if(cljs.core.truth_((function (){var G__26500 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26504);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26500) : pred.call(null,G__26500));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26504));
} else {
}

var G__26505 = (i_26504 + (1));
i_26504 = G__26505;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__26501 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26501) : pred.call(null,G__26501));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__26512 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__26512) : branch_QMARK_.call(null,G__26512));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__26513 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__26513) : children.call(null,G__26513));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__26514_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__26514_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__26517 = to;
if(G__26517){
var bit__16819__auto__ = (G__26517.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16819__auto__) || (G__26517.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__26518 = to;
if(G__26518){
var bit__16819__auto__ = (G__26518.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16819__auto__) || (G__26518.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__26520 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26520) : f.call(null,G__26520));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__26521__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__26521 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26522__i = 0, G__26522__a = new Array(arguments.length -  4);
while (G__26522__i < G__26522__a.length) {G__26522__a[G__26522__i] = arguments[G__26522__i + 4]; ++G__26522__i;}
  colls = new cljs.core.IndexedSeq(G__26522__a,0);
} 
return G__26521__delegate.call(this,f,c1,c2,c3,colls);};
G__26521.cljs$lang$maxFixedArity = 4;
G__26521.cljs$lang$applyTo = (function (arglist__26523){
var f = cljs.core.first(arglist__26523);
arglist__26523 = cljs.core.next(arglist__26523);
var c1 = cljs.core.first(arglist__26523);
arglist__26523 = cljs.core.next(arglist__26523);
var c2 = cljs.core.first(arglist__26523);
arglist__26523 = cljs.core.next(arglist__26523);
var c3 = cljs.core.first(arglist__26523);
var colls = cljs.core.rest(arglist__26523);
return G__26521__delegate(f,c1,c2,c3,colls);
});
G__26521.cljs$core$IFn$_invoke$arity$variadic = G__26521__delegate;
return G__26521;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__26524 = null;
if (arguments.length > 4) {
var G__26525__i = 0, G__26525__a = new Array(arguments.length -  4);
while (G__26525__i < G__26525__a.length) {G__26525__a[G__26525__i] = arguments[G__26525__i + 4]; ++G__26525__i;}
G__26524 = new cljs.core.IndexedSeq(G__26525__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__26527 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26527) : pred.call(null,G__26527));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__26542 = m__$1;
if(G__26542){
var bit__16826__auto__ = (G__26542.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16826__auto__) || (G__26542.cljs$core$ILookup$)){
return true;
} else {
if((!G__26542.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26542);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26542);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__26543 = sentinel;
var G__26544 = m__$2;
var G__26545 = cljs.core.next(ks__$1);
sentinel = G__26543;
m__$1 = G__26544;
ks__$1 = G__26545;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__26546,v){
var vec__26551 = p__26546;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26551,(0),null);
var ks = cljs.core.nthnext(vec__26551,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__26552,f){
var vec__26590 = p__26552;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26590,(0),null);
var ks = cljs.core.nthnext(vec__26590,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26591 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26591) : f.call(null,G__26591));
})());
}
});
var update_in__4 = (function (m,p__26553,f,a){
var vec__26592 = p__26553;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26592,(0),null);
var ks = cljs.core.nthnext(vec__26592,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26593 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26594 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26593,G__26594) : f.call(null,G__26593,G__26594));
})());
}
});
var update_in__5 = (function (m,p__26554,f,a,b){
var vec__26595 = p__26554;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26595,(0),null);
var ks = cljs.core.nthnext(vec__26595,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26596 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26597 = a;
var G__26598 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26596,G__26597,G__26598) : f.call(null,G__26596,G__26597,G__26598));
})());
}
});
var update_in__6 = (function (m,p__26555,f,a,b,c){
var vec__26599 = p__26555;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26599,(0),null);
var ks = cljs.core.nthnext(vec__26599,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26600 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26601 = a;
var G__26602 = b;
var G__26603 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26600,G__26601,G__26602,G__26603) : f.call(null,G__26600,G__26601,G__26602,G__26603));
})());
}
});
var update_in__7 = (function() { 
var G__26605__delegate = function (m,p__26556,f,a,b,c,args){
var vec__26604 = p__26556;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26604,(0),null);
var ks = cljs.core.nthnext(vec__26604,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__26605 = function (m,p__26556,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__26606__i = 0, G__26606__a = new Array(arguments.length -  6);
while (G__26606__i < G__26606__a.length) {G__26606__a[G__26606__i] = arguments[G__26606__i + 6]; ++G__26606__i;}
  args = new cljs.core.IndexedSeq(G__26606__a,0);
} 
return G__26605__delegate.call(this,m,p__26556,f,a,b,c,args);};
G__26605.cljs$lang$maxFixedArity = 6;
G__26605.cljs$lang$applyTo = (function (arglist__26607){
var m = cljs.core.first(arglist__26607);
arglist__26607 = cljs.core.next(arglist__26607);
var p__26556 = cljs.core.first(arglist__26607);
arglist__26607 = cljs.core.next(arglist__26607);
var f = cljs.core.first(arglist__26607);
arglist__26607 = cljs.core.next(arglist__26607);
var a = cljs.core.first(arglist__26607);
arglist__26607 = cljs.core.next(arglist__26607);
var b = cljs.core.first(arglist__26607);
arglist__26607 = cljs.core.next(arglist__26607);
var c = cljs.core.first(arglist__26607);
var args = cljs.core.rest(arglist__26607);
return G__26605__delegate(m,p__26556,f,a,b,c,args);
});
G__26605.cljs$core$IFn$_invoke$arity$variadic = G__26605__delegate;
return G__26605;
})()
;
update_in = function(m,p__26556,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__26556,f);
case 4:
return update_in__4.call(this,m,p__26556,f,a);
case 5:
return update_in__5.call(this,m,p__26556,f,a,b);
case 6:
return update_in__6.call(this,m,p__26556,f,a,b,c);
default:
var G__26608 = null;
if (arguments.length > 6) {
var G__26609__i = 0, G__26609__a = new Array(arguments.length -  6);
while (G__26609__i < G__26609__a.length) {G__26609__a[G__26609__i] = arguments[G__26609__i + 6]; ++G__26609__i;}
G__26608 = new cljs.core.IndexedSeq(G__26609__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__26556,f,a,b,c, G__26608);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26620 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26620) : f.call(null,G__26620));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26621 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26622 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26621,G__26622) : f.call(null,G__26621,G__26622));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26623 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26624 = x;
var G__26625 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26623,G__26624,G__26625) : f.call(null,G__26623,G__26624,G__26625));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26626 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26627 = x;
var G__26628 = y;
var G__26629 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26626,G__26627,G__26628,G__26629) : f.call(null,G__26626,G__26627,G__26628,G__26629));
})());
});
var update__7 = (function() { 
var G__26630__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__26630 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__26631__i = 0, G__26631__a = new Array(arguments.length -  6);
while (G__26631__i < G__26631__a.length) {G__26631__a[G__26631__i] = arguments[G__26631__i + 6]; ++G__26631__i;}
  more = new cljs.core.IndexedSeq(G__26631__a,0);
} 
return G__26630__delegate.call(this,m,k,f,x,y,z,more);};
G__26630.cljs$lang$maxFixedArity = 6;
G__26630.cljs$lang$applyTo = (function (arglist__26632){
var m = cljs.core.first(arglist__26632);
arglist__26632 = cljs.core.next(arglist__26632);
var k = cljs.core.first(arglist__26632);
arglist__26632 = cljs.core.next(arglist__26632);
var f = cljs.core.first(arglist__26632);
arglist__26632 = cljs.core.next(arglist__26632);
var x = cljs.core.first(arglist__26632);
arglist__26632 = cljs.core.next(arglist__26632);
var y = cljs.core.first(arglist__26632);
arglist__26632 = cljs.core.next(arglist__26632);
var z = cljs.core.first(arglist__26632);
var more = cljs.core.rest(arglist__26632);
return G__26630__delegate(m,k,f,x,y,z,more);
});
G__26630.cljs$core$IFn$_invoke$arity$variadic = G__26630__delegate;
return G__26630;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__26633 = null;
if (arguments.length > 6) {
var G__26634__i = 0, G__26634__a = new Array(arguments.length -  6);
while (G__26634__i < G__26634__a.length) {G__26634__a[G__26634__i] = arguments[G__26634__i + 6]; ++G__26634__i;}
G__26633 = new cljs.core.IndexedSeq(G__26634__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__26633);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__26635 = (ll - (5));
var G__26636 = r;
ll = G__26635;
ret = G__26636;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26641 = cljs.core.pv_aget(node,(0));
var G__26642 = (level - (5));
node = G__26641;
level = G__26642;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26643 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__26644 = (level - (5));
node = G__26643;
level = G__26644;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26654 = init__$2;
var G__26655 = (j + i);
var G__26656 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26654,G__26655,G__26656) : f.call(null,G__26654,G__26655,G__26656));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26667 = (j + (1));
var G__26668 = init__$3;
j = G__26667;
init__$2 = G__26668;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26657 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26657) : cljs.core.deref.call(null,G__26657));
} else {
var G__26669 = (i + len);
var G__26670 = init__$2;
i = G__26669;
init__$1 = G__26670;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__26658 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__26658) : cljs.core.tv_editable_root.call(null,G__26658));
})(),(function (){var G__26659 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__26659) : cljs.core.tv_editable_tail.call(null,G__26659));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26660 = init__$2;
var G__26661 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26660,G__26661) : f.call(null,G__26660,G__26661));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26671 = (j + (1));
var G__26672 = init__$3;
j = G__26671;
init__$2 = G__26672;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26662 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26662) : cljs.core.deref.call(null,G__26662));
} else {
var G__26673 = (i + len);
var G__26674 = init__$2;
i = G__26673;
init__$1 = G__26674;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__26663 = coll__$1;
var G__26664 = cljs.core.first_array_for_longvec(coll__$1);
var G__26665 = (0);
var G__26666 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26663,G__26664,G__26665,G__26666) : cljs.core.chunked_seq.call(null,G__26663,G__26664,G__26665,G__26666));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__17032__auto___26675 = len;
var i_26676 = (0);
while(true){
if((i_26676 < n__17032__auto___26675)){
(new_tail[i_26676] = (self__.tail[i_26676]));

var G__26677 = (i_26676 + (1));
i_26676 = G__26677;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__26678 = null;
var G__26678__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26678__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26678 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26678__2.call(this,self__,k);
case 3:
return G__26678__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26678.cljs$core$IFn$_invoke$arity$2 = G__26678__2;
G__26678.cljs$core$IFn$_invoke$arity$3 = G__26678__3;
return G__26678;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args26653){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26653)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__26679 = (i + (1));
var G__26680 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__26679;
out = G__26680;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26681__i = 0, G__26681__a = new Array(arguments.length -  0);
while (G__26681__i < G__26681__a.length) {G__26681__a[G__26681__i] = arguments[G__26681__i + 0]; ++G__26681__i;}
  args = new cljs.core.IndexedSeq(G__26681__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__26682){
var args = cljs.core.seq(arglist__26682);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26683 = self__.vec;
var G__26684 = self__.node;
var G__26685 = self__.i;
var G__26686 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26683,G__26684,G__26685,G__26686) : cljs.core.chunked_seq.call(null,G__26683,G__26684,G__26685,G__26686));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__26687 = self__.vec;
var G__26688 = (self__.i + self__.off);
var G__26689 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26687,G__26688,G__26689) : cljs.core.subvec.call(null,G__26687,G__26688,G__26689));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__26690 = self__.vec;
var G__26691 = (self__.i + self__.off);
var G__26692 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26690,G__26691,G__26692) : cljs.core.subvec.call(null,G__26690,G__26691,G__26692));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26693 = self__.vec;
var G__26694 = self__.node;
var G__26695 = self__.i;
var G__26696 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26693,G__26694,G__26695,G__26696) : cljs.core.chunked_seq.call(null,G__26693,G__26694,G__26695,G__26696));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26697 = self__.vec;
var G__26698 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26699 = end;
var G__26700 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26697,G__26698,G__26699,G__26700) : cljs.core.chunked_seq.call(null,G__26697,G__26698,G__26699,G__26700));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__26701 = self__.vec;
var G__26702 = self__.node;
var G__26703 = self__.i;
var G__26704 = self__.off;
var G__26705 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__26701,G__26702,G__26703,G__26704,G__26705) : cljs.core.chunked_seq.call(null,G__26701,G__26702,G__26703,G__26704,G__26705));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26706 = self__.vec;
var G__26707 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26708 = end;
var G__26709 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26706,G__26707,G__26708,G__26709) : cljs.core.chunked_seq.call(null,G__26706,G__26707,G__26708,G__26709));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__26711 = self__.meta;
var G__26712 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__26713 = self__.start;
var G__26714 = (function (){var x__16462__auto__ = self__.end;
var y__16463__auto__ = (v_pos + (1));
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
})();
var G__26715 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26711,G__26712,G__26713,G__26714,G__26715) : cljs.core.build_subvec.call(null,G__26711,G__26712,G__26713,G__26714,G__26715));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__26716 = self__.meta;
var G__26717 = self__.v;
var G__26718 = self__.start;
var G__26719 = (self__.end - (1));
var G__26720 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26716,G__26717,G__26718,G__26719,G__26720) : cljs.core.build_subvec.call(null,G__26716,G__26717,G__26718,G__26719,G__26720));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__26722 = meta__$1;
var G__26723 = self__.v;
var G__26724 = self__.start;
var G__26725 = self__.end;
var G__26726 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26722,G__26723,G__26724,G__26725,G__26726) : cljs.core.build_subvec.call(null,G__26722,G__26723,G__26724,G__26725,G__26726));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26727 = self__.meta;
var G__26728 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__26729 = self__.start;
var G__26730 = (self__.end + (1));
var G__26731 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26727,G__26728,G__26729,G__26730,G__26731) : cljs.core.build_subvec.call(null,G__26727,G__26728,G__26729,G__26730,G__26731));
});

cljs.core.Subvec.prototype.call = (function() {
var G__26732 = null;
var G__26732__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26732__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26732 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26732__2.call(this,self__,k);
case 3:
return G__26732__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26732.cljs$core$IFn$_invoke$arity$2 = G__26732__2;
G__26732.cljs$core$IFn$_invoke$arity$3 = G__26732__3;
return G__26732;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args26710){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26710)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__26733 = meta;
var G__26734 = v.v;
var G__26735 = (v.start + start);
var G__26736 = (v.start + end);
var G__26737 = __hash;
meta = G__26733;
v = G__26734;
start = G__26735;
end = G__26736;
__hash = G__26737;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj26744 = {};
return obj26744;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__26752 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__26753 = (level - (5));
node = G__26752;
level = G__26753;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__26757 = null;
var G__26757__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26757__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26757 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26757__2.call(this,self__,k);
case 3:
return G__26757__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26757.cljs$core$IFn$_invoke$arity$2 = G__26757__2;
G__26757.cljs$core$IFn$_invoke$arity$3 = G__26757__3;
return G__26757;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args26754){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26754)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__16145__auto__ = self__.front;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16145__auto__ = self__.rear;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__26758 = (i + incr);
i = G__26758;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__26759 = (i + (1));
var G__26760 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__26759;
out = G__26760;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj26764 = {};
return obj26764;
})();
var l = ks.length;
var i_26765 = (0);
while(true){
if((i_26765 < l)){
var k_26766 = (ks[i_26765]);
(new_obj[k_26766] = (obj[k_26766]));

var G__26767 = (i_26765 + (1));
i_26765 = G__26767;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__26771 = k;
return goog.isString(G__26771);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__26772 = init__$1;
var G__26773 = k;
var G__26774 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26772,G__26773,G__26774) : f.call(null,G__26772,G__26773,G__26774));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26775 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26775) : cljs.core.deref.call(null,G__26775));
} else {
var G__26781 = cljs.core.rest(keys__$1);
var G__26782 = init__$2;
keys__$1 = G__26781;
init__$1 = G__26782;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__26777 = k;
return goog.isString(G__26777);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__26778 = k;
return goog.isString(G__26778);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__26780 = k;
return goog.isString(G__26780);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__26768_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__26768_SHARP_,(self__.strobj[p1__26768_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__26783 = null;
var G__26783__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26783__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26783 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26783__2.call(this,self__,k);
case 3:
return G__26783__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26783.cljs$core$IFn$_invoke$arity$2 = G__26783__2;
G__26783.cljs$core$IFn$_invoke$arity$3 = G__26783__3;
return G__26783;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args26769){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26769)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj26785 = {};
return obj26785;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__26786 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26786,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26786,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__26787 = (i + (2));
i = G__26787;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__26788 = (i + (2));
i = G__26788;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__26789 = (i + (2));
i = G__26789;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__26790 = (i + (2));
i = G__26790;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__26791 = (i + (2));
i = G__26791;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__16145__auto__ = (function (){var G__26795 = k;
return goog.isString(G__26795);
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_26796 = (0);
while(true){
if((i_26796 < l)){
(narr[i_26796] = (arr[i_26796]));

var G__26797 = (i_26796 + (1));
i_26796 = G__26797;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26799 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26799) : cljs.core.keys.call(null,G__26799));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26800 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26800) : cljs.core.vals.call(null,G__26800));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26801 = cljs.core.seq(coll);
var chunk__26802 = null;
var count__26803 = (0);
var i__26804 = (0);
while(true){
if((i__26804 < count__26803)){
var vec__26805 = chunk__26802.cljs$core$IIndexed$_nth$arity$2(null,i__26804);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26805,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26805,(1),null);
var G__26806_26819 = v;
var G__26807_26820 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26806_26819,G__26807_26820) : f.call(null,G__26806_26819,G__26807_26820));

var G__26821 = seq__26801;
var G__26822 = chunk__26802;
var G__26823 = count__26803;
var G__26824 = (i__26804 + (1));
seq__26801 = G__26821;
chunk__26802 = G__26822;
count__26803 = G__26823;
i__26804 = G__26824;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26801);
if(temp__4126__auto__){
var seq__26801__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26801__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__26801__$1);
var G__26825 = cljs.core.chunk_rest(seq__26801__$1);
var G__26826 = c__16932__auto__;
var G__26827 = cljs.core.count(c__16932__auto__);
var G__26828 = (0);
seq__26801 = G__26825;
chunk__26802 = G__26826;
count__26803 = G__26827;
i__26804 = G__26828;
continue;
} else {
var vec__26808 = cljs.core.first(seq__26801__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26808,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26808,(1),null);
var G__26809_26829 = v;
var G__26810_26830 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26809_26829,G__26810_26830) : f.call(null,G__26809_26829,G__26810_26830));

var G__26831 = cljs.core.next(seq__26801__$1);
var G__26832 = null;
var G__26833 = (0);
var G__26834 = (0);
seq__26801 = G__26831;
chunk__26802 = G__26832;
count__26803 = G__26833;
i__26804 = G__26834;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__26811 = init__$1;
var G__26812 = (self__.arr[i]);
var G__26813 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26811,G__26812,G__26813) : f.call(null,G__26811,G__26812,G__26813));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26814 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26814) : cljs.core.deref.call(null,G__26814));
} else {
var G__26835 = (i + (2));
var G__26836 = init__$2;
i = G__26835;
init__$1 = G__26836;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__26815 = other;
if(G__26815){
var bit__16819__auto__ = (G__26815.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16819__auto__) || (G__26815.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__26837 = (i + (2));
i = G__26837;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj26817 = {};
return obj26817;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__26838 = (s + (2));
var G__26839 = d;
s = G__26838;
d = G__26839;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__26840 = (s + (2));
var G__26841 = (d + (2));
s = G__26840;
d = G__26841;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__26818 = cljs.core.aclone(self__.arr);
(G__26818[(idx + (1))] = v);

return G__26818;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__26842 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__26843 = cljs.core.next(es);
ret = G__26842;
es = G__26843;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__26844 = null;
var G__26844__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26844__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26844 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26844__2.call(this,self__,k);
case 3:
return G__26844__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26844.cljs$core$IFn$_invoke$arity$2 = G__26844__2;
G__26844.cljs$core$IFn$_invoke$arity$3 = G__26844__3;
return G__26844;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args26798){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26798)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__26845 = (i + (2));
var G__26846 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__26845;
ret = G__26846;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__26847_26855 = self__.arr;
G__26847_26855.pop();

G__26847_26855.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__26848 = self__.len;
var G__26849 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__26848,G__26849) : cljs.core.array__GT_transient_hash_map.call(null,G__26848,G__26849));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__26850 = o;
if(G__26850){
var bit__16826__auto__ = (G__26850.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16826__auto__) || (G__26850.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__26850.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26850);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26850);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__26851 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26851) : cljs.core.key.call(null,G__26851));
})(),(function (){var G__26852 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26852) : cljs.core.val.call(null,G__26852));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__26856 = cljs.core.next(es);
var G__26857 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__26853 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26853) : cljs.core.key.call(null,G__26853));
})(),(function (){var G__26854 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26854) : cljs.core.val.call(null,G__26854));
})());
es = G__26856;
tcoll__$2 = G__26857;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__26858 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__26859 = (i + (2));
out = G__26858;
i = G__26859;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__26862 = cljs.core.aclone(arr);
(G__26862[i] = a);

return G__26862;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__26863 = cljs.core.aclone(arr);
(G__26863[i] = a);

(G__26863[j] = b);

return G__26863;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__26868 = init__$1;
var G__26869 = k;
var G__26870 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26868,G__26869,G__26870) : f.call(null,G__26868,G__26869,G__26870));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26871 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26871) : cljs.core.deref.call(null,G__26871));
} else {
var G__26872 = (i + (2));
var G__26873 = init__$2;
i = G__26872;
init__$1 = G__26873;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26874 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__26874) : cljs.core.create_inode_seq.call(null,G__26874));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_26888 = (0);
var j_26889 = (0);
while(true){
if((i_26888 < (32))){
if((((self__.bitmap >>> i_26888) & (1)) === (0))){
var G__26890 = (i_26888 + (1));
var G__26891 = j_26889;
i_26888 = G__26890;
j_26889 = G__26891;
continue;
} else {
(nodes[i_26888] = ((!(((self__.arr[j_26889]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_26889])),(self__.arr[j_26889]),(self__.arr[(j_26889 + (1))]),added_leaf_QMARK_):(self__.arr[(j_26889 + (1))])));

var G__26892 = (i_26888 + (1));
var G__26893 = (j_26889 + (2));
i_26888 = G__26892;
j_26889 = G__26893;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__26875 = edit__$1;
var G__26876 = (shift + (5));
var G__26877 = key_or_nil;
var G__26878 = val_or_node;
var G__26879 = hash;
var G__26880 = key;
var G__26881 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__26875,G__26876,G__26877,G__26878,G__26879,G__26880,G__26881) : cljs.core.create_node.call(null,G__26875,G__26876,G__26877,G__26878,G__26879,G__26880,G__26881));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_26894 = (0);
var j_26895 = (0);
while(true){
if((i_26894 < (32))){
if((((self__.bitmap >>> i_26894) & (1)) === (0))){
var G__26896 = (i_26894 + (1));
var G__26897 = j_26895;
i_26894 = G__26896;
j_26895 = G__26897;
continue;
} else {
(nodes[i_26894] = ((!(((self__.arr[j_26895]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_26895])),(self__.arr[j_26895]),(self__.arr[(j_26895 + (1))]),added_leaf_QMARK_):(self__.arr[(j_26895 + (1))])));

var G__26898 = (i_26894 + (1));
var G__26899 = (j_26895 + (2));
i_26894 = G__26898;
j_26895 = G__26899;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__26882 = (shift + (5));
var G__26883 = key_or_nil;
var G__26884 = val_or_node;
var G__26885 = hash;
var G__26886 = key;
var G__26887 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__26882,G__26883,G__26884,G__26885,G__26886,G__26887) : cljs.core.create_node.call(null,G__26882,G__26883,G__26884,G__26885,G__26886,G__26887));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__26900 = (i + (1));
var G__26901 = (j + (2));
var G__26902 = (bitmap | ((1) << i));
i = G__26900;
j = G__26901;
bitmap = G__26902;
continue;
} else {
var G__26903 = (i + (1));
var G__26904 = j;
var G__26905 = bitmap;
i = G__26903;
j = G__26904;
bitmap = G__26905;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26906 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__26906) : cljs.core.create_array_node_seq.call(null,G__26906));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26907 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26907) : cljs.core.deref.call(null,G__26907));
} else {
var G__26908 = (i + (1));
var G__26909 = init__$2;
i = G__26908;
init__$1 = G__26909;
continue;
}
} else {
var G__26910 = (i + (1));
var G__26911 = init__$1;
i = G__26910;
init__$1 = G__26911;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__26912 = (i + (2));
i = G__26912;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26913 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__26913) : cljs.core.create_inode_seq.call(null,G__26913));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__26914 = self__.nodes;
var G__26915 = (self__.i + (2));
var G__26916 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26914,G__26915,G__26916) : cljs.core.create_inode_seq.call(null,G__26914,G__26915,G__26916));
} else {
var G__26917 = self__.nodes;
var G__26918 = self__.i;
var G__26919 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26917,G__26918,G__26919) : cljs.core.create_inode_seq.call(null,G__26917,G__26918,G__26919));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__26923 = (j + (2));
j = G__26923;
continue;
}
} else {
var G__26924 = (j + (2));
j = G__26924;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__26925 = null;
var G__26926 = self__.nodes;
var G__26927 = self__.i;
var G__26928 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__26925,G__26926,G__26927,G__26928) : cljs.core.create_array_node_seq.call(null,G__26925,G__26926,G__26927,G__26928));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__26933 = (j + (1));
j = G__26933;
continue;
}
} else {
var G__26934 = (j + (1));
j = G__26934;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26936 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26936) : cljs.core.keys.call(null,G__26936));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26937 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26937) : cljs.core.vals.call(null,G__26937));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26938 = cljs.core.seq(coll);
var chunk__26939 = null;
var count__26940 = (0);
var i__26941 = (0);
while(true){
if((i__26941 < count__26940)){
var vec__26942 = chunk__26939.cljs$core$IIndexed$_nth$arity$2(null,i__26941);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26942,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26942,(1),null);
var G__26943_26954 = v;
var G__26944_26955 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26943_26954,G__26944_26955) : f.call(null,G__26943_26954,G__26944_26955));

var G__26956 = seq__26938;
var G__26957 = chunk__26939;
var G__26958 = count__26940;
var G__26959 = (i__26941 + (1));
seq__26938 = G__26956;
chunk__26939 = G__26957;
count__26940 = G__26958;
i__26941 = G__26959;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26938);
if(temp__4126__auto__){
var seq__26938__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26938__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__26938__$1);
var G__26960 = cljs.core.chunk_rest(seq__26938__$1);
var G__26961 = c__16932__auto__;
var G__26962 = cljs.core.count(c__16932__auto__);
var G__26963 = (0);
seq__26938 = G__26960;
chunk__26939 = G__26961;
count__26940 = G__26962;
i__26941 = G__26963;
continue;
} else {
var vec__26945 = cljs.core.first(seq__26938__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26945,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26945,(1),null);
var G__26946_26964 = v;
var G__26947_26965 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26946_26964,G__26947_26965) : f.call(null,G__26946_26964,G__26947_26965));

var G__26966 = cljs.core.next(seq__26938__$1);
var G__26967 = null;
var G__26968 = (0);
var G__26969 = (0);
seq__26938 = G__26966;
chunk__26939 = G__26967;
count__26940 = G__26968;
i__26941 = G__26969;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__26948 = init;
var G__26949 = null;
var G__26950 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26948,G__26949,G__26950) : f.call(null,G__26948,G__26949,G__26950));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__26951 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26951) : cljs.core.deref.call(null,G__26951));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj26953 = {};
return obj26953;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__26970 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__26971 = cljs.core.next(es);
ret = G__26970;
es = G__26971;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__26972 = null;
var G__26972__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26972__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26972 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26972__2.call(this,self__,k);
case 3:
return G__26972__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26972.cljs$core$IFn$_invoke$arity$2 = G__26972__2;
G__26972.cljs$core$IFn$_invoke$arity$3 = G__26972__3;
return G__26972;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args26935){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26935)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__26973 = (i + (2));
var G__26974 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__26973;
ret = G__26974;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__26975 = (i + (1));
var G__26976 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__26975;
out = G__26976;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__26977 = o;
if(G__26977){
var bit__16826__auto__ = (G__26977.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16826__auto__) || (G__26977.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__26977.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26977);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26977);
}
})()){
return tcoll.assoc_BANG_((function (){var G__26978 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26978) : cljs.core.key.call(null,G__26978));
})(),(function (){var G__26979 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26979) : cljs.core.val.call(null,G__26979));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__26982 = cljs.core.next(es);
var G__26983 = tcoll__$1.assoc_BANG_((function (){var G__26980 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26980) : cljs.core.key.call(null,G__26980));
})(),(function (){var G__26981 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26981) : cljs.core.val.call(null,G__26981));
})());
es = G__26982;
tcoll__$1 = G__26983;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__26984 = ((ascending_QMARK_)?t.left:t.right);
var G__26985 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__26984;
stack__$1 = G__26985;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__26998 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26998) : cljs.core.deref.call(null,G__26998));
} else {
var init__$2 = (function (){var G__26999 = init__$1;
var G__27000 = node.key;
var G__27001 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26999,G__27000,G__27001) : f.call(null,G__26999,G__27000,G__27001));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27002 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27002) : cljs.core.deref.call(null,G__27002));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__27003 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27003) : cljs.core.deref.call(null,G__27003));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__27005 = null;
var G__27005__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27005__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27005 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27005__2.call(this,self__,k);
case 3:
return G__27005__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27005.cljs$core$IFn$_invoke$arity$2 = G__27005__2;
G__27005.cljs$core$IFn$_invoke$arity$3 = G__27005__3;
return G__27005;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args27004){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27004)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__27007 = null;
var G__27007__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27007__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27007 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27007__2.call(this,self__,k);
case 3:
return G__27007__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27007.cljs$core$IFn$_invoke$arity$2 = G__27007__2;
G__27007.cljs$core$IFn$_invoke$arity$3 = G__27007__3;
return G__27007;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args27006){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27006)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__27020 = k;
var G__27021 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27020,G__27021) : comp.call(null,G__27020,G__27021));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__27040 = k;
var G__27041 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27040,G__27041) : comp.call(null,G__27040,G__27041));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__27052 = k;
var G__27053 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27052,G__27053) : comp.call(null,G__27052,G__27053));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27055 = cljs.core.seq(coll);
var chunk__27056 = null;
var count__27057 = (0);
var i__27058 = (0);
while(true){
if((i__27058 < count__27057)){
var vec__27059 = chunk__27056.cljs$core$IIndexed$_nth$arity$2(null,i__27058);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27059,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27059,(1),null);
var G__27060_27072 = v;
var G__27061_27073 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27060_27072,G__27061_27073) : f.call(null,G__27060_27072,G__27061_27073));

var G__27074 = seq__27055;
var G__27075 = chunk__27056;
var G__27076 = count__27057;
var G__27077 = (i__27058 + (1));
seq__27055 = G__27074;
chunk__27056 = G__27075;
count__27057 = G__27076;
i__27058 = G__27077;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27055);
if(temp__4126__auto__){
var seq__27055__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27055__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27055__$1);
var G__27078 = cljs.core.chunk_rest(seq__27055__$1);
var G__27079 = c__16932__auto__;
var G__27080 = cljs.core.count(c__16932__auto__);
var G__27081 = (0);
seq__27055 = G__27078;
chunk__27056 = G__27079;
count__27057 = G__27080;
i__27058 = G__27081;
continue;
} else {
var vec__27062 = cljs.core.first(seq__27055__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27062,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27062,(1),null);
var G__27063_27082 = v;
var G__27064_27083 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27063_27082,G__27064_27083) : f.call(null,G__27063_27082,G__27064_27083));

var G__27084 = cljs.core.next(seq__27055__$1);
var G__27085 = null;
var G__27086 = (0);
var G__27087 = (0);
seq__27055 = G__27084;
chunk__27056 = G__27085;
count__27057 = G__27086;
i__27058 = G__27087;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27065 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27065) : cljs.core.keys.call(null,G__27065));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27066 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27066) : cljs.core.vals.call(null,G__27066));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27067 = k;
var G__27068 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27067,G__27068) : self__.comp.call(null,G__27067,G__27068));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__27088 = t.left;
t = G__27088;
continue;
} else {
var G__27089 = t.right;
t = G__27089;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27090 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27091 = cljs.core.next(es);
ret = G__27090;
es = G__27091;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__27092 = null;
var G__27092__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27092__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27092 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27092__2.call(this,self__,k);
case 3:
return G__27092__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27092.cljs$core$IFn$_invoke$arity$2 = G__27092__2;
G__27092.cljs$core$IFn$_invoke$arity$3 = G__27092__3;
return G__27092;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args27054){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27054)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27069 = k;
var G__27070 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27069,G__27070) : self__.comp.call(null,G__27069,G__27070));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__27093 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27094 = t.left;
stack = G__27093;
t = G__27094;
continue;
} else {
var G__27095 = stack;
var G__27096 = t.right;
stack = G__27095;
t = G__27096;
continue;
}
} else {
if((c > (0))){
var G__27097 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27098 = t.right;
stack = G__27097;
t = G__27098;
continue;
} else {
var G__27099 = stack;
var G__27100 = t.left;
stack = G__27099;
t = G__27100;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__27071 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27071) : cljs.core.key.call(null,G__27071));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__27101 = cljs.core.nnext(in$);
var G__27102 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27101;
out = G__27102;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27103__i = 0, G__27103__a = new Array(arguments.length -  0);
while (G__27103__i < G__27103__a.length) {G__27103__a[G__27103__i] = arguments[G__27103__i + 0]; ++G__27103__i;}
  keyvals = new cljs.core.IndexedSeq(G__27103__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__27104){
var keyvals = cljs.core.seq(arglist__27104);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27105__i = 0, G__27105__a = new Array(arguments.length -  0);
while (G__27105__i < G__27105__a.length) {G__27105__a[G__27105__i] = arguments[G__27105__i + 0]; ++G__27105__i;}
  keyvals = new cljs.core.IndexedSeq(G__27105__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__27106){
var keyvals = cljs.core.seq(arglist__27106);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj27110 = {};
return obj27110;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__27111 = cljs.core.nnext(kvs);
kvs = G__27111;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27112__i = 0, G__27112__a = new Array(arguments.length -  0);
while (G__27112__i < G__27112__a.length) {G__27112__a[G__27112__i] = arguments[G__27112__i + 0]; ++G__27112__i;}
  keyvals = new cljs.core.IndexedSeq(G__27112__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__27113){
var keyvals = cljs.core.seq(arglist__27113);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__27114 = cljs.core.nnext(in$);
var G__27115 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27114;
out = G__27115;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27116__i = 0, G__27116__a = new Array(arguments.length -  0);
while (G__27116__i < G__27116__a.length) {G__27116__a[G__27116__i] = arguments[G__27116__i + 0]; ++G__27116__i;}
  keyvals = new cljs.core.IndexedSeq(G__27116__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__27117){
var keyvals = cljs.core.seq(arglist__27117);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__27118 = cljs.core.nnext(in$);
var G__27119 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27118;
out = G__27119;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__27120__i = 0, G__27120__a = new Array(arguments.length -  1);
while (G__27120__i < G__27120__a.length) {G__27120__a[G__27120__i] = arguments[G__27120__i + 1]; ++G__27120__i;}
  keyvals = new cljs.core.IndexedSeq(G__27120__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__27121){
var comparator = cljs.core.first(arglist__27121);
var keyvals = cljs.core.rest(arglist__27121);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27122 = self__.mseq;
if(G__27122){
var bit__16826__auto__ = (G__27122.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__27122.cljs$core$INext$)){
return true;
} else {
if((!G__27122.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27122);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27122);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27123 = self__.mseq;
if(G__27123){
var bit__16826__auto__ = (G__27123.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__27123.cljs$core$INext$)){
return true;
} else {
if((!G__27123.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27123);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27123);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27124 = self__.mseq;
if(G__27124){
var bit__16826__auto__ = (G__27124.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__27124.cljs$core$INext$)){
return true;
} else {
if((!G__27124.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27124);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27124);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27125 = self__.mseq;
if(G__27125){
var bit__16826__auto__ = (G__27125.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__27125.cljs$core$INext$)){
return true;
} else {
if((!G__27125.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27125);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27125);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__27126_SHARP_,p2__27127_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16145__auto__ = p1__27126_SHARP_;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__27127_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__27128__i = 0, G__27128__a = new Array(arguments.length -  0);
while (G__27128__i < G__27128__a.length) {G__27128__a[G__27128__i] = arguments[G__27128__i + 0]; ++G__27128__i;}
  maps = new cljs.core.IndexedSeq(G__27128__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__27129){
var maps = cljs.core.seq(arglist__27129);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27132 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27133 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27132,G__27133) : f.call(null,G__27132,G__27133));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__16145__auto__ = m1;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__27134__i = 0, G__27134__a = new Array(arguments.length -  1);
while (G__27134__i < G__27134__a.length) {G__27134__a[G__27134__i] = arguments[G__27134__i + 1]; ++G__27134__i;}
  maps = new cljs.core.IndexedSeq(G__27134__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__27135){
var f = cljs.core.first(arglist__27135);
var maps = cljs.core.rest(arglist__27135);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__27136 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__27137 = cljs.core.next(keys);
ret = G__27136;
keys = G__27137;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27140 = cljs.core.seq(coll);
var chunk__27141 = null;
var count__27142 = (0);
var i__27143 = (0);
while(true){
if((i__27143 < count__27142)){
var vec__27144 = chunk__27141.cljs$core$IIndexed$_nth$arity$2(null,i__27143);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27144,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27144,(1),null);
var G__27145_27150 = v;
var G__27146_27151 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27145_27150,G__27146_27151) : f.call(null,G__27145_27150,G__27146_27151));

var G__27152 = seq__27140;
var G__27153 = chunk__27141;
var G__27154 = count__27142;
var G__27155 = (i__27143 + (1));
seq__27140 = G__27152;
chunk__27141 = G__27153;
count__27142 = G__27154;
i__27143 = G__27155;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27140);
if(temp__4126__auto__){
var seq__27140__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27140__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27140__$1);
var G__27156 = cljs.core.chunk_rest(seq__27140__$1);
var G__27157 = c__16932__auto__;
var G__27158 = cljs.core.count(c__16932__auto__);
var G__27159 = (0);
seq__27140 = G__27156;
chunk__27141 = G__27157;
count__27142 = G__27158;
i__27143 = G__27159;
continue;
} else {
var vec__27147 = cljs.core.first(seq__27140__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27147,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27147,(1),null);
var G__27148_27160 = v;
var G__27149_27161 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27148_27160,G__27149_27161) : f.call(null,G__27148_27160,G__27149_27161));

var G__27162 = cljs.core.next(seq__27140__$1);
var G__27163 = null;
var G__27164 = (0);
var G__27165 = (0);
seq__27140 = G__27162;
chunk__27141 = G__27163;
count__27142 = G__27164;
i__27143 = G__27165;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27138_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27138_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__27166 = null;
var G__27166__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27166__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27166 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27166__2.call(this,self__,k);
case 3:
return G__27166__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27166.cljs$core$IFn$_invoke$arity$2 = G__27166__2;
G__27166.cljs$core$IFn$_invoke$arity$3 = G__27166__3;
return G__27166;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args27139){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27139)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27167 = (i + (1));
var G__27168 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__27167;
out = G__27168;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__27169 = (i + (1));
var G__27170 = cljs.core._conj_BANG_(out,(items[i]));
i = G__27169;
out = G__27170;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__27172 = null;
var G__27172__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__27172__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__27172 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27172__2.call(this,self__,k);
case 3:
return G__27172__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27172.cljs$core$IFn$_invoke$arity$2 = G__27172__2;
G__27172.cljs$core$IFn$_invoke$arity$3 = G__27172__3;
return G__27172;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args27171){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27171)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27175 = cljs.core.seq(coll);
var chunk__27176 = null;
var count__27177 = (0);
var i__27178 = (0);
while(true){
if((i__27178 < count__27177)){
var vec__27179 = chunk__27176.cljs$core$IIndexed$_nth$arity$2(null,i__27178);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27179,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27179,(1),null);
var G__27180_27185 = v;
var G__27181_27186 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27180_27185,G__27181_27186) : f.call(null,G__27180_27185,G__27181_27186));

var G__27187 = seq__27175;
var G__27188 = chunk__27176;
var G__27189 = count__27177;
var G__27190 = (i__27178 + (1));
seq__27175 = G__27187;
chunk__27176 = G__27188;
count__27177 = G__27189;
i__27178 = G__27190;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27175);
if(temp__4126__auto__){
var seq__27175__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27175__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27175__$1);
var G__27191 = cljs.core.chunk_rest(seq__27175__$1);
var G__27192 = c__16932__auto__;
var G__27193 = cljs.core.count(c__16932__auto__);
var G__27194 = (0);
seq__27175 = G__27191;
chunk__27176 = G__27192;
count__27177 = G__27193;
i__27178 = G__27194;
continue;
} else {
var vec__27182 = cljs.core.first(seq__27175__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27182,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27182,(1),null);
var G__27183_27195 = v;
var G__27184_27196 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27183_27195,G__27184_27196) : f.call(null,G__27183_27195,G__27184_27196));

var G__27197 = cljs.core.next(seq__27175__$1);
var G__27198 = null;
var G__27199 = (0);
var G__27200 = (0);
seq__27175 = G__27197;
chunk__27176 = G__27198;
count__27177 = G__27199;
i__27178 = G__27200;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27173_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27173_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__27201 = null;
var G__27201__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27201__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27201 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27201__2.call(this,self__,k);
case 3:
return G__27201__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27201.cljs$core$IFn$_invoke$arity$2 = G__27201__2;
G__27201.cljs$core$IFn$_invoke$arity$3 = G__27201__3;
return G__27201;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args27174){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27174)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__17026__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__17026__auto__.length)){
var G__27202 = (i + (1));
var G__27203 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__27202;
res = G__27203;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__27204 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__27205 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__27204;
out = G__27205;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__27206__delegate = function (keys){
return cljs.core.set(keys);
};
var G__27206 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27207__i = 0, G__27207__a = new Array(arguments.length -  0);
while (G__27207__i < G__27207__a.length) {G__27207__a[G__27207__i] = arguments[G__27207__i + 0]; ++G__27207__i;}
  keys = new cljs.core.IndexedSeq(G__27207__a,0);
} 
return G__27206__delegate.call(this,keys);};
G__27206.cljs$lang$maxFixedArity = 0;
G__27206.cljs$lang$applyTo = (function (arglist__27208){
var keys = cljs.core.seq(arglist__27208);
return G__27206__delegate(keys);
});
G__27206.cljs$core$IFn$_invoke$arity$variadic = G__27206__delegate;
return G__27206;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__27209 = null;
if (arguments.length > 0) {
var G__27210__i = 0, G__27210__a = new Array(arguments.length -  0);
while (G__27210__i < G__27210__a.length) {G__27210__a[G__27210__i] = arguments[G__27210__i + 0]; ++G__27210__i;}
G__27209 = new cljs.core.IndexedSeq(G__27210__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__27209);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27211__i = 0, G__27211__a = new Array(arguments.length -  0);
while (G__27211__i < G__27211__a.length) {G__27211__a[G__27211__i] = arguments[G__27211__i + 0]; ++G__27211__i;}
  keys = new cljs.core.IndexedSeq(G__27211__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__27212){
var keys = cljs.core.seq(arglist__27212);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__27213__i = 0, G__27213__a = new Array(arguments.length -  1);
while (G__27213__i < G__27213__a.length) {G__27213__a[G__27213__i] = arguments[G__27213__i + 1]; ++G__27213__i;}
  keys = new cljs.core.IndexedSeq(G__27213__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__27214){
var comparator = cljs.core.first(arglist__27214);
var keys = cljs.core.rest(arglist__27214);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__27215_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27215_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__27215_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__27216_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27216_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__27216_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__27237 = null;
var G__27237__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27237__1 = (function (result){
var G__27227 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27227) : rf.call(null,G__27227));
});
var G__27237__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__27228 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27228) : cljs.core.deref.call(null,G__27228));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__27229 = result;
var G__27230 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27229,G__27230) : rf.call(null,G__27229,G__27230));
}
});
G__27237 = function(result,input){
switch(arguments.length){
case 0:
return G__27237__0.call(this);
case 1:
return G__27237__1.call(this,result);
case 2:
return G__27237__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27237.cljs$core$IFn$_invoke$arity$0 = G__27237__0;
G__27237.cljs$core$IFn$_invoke$arity$1 = G__27237__1;
G__27237.cljs$core$IFn$_invoke$arity$2 = G__27237__2;
return G__27237;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__27235,seen__$1){
while(true){
var vec__27236 = p__27235;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27236,(0),null);
var xs__$1 = vec__27236;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__27238 = cljs.core.rest(s);
var G__27239 = seen__$1;
p__27235 = G__27238;
seen__$1 = G__27239;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__27240 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__27241 = cljs.core.next(s__$1);
ret = G__27240;
s__$1 = G__27241;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__27243 = x;
if(G__27243){
var bit__16819__auto__ = (G__27243.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16819__auto__) || (G__27243.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__27244 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__27245 = cljs.core.next(ks);
var G__27246 = cljs.core.next(vs);
map = G__27244;
ks = G__27245;
vs = G__27246;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__27257 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27257) : k.call(null,G__27257));
})() > (function (){var G__27258 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27258) : k.call(null,G__27258));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__27259__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27247_SHARP_,p2__27248_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__27247_SHARP_,p2__27248_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27259 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27260__i = 0, G__27260__a = new Array(arguments.length -  3);
while (G__27260__i < G__27260__a.length) {G__27260__a[G__27260__i] = arguments[G__27260__i + 3]; ++G__27260__i;}
  more = new cljs.core.IndexedSeq(G__27260__a,0);
} 
return G__27259__delegate.call(this,k,x,y,more);};
G__27259.cljs$lang$maxFixedArity = 3;
G__27259.cljs$lang$applyTo = (function (arglist__27261){
var k = cljs.core.first(arglist__27261);
arglist__27261 = cljs.core.next(arglist__27261);
var x = cljs.core.first(arglist__27261);
arglist__27261 = cljs.core.next(arglist__27261);
var y = cljs.core.first(arglist__27261);
var more = cljs.core.rest(arglist__27261);
return G__27259__delegate(k,x,y,more);
});
G__27259.cljs$core$IFn$_invoke$arity$variadic = G__27259__delegate;
return G__27259;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__27262 = null;
if (arguments.length > 3) {
var G__27263__i = 0, G__27263__a = new Array(arguments.length -  3);
while (G__27263__i < G__27263__a.length) {G__27263__a[G__27263__i] = arguments[G__27263__i + 3]; ++G__27263__i;}
G__27262 = new cljs.core.IndexedSeq(G__27263__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__27274 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27274) : k.call(null,G__27274));
})() < (function (){var G__27275 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27275) : k.call(null,G__27275));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__27276__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27264_SHARP_,p2__27265_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__27264_SHARP_,p2__27265_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27276 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27277__i = 0, G__27277__a = new Array(arguments.length -  3);
while (G__27277__i < G__27277__a.length) {G__27277__a[G__27277__i] = arguments[G__27277__i + 3]; ++G__27277__i;}
  more = new cljs.core.IndexedSeq(G__27277__a,0);
} 
return G__27276__delegate.call(this,k,x,y,more);};
G__27276.cljs$lang$maxFixedArity = 3;
G__27276.cljs$lang$applyTo = (function (arglist__27278){
var k = cljs.core.first(arglist__27278);
arglist__27278 = cljs.core.next(arglist__27278);
var x = cljs.core.first(arglist__27278);
arglist__27278 = cljs.core.next(arglist__27278);
var y = cljs.core.first(arglist__27278);
var more = cljs.core.rest(arglist__27278);
return G__27276__delegate(k,x,y,more);
});
G__27276.cljs$core$IFn$_invoke$arity$variadic = G__27276__delegate;
return G__27276;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__27279 = null;
if (arguments.length > 3) {
var G__27280__i = 0, G__27280__a = new Array(arguments.length -  3);
while (G__27280__i < G__27280__a.length) {G__27280__a[G__27280__i] = arguments[G__27280__i + 3]; ++G__27280__i;}
G__27279 = new cljs.core.IndexedSeq(G__27280__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27279);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__27297 = null;
var G__27297__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27297__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27292 = result;
var G__27293 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27292,G__27293) : rf.call(null,G__27292,G__27293));
})());
})());
var G__27294 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27294) : rf.call(null,G__27294));
});
var G__27297__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__27295 = result;
var G__27296 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27295,G__27296) : rf.call(null,G__27295,G__27296));
} else {
return result;
}
});
G__27297 = function(result,input){
switch(arguments.length){
case 0:
return G__27297__0.call(this);
case 1:
return G__27297__1.call(this,result);
case 2:
return G__27297__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27297.cljs$core$IFn$_invoke$arity$0 = G__27297__0;
G__27297.cljs$core$IFn$_invoke$arity$1 = G__27297__1;
G__27297.cljs$core$IFn$_invoke$arity$2 = G__27297__2;
return G__27297;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__27310 = null;
var G__27310__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27310__1 = (function (result){
var G__27305 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27305) : rf.call(null,G__27305));
});
var G__27310__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27306 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27306) : pred.call(null,G__27306));
})())){
var G__27307 = result;
var G__27308 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27307,G__27308) : rf.call(null,G__27307,G__27308));
} else {
return cljs.core.reduced(result);
}
});
G__27310 = function(result,input){
switch(arguments.length){
case 0:
return G__27310__0.call(this);
case 1:
return G__27310__1.call(this,result);
case 2:
return G__27310__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27310.cljs$core$IFn$_invoke$arity$0 = G__27310__0;
G__27310.cljs$core$IFn$_invoke$arity$1 = G__27310__1;
G__27310.cljs$core$IFn$_invoke$arity$2 = G__27310__2;
return G__27310;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__27309 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27309) : pred.call(null,G__27309));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__27315 = (function (){var G__27317 = cljs.core._entry_key(sc,e);
var G__27318 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27317,G__27318) : comp.call(null,G__27317,G__27318));
})();
var G__27316 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__27315,G__27316) : test.call(null,G__27315,G__27316));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27322 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27322,(0),null);
var s = vec__27322;
if(cljs.core.truth_((function (){var G__27323 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27323) : include.call(null,G__27323));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27324 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27324,(0),null);
var s = vec__27324;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27328 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27328,(0),null);
var s = vec__27328;
if(cljs.core.truth_((function (){var G__27329 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27329) : include.call(null,G__27329));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27330 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27330,(0),null);
var s = vec__27330;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__27331 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__27331) : Math.ceil.call(null,G__27331));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__27332 = ret;
var G__27333 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27332,G__27333) : f.call(null,G__27332,G__27333));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__27334 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27334) : cljs.core.deref.call(null,G__27334));
} else {
var G__27335 = (i + self__.step);
var G__27336 = ret__$1;
i = G__27335;
ret = G__27336;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__27354 = null;
var G__27354__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27354__1 = (function (result){
var G__27351 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27351) : rf.call(null,G__27351));
});
var G__27354__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__27352 = result;
var G__27353 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27352,G__27353) : rf.call(null,G__27352,G__27353));
} else {
return result;
}
});
G__27354 = function(result,input){
switch(arguments.length){
case 0:
return G__27354__0.call(this);
case 1:
return G__27354__1.call(this,result);
case 2:
return G__27354__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27354.cljs$core$IFn$_invoke$arity$0 = G__27354__0;
G__27354.cljs$core$IFn$_invoke$arity$1 = G__27354__1;
G__27354.cljs$core$IFn$_invoke$arity$2 = G__27354__2;
return G__27354;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__27376 = null;
var G__27376__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27376__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27367 = result;
var G__27368 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27367,G__27368) : rf.call(null,G__27367,G__27368));
})());
})());
var G__27369 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27369) : rf.call(null,G__27369));
});
var G__27376__2 = (function (result,input){
var pval = (function (){var G__27370 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27370) : cljs.core.deref.call(null,G__27370));
})();
var val = (function (){var G__27371 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27371) : f.call(null,G__27371));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__27372 = result;
var G__27373 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27372,G__27373) : rf.call(null,G__27372,G__27373));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__27376 = function(result,input){
switch(arguments.length){
case 0:
return G__27376__0.call(this);
case 1:
return G__27376__1.call(this,result);
case 2:
return G__27376__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27376.cljs$core$IFn$_invoke$arity$0 = G__27376__0;
G__27376.cljs$core$IFn$_invoke$arity$1 = G__27376__1;
G__27376.cljs$core$IFn$_invoke$arity$2 = G__27376__2;
return G__27376;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__27374 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27374) : f.call(null,G__27374));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__27355_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__27375 = p1__27355_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27375) : f.call(null,G__27375));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__27385 = init;
var G__27386 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27385,G__27386) : f.call(null,G__27385,G__27386));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__27481 = null;
var G__27481__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__27481__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27439 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27439) : f.call(null,G__27439));
})()],null));
});
var G__27481__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27440 = x;
var G__27441 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27440,G__27441) : f.call(null,G__27440,G__27441));
})()],null));
});
var G__27481__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27442 = x;
var G__27443 = y;
var G__27444 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27442,G__27443,G__27444) : f.call(null,G__27442,G__27443,G__27444));
})()],null));
});
var G__27481__4 = (function() { 
var G__27482__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__27482 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27483__i = 0, G__27483__a = new Array(arguments.length -  3);
while (G__27483__i < G__27483__a.length) {G__27483__a[G__27483__i] = arguments[G__27483__i + 3]; ++G__27483__i;}
  args = new cljs.core.IndexedSeq(G__27483__a,0);
} 
return G__27482__delegate.call(this,x,y,z,args);};
G__27482.cljs$lang$maxFixedArity = 3;
G__27482.cljs$lang$applyTo = (function (arglist__27484){
var x = cljs.core.first(arglist__27484);
arglist__27484 = cljs.core.next(arglist__27484);
var y = cljs.core.first(arglist__27484);
arglist__27484 = cljs.core.next(arglist__27484);
var z = cljs.core.first(arglist__27484);
var args = cljs.core.rest(arglist__27484);
return G__27482__delegate(x,y,z,args);
});
G__27482.cljs$core$IFn$_invoke$arity$variadic = G__27482__delegate;
return G__27482;
})()
;
G__27481 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27481__0.call(this);
case 1:
return G__27481__1.call(this,x);
case 2:
return G__27481__2.call(this,x,y);
case 3:
return G__27481__3.call(this,x,y,z);
default:
var G__27485 = null;
if (arguments.length > 3) {
var G__27486__i = 0, G__27486__a = new Array(arguments.length -  3);
while (G__27486__i < G__27486__a.length) {G__27486__a[G__27486__i] = arguments[G__27486__i + 3]; ++G__27486__i;}
G__27485 = new cljs.core.IndexedSeq(G__27486__a,0);
}
return G__27481__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27485);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27481.cljs$lang$maxFixedArity = 3;
G__27481.cljs$lang$applyTo = G__27481__4.cljs$lang$applyTo;
G__27481.cljs$core$IFn$_invoke$arity$0 = G__27481__0;
G__27481.cljs$core$IFn$_invoke$arity$1 = G__27481__1;
G__27481.cljs$core$IFn$_invoke$arity$2 = G__27481__2;
G__27481.cljs$core$IFn$_invoke$arity$3 = G__27481__3;
G__27481.cljs$core$IFn$_invoke$arity$variadic = G__27481__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27481;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__27487 = null;
var G__27487__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__27487__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27445 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27445) : f.call(null,G__27445));
})(),(function (){var G__27446 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27446) : g.call(null,G__27446));
})()],null));
});
var G__27487__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27447 = x;
var G__27448 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27447,G__27448) : f.call(null,G__27447,G__27448));
})(),(function (){var G__27449 = x;
var G__27450 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27449,G__27450) : g.call(null,G__27449,G__27450));
})()],null));
});
var G__27487__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27451 = x;
var G__27452 = y;
var G__27453 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27451,G__27452,G__27453) : f.call(null,G__27451,G__27452,G__27453));
})(),(function (){var G__27454 = x;
var G__27455 = y;
var G__27456 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27454,G__27455,G__27456) : g.call(null,G__27454,G__27455,G__27456));
})()],null));
});
var G__27487__4 = (function() { 
var G__27488__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__27488 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27489__i = 0, G__27489__a = new Array(arguments.length -  3);
while (G__27489__i < G__27489__a.length) {G__27489__a[G__27489__i] = arguments[G__27489__i + 3]; ++G__27489__i;}
  args = new cljs.core.IndexedSeq(G__27489__a,0);
} 
return G__27488__delegate.call(this,x,y,z,args);};
G__27488.cljs$lang$maxFixedArity = 3;
G__27488.cljs$lang$applyTo = (function (arglist__27490){
var x = cljs.core.first(arglist__27490);
arglist__27490 = cljs.core.next(arglist__27490);
var y = cljs.core.first(arglist__27490);
arglist__27490 = cljs.core.next(arglist__27490);
var z = cljs.core.first(arglist__27490);
var args = cljs.core.rest(arglist__27490);
return G__27488__delegate(x,y,z,args);
});
G__27488.cljs$core$IFn$_invoke$arity$variadic = G__27488__delegate;
return G__27488;
})()
;
G__27487 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27487__0.call(this);
case 1:
return G__27487__1.call(this,x);
case 2:
return G__27487__2.call(this,x,y);
case 3:
return G__27487__3.call(this,x,y,z);
default:
var G__27491 = null;
if (arguments.length > 3) {
var G__27492__i = 0, G__27492__a = new Array(arguments.length -  3);
while (G__27492__i < G__27492__a.length) {G__27492__a[G__27492__i] = arguments[G__27492__i + 3]; ++G__27492__i;}
G__27491 = new cljs.core.IndexedSeq(G__27492__a,0);
}
return G__27487__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27491);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27487.cljs$lang$maxFixedArity = 3;
G__27487.cljs$lang$applyTo = G__27487__4.cljs$lang$applyTo;
G__27487.cljs$core$IFn$_invoke$arity$0 = G__27487__0;
G__27487.cljs$core$IFn$_invoke$arity$1 = G__27487__1;
G__27487.cljs$core$IFn$_invoke$arity$2 = G__27487__2;
G__27487.cljs$core$IFn$_invoke$arity$3 = G__27487__3;
G__27487.cljs$core$IFn$_invoke$arity$variadic = G__27487__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27487;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__27493 = null;
var G__27493__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__27493__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27457 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27457) : f.call(null,G__27457));
})(),(function (){var G__27458 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27458) : g.call(null,G__27458));
})(),(function (){var G__27459 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__27459) : h.call(null,G__27459));
})()],null));
});
var G__27493__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27460 = x;
var G__27461 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27460,G__27461) : f.call(null,G__27460,G__27461));
})(),(function (){var G__27462 = x;
var G__27463 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27462,G__27463) : g.call(null,G__27462,G__27463));
})(),(function (){var G__27464 = x;
var G__27465 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__27464,G__27465) : h.call(null,G__27464,G__27465));
})()],null));
});
var G__27493__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27466 = x;
var G__27467 = y;
var G__27468 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27466,G__27467,G__27468) : f.call(null,G__27466,G__27467,G__27468));
})(),(function (){var G__27469 = x;
var G__27470 = y;
var G__27471 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27469,G__27470,G__27471) : g.call(null,G__27469,G__27470,G__27471));
})(),(function (){var G__27472 = x;
var G__27473 = y;
var G__27474 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__27472,G__27473,G__27474) : h.call(null,G__27472,G__27473,G__27474));
})()],null));
});
var G__27493__4 = (function() { 
var G__27494__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__27494 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27495__i = 0, G__27495__a = new Array(arguments.length -  3);
while (G__27495__i < G__27495__a.length) {G__27495__a[G__27495__i] = arguments[G__27495__i + 3]; ++G__27495__i;}
  args = new cljs.core.IndexedSeq(G__27495__a,0);
} 
return G__27494__delegate.call(this,x,y,z,args);};
G__27494.cljs$lang$maxFixedArity = 3;
G__27494.cljs$lang$applyTo = (function (arglist__27496){
var x = cljs.core.first(arglist__27496);
arglist__27496 = cljs.core.next(arglist__27496);
var y = cljs.core.first(arglist__27496);
arglist__27496 = cljs.core.next(arglist__27496);
var z = cljs.core.first(arglist__27496);
var args = cljs.core.rest(arglist__27496);
return G__27494__delegate(x,y,z,args);
});
G__27494.cljs$core$IFn$_invoke$arity$variadic = G__27494__delegate;
return G__27494;
})()
;
G__27493 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27493__0.call(this);
case 1:
return G__27493__1.call(this,x);
case 2:
return G__27493__2.call(this,x,y);
case 3:
return G__27493__3.call(this,x,y,z);
default:
var G__27497 = null;
if (arguments.length > 3) {
var G__27498__i = 0, G__27498__a = new Array(arguments.length -  3);
while (G__27498__i < G__27498__a.length) {G__27498__a[G__27498__i] = arguments[G__27498__i + 3]; ++G__27498__i;}
G__27497 = new cljs.core.IndexedSeq(G__27498__a,0);
}
return G__27493__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27493.cljs$lang$maxFixedArity = 3;
G__27493.cljs$lang$applyTo = G__27493__4.cljs$lang$applyTo;
G__27493.cljs$core$IFn$_invoke$arity$0 = G__27493__0;
G__27493.cljs$core$IFn$_invoke$arity$1 = G__27493__1;
G__27493.cljs$core$IFn$_invoke$arity$2 = G__27493__2;
G__27493.cljs$core$IFn$_invoke$arity$3 = G__27493__3;
G__27493.cljs$core$IFn$_invoke$arity$variadic = G__27493__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27493;
})()
});
var juxt__4 = (function() { 
var G__27499__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__27500 = null;
var G__27500__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27387_SHARP_,p2__27388_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27387_SHARP_,(function (){return (p2__27388_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__27388_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__27388_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27500__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27389_SHARP_,p2__27390_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27389_SHARP_,(function (){var G__27475 = x;
return (p2__27390_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__27390_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27475) : p2__27390_SHARP_.call(null,G__27475));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27500__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27391_SHARP_,p2__27392_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27391_SHARP_,(function (){var G__27476 = x;
var G__27477 = y;
return (p2__27392_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__27392_SHARP_.cljs$core$IFn$_invoke$arity$2(G__27476,G__27477) : p2__27392_SHARP_.call(null,G__27476,G__27477));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27500__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27393_SHARP_,p2__27394_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27393_SHARP_,(function (){var G__27478 = x;
var G__27479 = y;
var G__27480 = z;
return (p2__27394_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__27394_SHARP_.cljs$core$IFn$_invoke$arity$3(G__27478,G__27479,G__27480) : p2__27394_SHARP_.call(null,G__27478,G__27479,G__27480));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27500__4 = (function() { 
var G__27501__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27395_SHARP_,p2__27396_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27395_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__27396_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__27501 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27502__i = 0, G__27502__a = new Array(arguments.length -  3);
while (G__27502__i < G__27502__a.length) {G__27502__a[G__27502__i] = arguments[G__27502__i + 3]; ++G__27502__i;}
  args = new cljs.core.IndexedSeq(G__27502__a,0);
} 
return G__27501__delegate.call(this,x,y,z,args);};
G__27501.cljs$lang$maxFixedArity = 3;
G__27501.cljs$lang$applyTo = (function (arglist__27503){
var x = cljs.core.first(arglist__27503);
arglist__27503 = cljs.core.next(arglist__27503);
var y = cljs.core.first(arglist__27503);
arglist__27503 = cljs.core.next(arglist__27503);
var z = cljs.core.first(arglist__27503);
var args = cljs.core.rest(arglist__27503);
return G__27501__delegate(x,y,z,args);
});
G__27501.cljs$core$IFn$_invoke$arity$variadic = G__27501__delegate;
return G__27501;
})()
;
G__27500 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27500__0.call(this);
case 1:
return G__27500__1.call(this,x);
case 2:
return G__27500__2.call(this,x,y);
case 3:
return G__27500__3.call(this,x,y,z);
default:
var G__27504 = null;
if (arguments.length > 3) {
var G__27505__i = 0, G__27505__a = new Array(arguments.length -  3);
while (G__27505__i < G__27505__a.length) {G__27505__a[G__27505__i] = arguments[G__27505__i + 3]; ++G__27505__i;}
G__27504 = new cljs.core.IndexedSeq(G__27505__a,0);
}
return G__27500__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27500.cljs$lang$maxFixedArity = 3;
G__27500.cljs$lang$applyTo = G__27500__4.cljs$lang$applyTo;
G__27500.cljs$core$IFn$_invoke$arity$0 = G__27500__0;
G__27500.cljs$core$IFn$_invoke$arity$1 = G__27500__1;
G__27500.cljs$core$IFn$_invoke$arity$2 = G__27500__2;
G__27500.cljs$core$IFn$_invoke$arity$3 = G__27500__3;
G__27500.cljs$core$IFn$_invoke$arity$variadic = G__27500__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27500;
})()
;})(fs__$1))
};
var G__27499 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__27506__i = 0, G__27506__a = new Array(arguments.length -  3);
while (G__27506__i < G__27506__a.length) {G__27506__a[G__27506__i] = arguments[G__27506__i + 3]; ++G__27506__i;}
  fs = new cljs.core.IndexedSeq(G__27506__a,0);
} 
return G__27499__delegate.call(this,f,g,h,fs);};
G__27499.cljs$lang$maxFixedArity = 3;
G__27499.cljs$lang$applyTo = (function (arglist__27507){
var f = cljs.core.first(arglist__27507);
arglist__27507 = cljs.core.next(arglist__27507);
var g = cljs.core.first(arglist__27507);
arglist__27507 = cljs.core.next(arglist__27507);
var h = cljs.core.first(arglist__27507);
var fs = cljs.core.rest(arglist__27507);
return G__27499__delegate(f,g,h,fs);
});
G__27499.cljs$core$IFn$_invoke$arity$variadic = G__27499__delegate;
return G__27499;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__27508 = null;
if (arguments.length > 3) {
var G__27509__i = 0, G__27509__a = new Array(arguments.length -  3);
while (G__27509__i < G__27509__a.length) {G__27509__a[G__27509__i] = arguments[G__27509__i + 3]; ++G__27509__i;}
G__27508 = new cljs.core.IndexedSeq(G__27509__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__27508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__27510 = cljs.core.next(coll);
coll = G__27510;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__27511 = (n - (1));
var G__27512 = cljs.core.next(coll);
n = G__27511;
coll = G__27512;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__27516 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27516,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27516,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27516,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_27524 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__16145__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__27525_27531 = cljs.core.first(coll);
var G__27526_27532 = writer;
var G__27527_27533 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27525_27531,G__27526_27532,G__27527_27533) : print_one.call(null,G__27525_27531,G__27526_27532,G__27527_27533));
} else {
}

var coll_27534__$1 = cljs.core.next(coll);
var n_27535 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_27534__$1) && (((n_27535 == null)) || (!((n_27535 === (0)))))){
cljs.core._write(writer,sep);

var G__27528_27536 = cljs.core.first(coll_27534__$1);
var G__27529_27537 = writer;
var G__27530_27538 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27528_27536,G__27529_27537,G__27530_27538) : print_one.call(null,G__27528_27536,G__27529_27537,G__27530_27538));

var G__27539 = cljs.core.next(coll_27534__$1);
var G__27540 = (n_27535 - (1));
coll_27534__$1 = G__27539;
n_27535 = G__27540;
continue;
} else {
if((cljs.core.seq(coll_27534__$1)) && ((n_27535 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__16145__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_27524;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__27545 = cljs.core.seq(ss);
var chunk__27546 = null;
var count__27547 = (0);
var i__27548 = (0);
while(true){
if((i__27548 < count__27547)){
var s = chunk__27546.cljs$core$IIndexed$_nth$arity$2(null,i__27548);
cljs.core._write(writer,s);

var G__27549 = seq__27545;
var G__27550 = chunk__27546;
var G__27551 = count__27547;
var G__27552 = (i__27548 + (1));
seq__27545 = G__27549;
chunk__27546 = G__27550;
count__27547 = G__27551;
i__27548 = G__27552;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27545);
if(temp__4126__auto__){
var seq__27545__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27545__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27545__$1);
var G__27553 = cljs.core.chunk_rest(seq__27545__$1);
var G__27554 = c__16932__auto__;
var G__27555 = cljs.core.count(c__16932__auto__);
var G__27556 = (0);
seq__27545 = G__27553;
chunk__27546 = G__27554;
count__27547 = G__27555;
i__27548 = G__27556;
continue;
} else {
var s = cljs.core.first(seq__27545__$1);
cljs.core._write(writer,s);

var G__27557 = cljs.core.next(seq__27545__$1);
var G__27558 = null;
var G__27559 = (0);
var G__27560 = (0);
seq__27545 = G__27557;
chunk__27546 = G__27558;
count__27547 = G__27559;
i__27548 = G__27560;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__27561__i = 0, G__27561__a = new Array(arguments.length -  1);
while (G__27561__i < G__27561__a.length) {G__27561__a[G__27561__i] = arguments[G__27561__i + 1]; ++G__27561__i;}
  ss = new cljs.core.IndexedSeq(G__27561__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__27562){
var writer = cljs.core.first(arglist__27562);
var ss = cljs.core.rest(arglist__27562);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj27564 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj27564;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__27567 = "[\\\\\"\b\f\n\r\t]";
var G__27568 = "g";
return RegExp(G__27567,G__27568);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__27582 = obj;
if(G__27582){
var bit__16826__auto__ = (G__27582.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16826__auto__) || (G__27582.cljs$core$IMeta$)){
return true;
} else {
if((!G__27582.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27582);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27582);
}
})();
if(and__16133__auto____$1){
return cljs.core.meta(obj);
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__27583_27593 = cljs.core.meta(obj);
var G__27584_27594 = writer;
var G__27585_27595 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__27583_27593,G__27584_27594,G__27585_27595) : cljs.core.pr_writer.call(null,G__27583_27593,G__27584_27594,G__27585_27595));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__27586 = obj;
if(G__27586){
var bit__16819__auto__ = (G__27586.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16819__auto__) || (G__27586.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__27587 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__27588 = cljs.core.pr_writer;
var G__27589 = writer;
var G__27590 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__27587,G__27588,G__27589,G__27590) : cljs.core.print_map.call(null,G__27587,G__27588,G__27589,G__27590));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__27591 = obj;
return goog.isString(G__27591);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__27596 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__27596;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__27592 = obj;
if(G__27592){
var bit__16826__auto__ = (G__27592.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16826__auto__) || (G__27592.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__27592.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27592);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27592);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__27600 = obj;
var G__27601 = writer;
var G__27602 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__27600,G__27601,G__27602) : alt_impl.call(null,G__27600,G__27601,G__27602));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__27607 = cljs.core.seq(cljs.core.next(objs));
var chunk__27608 = null;
var count__27609 = (0);
var i__27610 = (0);
while(true){
if((i__27610 < count__27609)){
var obj = chunk__27608.cljs$core$IIndexed$_nth$arity$2(null,i__27610);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27611 = seq__27607;
var G__27612 = chunk__27608;
var G__27613 = count__27609;
var G__27614 = (i__27610 + (1));
seq__27607 = G__27611;
chunk__27608 = G__27612;
count__27609 = G__27613;
i__27610 = G__27614;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27607);
if(temp__4126__auto__){
var seq__27607__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27607__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27607__$1);
var G__27615 = cljs.core.chunk_rest(seq__27607__$1);
var G__27616 = c__16932__auto__;
var G__27617 = cljs.core.count(c__16932__auto__);
var G__27618 = (0);
seq__27607 = G__27615;
chunk__27608 = G__27616;
count__27609 = G__27617;
i__27610 = G__27618;
continue;
} else {
var obj = cljs.core.first(seq__27607__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27619 = cljs.core.next(seq__27607__$1);
var G__27620 = null;
var G__27621 = (0);
var G__27622 = (0);
seq__27607 = G__27619;
chunk__27608 = G__27620;
count__27609 = G__27621;
i__27610 = G__27622;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27623__i = 0, G__27623__a = new Array(arguments.length -  0);
while (G__27623__i < G__27623__a.length) {G__27623__a[G__27623__i] = arguments[G__27623__i + 0]; ++G__27623__i;}
  objs = new cljs.core.IndexedSeq(G__27623__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__27624){
var objs = cljs.core.seq(arglist__27624);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27625__i = 0, G__27625__a = new Array(arguments.length -  0);
while (G__27625__i < G__27625__a.length) {G__27625__a[G__27625__i] = arguments[G__27625__i + 0]; ++G__27625__i;}
  objs = new cljs.core.IndexedSeq(G__27625__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__27626){
var objs = cljs.core.seq(arglist__27626);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27627__i = 0, G__27627__a = new Array(arguments.length -  0);
while (G__27627__i < G__27627__a.length) {G__27627__a[G__27627__i] = arguments[G__27627__i + 0]; ++G__27627__i;}
  objs = new cljs.core.IndexedSeq(G__27627__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__27628){
var objs = cljs.core.seq(arglist__27628);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27629__i = 0, G__27629__a = new Array(arguments.length -  0);
while (G__27629__i < G__27629__a.length) {G__27629__a[G__27629__i] = arguments[G__27629__i + 0]; ++G__27629__i;}
  objs = new cljs.core.IndexedSeq(G__27629__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__27630){
var objs = cljs.core.seq(arglist__27630);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27631__i = 0, G__27631__a = new Array(arguments.length -  0);
while (G__27631__i < G__27631__a.length) {G__27631__a[G__27631__i] = arguments[G__27631__i + 0]; ++G__27631__i;}
  objs = new cljs.core.IndexedSeq(G__27631__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__27632){
var objs = cljs.core.seq(arglist__27632);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27633__i = 0, G__27633__a = new Array(arguments.length -  0);
while (G__27633__i < G__27633__a.length) {G__27633__a[G__27633__i] = arguments[G__27633__i + 0]; ++G__27633__i;}
  objs = new cljs.core.IndexedSeq(G__27633__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__27634){
var objs = cljs.core.seq(arglist__27634);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27635__i = 0, G__27635__a = new Array(arguments.length -  0);
while (G__27635__i < G__27635__a.length) {G__27635__a[G__27635__i] = arguments[G__27635__i + 0]; ++G__27635__i;}
  objs = new cljs.core.IndexedSeq(G__27635__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__27636){
var objs = cljs.core.seq(arglist__27636);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27637__i = 0, G__27637__a = new Array(arguments.length -  0);
while (G__27637__i < G__27637__a.length) {G__27637__a[G__27637__i] = arguments[G__27637__i + 0]; ++G__27637__i;}
  objs = new cljs.core.IndexedSeq(G__27637__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__27638){
var objs = cljs.core.seq(arglist__27638);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__27645_27651 = cljs.core.key(e);
var G__27646_27652 = w;
var G__27647_27653 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27645_27651,G__27646_27652,G__27647_27653) : print_one.call(null,G__27645_27651,G__27646_27652,G__27647_27653));

cljs.core._write(w," ");

var G__27648 = cljs.core.val(e);
var G__27649 = w;
var G__27650 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27648,G__27649,G__27650) : print_one.call(null,G__27648,G__27649,G__27650));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__27654__i = 0, G__27654__a = new Array(arguments.length -  2);
while (G__27654__i < G__27654__a.length) {G__27654__a[G__27654__i] = arguments[G__27654__i + 2]; ++G__27654__i;}
  args = new cljs.core.IndexedSeq(G__27654__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__27655){
var iref = cljs.core.first(arglist__27655);
arglist__27655 = cljs.core.next(arglist__27655);
var f = cljs.core.first(arglist__27655);
var args = cljs.core.rest(arglist__27655);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__27658 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27658) : cljs.core.atom.call(null,G__27658));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__27660 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27660) : cljs.core.deref.call(null,G__27660));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__27661_SHARP_,p2__27662_SHARP_){
var ret = (function (){var G__27665 = p1__27661_SHARP_;
var G__27666 = p2__27662_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27665,G__27666) : rf.call(null,G__27665,G__27666));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__27669 = null;
var G__27669__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27669__1 = (function (result){
var G__27668 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27668) : rf.call(null,G__27668));
});
var G__27669__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__27669 = function(result,input){
switch(arguments.length){
case 0:
return G__27669__0.call(this);
case 1:
return G__27669__1.call(this,result);
case 2:
return G__27669__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27669.cljs$core$IFn$_invoke$arity$0 = G__27669__0;
G__27669.cljs$core$IFn$_invoke$arity$1 = G__27669__1;
G__27669.cljs$core$IFn$_invoke$arity$2 = G__27669__2;
return G__27669;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__27678 = null;
var G__27678__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27678__1 = (function (result){
var G__27674 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27674) : rf.call(null,G__27674));
});
var G__27678__2 = (function (result,input){
var prior = (function (){var G__27675 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27675) : cljs.core.deref.call(null,G__27675));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__27676 = result;
var G__27677 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27676,G__27677) : rf.call(null,G__27676,G__27677));
}
});
G__27678 = function(result,input){
switch(arguments.length){
case 0:
return G__27678__0.call(this);
case 1:
return G__27678__1.call(this,result);
case 2:
return G__27678__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27678.cljs$core$IFn$_invoke$arity$0 = G__27678__0;
G__27678.cljs$core$IFn$_invoke$arity$1 = G__27678__1;
G__27678.cljs$core$IFn$_invoke$arity$2 = G__27678__2;
return G__27678;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27680_SHARP_,p2__27679_SHARP_){
var G__27682 = p2__27679_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__27682) : proc.call(null,G__27682));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj27684 = {};
return obj27684;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._clj__GT_js[(function (){var G__27688 = x__16789__auto__;
return goog.typeOf(G__27688);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._key__GT_js[(function (){var G__27692 = x__16789__auto__;
return goog.typeOf(G__27692);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__27695 = k;
if(G__27695){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__27695.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27695.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27695);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27695);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__27696 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__27696) : cljs.core.clj__GT_js.call(null,G__27696));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__27712 = x;
if(G__27712){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__27712.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27712.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27712);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27712);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj27714 = {};
return obj27714;
})();
var seq__27715_27725 = cljs.core.seq(x);
var chunk__27716_27726 = null;
var count__27717_27727 = (0);
var i__27718_27728 = (0);
while(true){
if((i__27718_27728 < count__27717_27727)){
var vec__27719_27729 = chunk__27716_27726.cljs$core$IIndexed$_nth$arity$2(null,i__27718_27728);
var k_27730 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27719_27729,(0),null);
var v_27731 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27719_27729,(1),null);
(m[cljs.core.key__GT_js(k_27730)] = clj__GT_js(v_27731));

var G__27732 = seq__27715_27725;
var G__27733 = chunk__27716_27726;
var G__27734 = count__27717_27727;
var G__27735 = (i__27718_27728 + (1));
seq__27715_27725 = G__27732;
chunk__27716_27726 = G__27733;
count__27717_27727 = G__27734;
i__27718_27728 = G__27735;
continue;
} else {
var temp__4126__auto___27736 = cljs.core.seq(seq__27715_27725);
if(temp__4126__auto___27736){
var seq__27715_27737__$1 = temp__4126__auto___27736;
if(cljs.core.chunked_seq_QMARK_(seq__27715_27737__$1)){
var c__16932__auto___27738 = cljs.core.chunk_first(seq__27715_27737__$1);
var G__27739 = cljs.core.chunk_rest(seq__27715_27737__$1);
var G__27740 = c__16932__auto___27738;
var G__27741 = cljs.core.count(c__16932__auto___27738);
var G__27742 = (0);
seq__27715_27725 = G__27739;
chunk__27716_27726 = G__27740;
count__27717_27727 = G__27741;
i__27718_27728 = G__27742;
continue;
} else {
var vec__27720_27743 = cljs.core.first(seq__27715_27737__$1);
var k_27744 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27720_27743,(0),null);
var v_27745 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27720_27743,(1),null);
(m[cljs.core.key__GT_js(k_27744)] = clj__GT_js(v_27745));

var G__27746 = cljs.core.next(seq__27715_27737__$1);
var G__27747 = null;
var G__27748 = (0);
var G__27749 = (0);
seq__27715_27725 = G__27746;
chunk__27716_27726 = G__27747;
count__27717_27727 = G__27748;
i__27718_27728 = G__27749;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__27721_27750 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__27722_27751 = null;
var count__27723_27752 = (0);
var i__27724_27753 = (0);
while(true){
if((i__27724_27753 < count__27723_27752)){
var x_27754__$1 = chunk__27722_27751.cljs$core$IIndexed$_nth$arity$2(null,i__27724_27753);
arr.push(x_27754__$1);

var G__27755 = seq__27721_27750;
var G__27756 = chunk__27722_27751;
var G__27757 = count__27723_27752;
var G__27758 = (i__27724_27753 + (1));
seq__27721_27750 = G__27755;
chunk__27722_27751 = G__27756;
count__27723_27752 = G__27757;
i__27724_27753 = G__27758;
continue;
} else {
var temp__4126__auto___27759 = cljs.core.seq(seq__27721_27750);
if(temp__4126__auto___27759){
var seq__27721_27760__$1 = temp__4126__auto___27759;
if(cljs.core.chunked_seq_QMARK_(seq__27721_27760__$1)){
var c__16932__auto___27761 = cljs.core.chunk_first(seq__27721_27760__$1);
var G__27762 = cljs.core.chunk_rest(seq__27721_27760__$1);
var G__27763 = c__16932__auto___27761;
var G__27764 = cljs.core.count(c__16932__auto___27761);
var G__27765 = (0);
seq__27721_27750 = G__27762;
chunk__27722_27751 = G__27763;
count__27723_27752 = G__27764;
i__27724_27753 = G__27765;
continue;
} else {
var x_27766__$1 = cljs.core.first(seq__27721_27760__$1);
arr.push(x_27766__$1);

var G__27767 = cljs.core.next(seq__27721_27760__$1);
var G__27768 = null;
var G__27769 = (0);
var G__27770 = (0);
seq__27721_27750 = G__27767;
chunk__27722_27751 = G__27768;
count__27723_27752 = G__27769;
i__27724_27753 = G__27770;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj27772 = {};
return obj27772;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._js__GT_clj[(function (){var G__27776 = x__16789__auto__;
return goog.typeOf(G__27776);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__27833__delegate = function (x,opts){
var map__27806 = opts;
var map__27806__$1 = ((cljs.core.seq_QMARK_(map__27806))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27806):map__27806);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27806__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__27806,map__27806__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__27822 = x__$1;
if(G__27822){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__27822.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__27822.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__27822);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__27822);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__16901__auto__ = ((function (map__27806,map__27806__$1,keywordize_keys,keyfn){
return (function iter__27823(s__27824){
return (new cljs.core.LazySeq(null,((function (map__27806,map__27806__$1,keywordize_keys,keyfn){
return (function (){
var s__27824__$1 = s__27824;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__27824__$1);
if(temp__4126__auto__){
var s__27824__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__27824__$2)){
var c__16899__auto__ = cljs.core.chunk_first(s__27824__$2);
var size__16900__auto__ = cljs.core.count(c__16899__auto__);
var b__27826 = cljs.core.chunk_buffer(size__16900__auto__);
if((function (){var i__27825 = (0);
while(true){
if((i__27825 < size__16900__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__16899__auto__,i__27825);
cljs.core.chunk_append(b__27826,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__27831 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27831) : keyfn.call(null,G__27831));
})(),thisfn((x__$1[k]))], null));

var G__27834 = (i__27825 + (1));
i__27825 = G__27834;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__27826),iter__27823(cljs.core.chunk_rest(s__27824__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__27826),null);
}
} else {
var k = cljs.core.first(s__27824__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__27832 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27832) : keyfn.call(null,G__27832));
})(),thisfn((x__$1[k]))], null),iter__27823(cljs.core.rest(s__27824__$2)));
}
} else {
return null;
}
break;
}
});})(map__27806,map__27806__$1,keywordize_keys,keyfn))
,null,null));
});})(map__27806,map__27806__$1,keywordize_keys,keyfn))
;
return iter__16901__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__27806,map__27806__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__27833 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__27835__i = 0, G__27835__a = new Array(arguments.length -  1);
while (G__27835__i < G__27835__a.length) {G__27835__a[G__27835__i] = arguments[G__27835__i + 1]; ++G__27835__i;}
  opts = new cljs.core.IndexedSeq(G__27835__a,0);
} 
return G__27833__delegate.call(this,x,opts);};
G__27833.cljs$lang$maxFixedArity = 1;
G__27833.cljs$lang$applyTo = (function (arglist__27836){
var x = cljs.core.first(arglist__27836);
var opts = cljs.core.rest(arglist__27836);
return G__27833__delegate(x,opts);
});
G__27833.cljs$core$IFn$_invoke$arity$variadic = G__27833__delegate;
return G__27833;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__27837 = null;
if (arguments.length > 1) {
var G__27838__i = 0, G__27838__a = new Array(arguments.length -  1);
while (G__27838__i < G__27838__a.length) {G__27838__a[G__27838__i] = arguments[G__27838__i + 1]; ++G__27838__i;}
G__27837 = new cljs.core.IndexedSeq(G__27838__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__27837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__27841 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27841) : cljs.core.atom.call(null,G__27841));
})();
return ((function (mem){
return (function() { 
var G__27843__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__27842 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27842) : cljs.core.deref.call(null,G__27842));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__27843 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27844__i = 0, G__27844__a = new Array(arguments.length -  0);
while (G__27844__i < G__27844__a.length) {G__27844__a[G__27844__i] = arguments[G__27844__i + 0]; ++G__27844__i;}
  args = new cljs.core.IndexedSeq(G__27844__a,0);
} 
return G__27843__delegate.call(this,args);};
G__27843.cljs$lang$maxFixedArity = 0;
G__27843.cljs$lang$applyTo = (function (arglist__27845){
var args = cljs.core.seq(arglist__27845);
return G__27843__delegate(args);
});
G__27843.cljs$core$IFn$_invoke$arity$variadic = G__27843__delegate;
return G__27843;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__27847 = ret;
f = G__27847;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__27848__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__27848 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__27849__i = 0, G__27849__a = new Array(arguments.length -  1);
while (G__27849__i < G__27849__a.length) {G__27849__a[G__27849__i] = arguments[G__27849__i + 1]; ++G__27849__i;}
  args = new cljs.core.IndexedSeq(G__27849__a,0);
} 
return G__27848__delegate.call(this,f,args);};
G__27848.cljs$lang$maxFixedArity = 1;
G__27848.cljs$lang$applyTo = (function (arglist__27850){
var f = cljs.core.first(arglist__27850);
var args = cljs.core.rest(arglist__27850);
return G__27848__delegate(f,args);
});
G__27848.cljs$core$IFn$_invoke$arity$variadic = G__27848__delegate;
return G__27848;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__27851 = null;
if (arguments.length > 1) {
var G__27852__i = 0, G__27852__a = new Array(arguments.length -  1);
while (G__27852__i < G__27852__a.length) {G__27852__a[G__27852__i] = arguments[G__27852__i + 1]; ++G__27852__i;}
G__27851 = new cljs.core.IndexedSeq(G__27852__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__27851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__27855 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__27855) : Math.floor.call(null,G__27855));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__27857 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27857) : f.call(null,G__27857));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__27859 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27859) : cljs.core.atom.call(null,G__27859));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__27860__i = 0, G__27860__a = new Array(arguments.length -  1);
while (G__27860__i < G__27860__a.length) {G__27860__a[G__27860__i] = arguments[G__27860__i + 1]; ++G__27860__i;}
  args = new cljs.core.IndexedSeq(G__27860__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__27861){
var f = cljs.core.first(arglist__27861);
var args = cljs.core.rest(arglist__27861);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__27926 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27926) : cljs.core.deref.call(null,G__27926));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__16145__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
var and__16133__auto__ = cljs.core.vector_QMARK_(parent);
if(and__16133__auto__){
var and__16133__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__16133__auto____$1){
var and__16133__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__16133__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__27951 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__27949 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__27949) : child.call(null,G__27949));
})(),(function (){var G__27950 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__27950) : parent.call(null,G__27950));
})());
var G__27952 = (i + (1));
ret = G__27951;
i = G__27952;
continue;
}
break;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__27956 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27956) : cljs.core.deref.call(null,G__27956));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__27960 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27960) : cljs.core.deref.call(null,G__27960));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__27964 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27964) : cljs.core.deref.call(null,G__27964));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__27973 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__27973) : targets.call(null,G__27973));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__27974 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__27974) : sources.call(null,G__27974));
})()));
});})(tp,td,ta))
;
var or__16145__auto__ = ((cljs.core.contains_QMARK_((function (){var G__27978 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__27978) : tp.call(null,G__27978));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__27979 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__27979) : ta.call(null,G__27979));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__27980 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__27980) : ta.call(null,G__27980));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__27987 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__27987) : parentMap.call(null,G__27987));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__27988 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__27988) : parentMap.call(null,G__27988));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__27981_SHARP_){
return cljs.core.cons(cljs.core.first(p1__27981_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__27981_SHARP_),cljs.core.second(p1__27981_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__27989 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__27989) : parentMap.call(null,G__27989));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__27982_SHARP_,p2__27983_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__27982_SHARP_,p2__27983_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__27992 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27992) : cljs.core.deref.call(null,G__27992));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__27993 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27993) : cljs.core.deref.call(null,G__27993));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__28009 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28009) : cljs.core.deref.call(null,G__28009));
})().call(null,x);
var or__16145__auto__ = (cljs.core.truth_((function (){var and__16133__auto__ = xprefs;
if(cljs.core.truth_(and__16133__auto__)){
var G__28011 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__28011) : xprefs.call(null,G__28011));
} else {
return and__16133__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__28012 = cljs.core.rest(ps);
ps = G__28012;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__28013 = cljs.core.rest(ps);
ps = G__28013;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__16145__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__28027){
var vec__28028 = p__28027;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28028,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28028,(1),null);
var e = vec__28028;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28029 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28029) : cljs.core.deref.call(null,G__28029));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__16145__auto__ = (be == null);
if(or__16145__auto__){
return or__16145__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__28030 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28030) : cljs.core.deref.call(null,G__28030));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28031 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28031) : cljs.core.deref.call(null,G__28031));
})(),(function (){var G__28032 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28032) : cljs.core.deref.call(null,G__28032));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj28034 = {};
return obj28034;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._reset[(function (){var G__28038 = x__16789__auto__;
return goog.typeOf(G__28038);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reset["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._add_method[(function (){var G__28042 = x__16789__auto__;
return goog.typeOf(G__28042);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._add_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._remove_method[(function (){var G__28046 = x__16789__auto__;
return goog.typeOf(G__28046);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._remove_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._prefer_method[(function (){var G__28050 = x__16789__auto__;
return goog.typeOf(G__28050);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._get_method[(function (){var G__28054 = x__16789__auto__;
return goog.typeOf(G__28054);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._get_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._methods[(function (){var G__28058 = x__16789__auto__;
return goog.typeOf(G__28058);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._methods["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._prefers[(function (){var G__28062 = x__16789__auto__;
return goog.typeOf(G__28062);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._prefers["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28064 = this$__$1;
return goog.getUid(G__28064);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28065 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28065) : cljs.core.deref.call(null,G__28065));
})(),(function (){var G__28066 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28066) : cljs.core.deref.call(null,G__28066));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__28067 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28067) : cljs.core.deref.call(null,G__28067));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__28068 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28068) : cljs.core.deref.call(null,G__28068));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28069 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28069) : cljs.core.deref.call(null,G__28069));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28070 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28070) : cljs.core.deref.call(null,G__28070));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__28911 = null;
var G__28911__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__28911__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28071 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28071) : self__.dispatch_fn.call(null,G__28071));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28072 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28072) : target_fn.call(null,G__28072));
});
var G__28911__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28073 = a;
var G__28074 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28073,G__28074) : self__.dispatch_fn.call(null,G__28073,G__28074));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28075 = a;
var G__28076 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28075,G__28076) : target_fn.call(null,G__28075,G__28076));
});
var G__28911__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28077 = a;
var G__28078 = b;
var G__28079 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28077,G__28078,G__28079) : self__.dispatch_fn.call(null,G__28077,G__28078,G__28079));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28080 = a;
var G__28081 = b;
var G__28082 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28080,G__28081,G__28082) : target_fn.call(null,G__28080,G__28081,G__28082));
});
var G__28911__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28083 = a;
var G__28084 = b;
var G__28085 = c;
var G__28086 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28083,G__28084,G__28085,G__28086) : self__.dispatch_fn.call(null,G__28083,G__28084,G__28085,G__28086));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28087 = a;
var G__28088 = b;
var G__28089 = c;
var G__28090 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28087,G__28088,G__28089,G__28090) : target_fn.call(null,G__28087,G__28088,G__28089,G__28090));
});
var G__28911__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28091 = a;
var G__28092 = b;
var G__28093 = c;
var G__28094 = d;
var G__28095 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28091,G__28092,G__28093,G__28094,G__28095) : self__.dispatch_fn.call(null,G__28091,G__28092,G__28093,G__28094,G__28095));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28096 = a;
var G__28097 = b;
var G__28098 = c;
var G__28099 = d;
var G__28100 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28096,G__28097,G__28098,G__28099,G__28100) : target_fn.call(null,G__28096,G__28097,G__28098,G__28099,G__28100));
});
var G__28911__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28101 = a;
var G__28102 = b;
var G__28103 = c;
var G__28104 = d;
var G__28105 = e;
var G__28106 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28101,G__28102,G__28103,G__28104,G__28105,G__28106) : self__.dispatch_fn.call(null,G__28101,G__28102,G__28103,G__28104,G__28105,G__28106));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28107 = a;
var G__28108 = b;
var G__28109 = c;
var G__28110 = d;
var G__28111 = e;
var G__28112 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28107,G__28108,G__28109,G__28110,G__28111,G__28112) : target_fn.call(null,G__28107,G__28108,G__28109,G__28110,G__28111,G__28112));
});
var G__28911__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28113 = a;
var G__28114 = b;
var G__28115 = c;
var G__28116 = d;
var G__28117 = e;
var G__28118 = f;
var G__28119 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28113,G__28114,G__28115,G__28116,G__28117,G__28118,G__28119) : self__.dispatch_fn.call(null,G__28113,G__28114,G__28115,G__28116,G__28117,G__28118,G__28119));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28120 = a;
var G__28121 = b;
var G__28122 = c;
var G__28123 = d;
var G__28124 = e;
var G__28125 = f;
var G__28126 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28120,G__28121,G__28122,G__28123,G__28124,G__28125,G__28126) : target_fn.call(null,G__28120,G__28121,G__28122,G__28123,G__28124,G__28125,G__28126));
});
var G__28911__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28127 = a;
var G__28128 = b;
var G__28129 = c;
var G__28130 = d;
var G__28131 = e;
var G__28132 = f;
var G__28133 = g;
var G__28134 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28127,G__28128,G__28129,G__28130,G__28131,G__28132,G__28133,G__28134) : self__.dispatch_fn.call(null,G__28127,G__28128,G__28129,G__28130,G__28131,G__28132,G__28133,G__28134));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28135 = a;
var G__28136 = b;
var G__28137 = c;
var G__28138 = d;
var G__28139 = e;
var G__28140 = f;
var G__28141 = g;
var G__28142 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142) : target_fn.call(null,G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142));
});
var G__28911__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28143 = a;
var G__28144 = b;
var G__28145 = c;
var G__28146 = d;
var G__28147 = e;
var G__28148 = f;
var G__28149 = g;
var G__28150 = h;
var G__28151 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28143,G__28144,G__28145,G__28146,G__28147,G__28148,G__28149,G__28150,G__28151) : self__.dispatch_fn.call(null,G__28143,G__28144,G__28145,G__28146,G__28147,G__28148,G__28149,G__28150,G__28151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28152 = a;
var G__28153 = b;
var G__28154 = c;
var G__28155 = d;
var G__28156 = e;
var G__28157 = f;
var G__28158 = g;
var G__28159 = h;
var G__28160 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28152,G__28153,G__28154,G__28155,G__28156,G__28157,G__28158,G__28159,G__28160) : target_fn.call(null,G__28152,G__28153,G__28154,G__28155,G__28156,G__28157,G__28158,G__28159,G__28160));
});
var G__28911__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28161 = a;
var G__28162 = b;
var G__28163 = c;
var G__28164 = d;
var G__28165 = e;
var G__28166 = f;
var G__28167 = g;
var G__28168 = h;
var G__28169 = i;
var G__28170 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28161,G__28162,G__28163,G__28164,G__28165,G__28166,G__28167,G__28168,G__28169,G__28170) : self__.dispatch_fn.call(null,G__28161,G__28162,G__28163,G__28164,G__28165,G__28166,G__28167,G__28168,G__28169,G__28170));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28171 = a;
var G__28172 = b;
var G__28173 = c;
var G__28174 = d;
var G__28175 = e;
var G__28176 = f;
var G__28177 = g;
var G__28178 = h;
var G__28179 = i;
var G__28180 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28171,G__28172,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180) : target_fn.call(null,G__28171,G__28172,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180));
});
var G__28911__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28181 = a;
var G__28182 = b;
var G__28183 = c;
var G__28184 = d;
var G__28185 = e;
var G__28186 = f;
var G__28187 = g;
var G__28188 = h;
var G__28189 = i;
var G__28190 = j;
var G__28191 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28181,G__28182,G__28183,G__28184,G__28185,G__28186,G__28187,G__28188,G__28189,G__28190,G__28191) : self__.dispatch_fn.call(null,G__28181,G__28182,G__28183,G__28184,G__28185,G__28186,G__28187,G__28188,G__28189,G__28190,G__28191));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28192 = a;
var G__28193 = b;
var G__28194 = c;
var G__28195 = d;
var G__28196 = e;
var G__28197 = f;
var G__28198 = g;
var G__28199 = h;
var G__28200 = i;
var G__28201 = j;
var G__28202 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199,G__28200,G__28201,G__28202) : target_fn.call(null,G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199,G__28200,G__28201,G__28202));
});
var G__28911__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28203 = a;
var G__28204 = b;
var G__28205 = c;
var G__28206 = d;
var G__28207 = e;
var G__28208 = f;
var G__28209 = g;
var G__28210 = h;
var G__28211 = i;
var G__28212 = j;
var G__28213 = k;
var G__28214 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28203,G__28204,G__28205,G__28206,G__28207,G__28208,G__28209,G__28210,G__28211,G__28212,G__28213,G__28214) : self__.dispatch_fn.call(null,G__28203,G__28204,G__28205,G__28206,G__28207,G__28208,G__28209,G__28210,G__28211,G__28212,G__28213,G__28214));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28215 = a;
var G__28216 = b;
var G__28217 = c;
var G__28218 = d;
var G__28219 = e;
var G__28220 = f;
var G__28221 = g;
var G__28222 = h;
var G__28223 = i;
var G__28224 = j;
var G__28225 = k;
var G__28226 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28215,G__28216,G__28217,G__28218,G__28219,G__28220,G__28221,G__28222,G__28223,G__28224,G__28225,G__28226) : target_fn.call(null,G__28215,G__28216,G__28217,G__28218,G__28219,G__28220,G__28221,G__28222,G__28223,G__28224,G__28225,G__28226));
});
var G__28911__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28227 = a;
var G__28228 = b;
var G__28229 = c;
var G__28230 = d;
var G__28231 = e;
var G__28232 = f;
var G__28233 = g;
var G__28234 = h;
var G__28235 = i;
var G__28236 = j;
var G__28237 = k;
var G__28238 = l;
var G__28239 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28227,G__28228,G__28229,G__28230,G__28231,G__28232,G__28233,G__28234,G__28235,G__28236,G__28237,G__28238,G__28239) : self__.dispatch_fn.call(null,G__28227,G__28228,G__28229,G__28230,G__28231,G__28232,G__28233,G__28234,G__28235,G__28236,G__28237,G__28238,G__28239));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28240 = a;
var G__28241 = b;
var G__28242 = c;
var G__28243 = d;
var G__28244 = e;
var G__28245 = f;
var G__28246 = g;
var G__28247 = h;
var G__28248 = i;
var G__28249 = j;
var G__28250 = k;
var G__28251 = l;
var G__28252 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28240,G__28241,G__28242,G__28243,G__28244,G__28245,G__28246,G__28247,G__28248,G__28249,G__28250,G__28251,G__28252) : target_fn.call(null,G__28240,G__28241,G__28242,G__28243,G__28244,G__28245,G__28246,G__28247,G__28248,G__28249,G__28250,G__28251,G__28252));
});
var G__28911__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28253 = a;
var G__28254 = b;
var G__28255 = c;
var G__28256 = d;
var G__28257 = e;
var G__28258 = f;
var G__28259 = g;
var G__28260 = h;
var G__28261 = i;
var G__28262 = j;
var G__28263 = k;
var G__28264 = l;
var G__28265 = m;
var G__28266 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28253,G__28254,G__28255,G__28256,G__28257,G__28258,G__28259,G__28260,G__28261,G__28262,G__28263,G__28264,G__28265,G__28266) : self__.dispatch_fn.call(null,G__28253,G__28254,G__28255,G__28256,G__28257,G__28258,G__28259,G__28260,G__28261,G__28262,G__28263,G__28264,G__28265,G__28266));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28267 = a;
var G__28268 = b;
var G__28269 = c;
var G__28270 = d;
var G__28271 = e;
var G__28272 = f;
var G__28273 = g;
var G__28274 = h;
var G__28275 = i;
var G__28276 = j;
var G__28277 = k;
var G__28278 = l;
var G__28279 = m;
var G__28280 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28267,G__28268,G__28269,G__28270,G__28271,G__28272,G__28273,G__28274,G__28275,G__28276,G__28277,G__28278,G__28279,G__28280) : target_fn.call(null,G__28267,G__28268,G__28269,G__28270,G__28271,G__28272,G__28273,G__28274,G__28275,G__28276,G__28277,G__28278,G__28279,G__28280));
});
var G__28911__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28281 = a;
var G__28282 = b;
var G__28283 = c;
var G__28284 = d;
var G__28285 = e;
var G__28286 = f;
var G__28287 = g;
var G__28288 = h;
var G__28289 = i;
var G__28290 = j;
var G__28291 = k;
var G__28292 = l;
var G__28293 = m;
var G__28294 = n;
var G__28295 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28281,G__28282,G__28283,G__28284,G__28285,G__28286,G__28287,G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295) : self__.dispatch_fn.call(null,G__28281,G__28282,G__28283,G__28284,G__28285,G__28286,G__28287,G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28296 = a;
var G__28297 = b;
var G__28298 = c;
var G__28299 = d;
var G__28300 = e;
var G__28301 = f;
var G__28302 = g;
var G__28303 = h;
var G__28304 = i;
var G__28305 = j;
var G__28306 = k;
var G__28307 = l;
var G__28308 = m;
var G__28309 = n;
var G__28310 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28296,G__28297,G__28298,G__28299,G__28300,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309,G__28310) : target_fn.call(null,G__28296,G__28297,G__28298,G__28299,G__28300,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309,G__28310));
});
var G__28911__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28311 = a;
var G__28312 = b;
var G__28313 = c;
var G__28314 = d;
var G__28315 = e;
var G__28316 = f;
var G__28317 = g;
var G__28318 = h;
var G__28319 = i;
var G__28320 = j;
var G__28321 = k;
var G__28322 = l;
var G__28323 = m;
var G__28324 = n;
var G__28325 = o;
var G__28326 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28311,G__28312,G__28313,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326) : self__.dispatch_fn.call(null,G__28311,G__28312,G__28313,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28327 = a;
var G__28328 = b;
var G__28329 = c;
var G__28330 = d;
var G__28331 = e;
var G__28332 = f;
var G__28333 = g;
var G__28334 = h;
var G__28335 = i;
var G__28336 = j;
var G__28337 = k;
var G__28338 = l;
var G__28339 = m;
var G__28340 = n;
var G__28341 = o;
var G__28342 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28327,G__28328,G__28329,G__28330,G__28331,G__28332,G__28333,G__28334,G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342) : target_fn.call(null,G__28327,G__28328,G__28329,G__28330,G__28331,G__28332,G__28333,G__28334,G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342));
});
var G__28911__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28343 = a;
var G__28344 = b;
var G__28345 = c;
var G__28346 = d;
var G__28347 = e;
var G__28348 = f;
var G__28349 = g;
var G__28350 = h;
var G__28351 = i;
var G__28352 = j;
var G__28353 = k;
var G__28354 = l;
var G__28355 = m;
var G__28356 = n;
var G__28357 = o;
var G__28358 = p;
var G__28359 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28343,G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350,G__28351,G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359) : self__.dispatch_fn.call(null,G__28343,G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350,G__28351,G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28360 = a;
var G__28361 = b;
var G__28362 = c;
var G__28363 = d;
var G__28364 = e;
var G__28365 = f;
var G__28366 = g;
var G__28367 = h;
var G__28368 = i;
var G__28369 = j;
var G__28370 = k;
var G__28371 = l;
var G__28372 = m;
var G__28373 = n;
var G__28374 = o;
var G__28375 = p;
var G__28376 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28360,G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376) : target_fn.call(null,G__28360,G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376));
});
var G__28911__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28377 = a;
var G__28378 = b;
var G__28379 = c;
var G__28380 = d;
var G__28381 = e;
var G__28382 = f;
var G__28383 = g;
var G__28384 = h;
var G__28385 = i;
var G__28386 = j;
var G__28387 = k;
var G__28388 = l;
var G__28389 = m;
var G__28390 = n;
var G__28391 = o;
var G__28392 = p;
var G__28393 = q;
var G__28394 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28377,G__28378,G__28379,G__28380,G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391,G__28392,G__28393,G__28394) : self__.dispatch_fn.call(null,G__28377,G__28378,G__28379,G__28380,G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391,G__28392,G__28393,G__28394));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28395 = a;
var G__28396 = b;
var G__28397 = c;
var G__28398 = d;
var G__28399 = e;
var G__28400 = f;
var G__28401 = g;
var G__28402 = h;
var G__28403 = i;
var G__28404 = j;
var G__28405 = k;
var G__28406 = l;
var G__28407 = m;
var G__28408 = n;
var G__28409 = o;
var G__28410 = p;
var G__28411 = q;
var G__28412 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28395,G__28396,G__28397,G__28398,G__28399,G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412) : target_fn.call(null,G__28395,G__28396,G__28397,G__28398,G__28399,G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412));
});
var G__28911__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28413 = a;
var G__28414 = b;
var G__28415 = c;
var G__28416 = d;
var G__28417 = e;
var G__28418 = f;
var G__28419 = g;
var G__28420 = h;
var G__28421 = i;
var G__28422 = j;
var G__28423 = k;
var G__28424 = l;
var G__28425 = m;
var G__28426 = n;
var G__28427 = o;
var G__28428 = p;
var G__28429 = q;
var G__28430 = r;
var G__28431 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28413,G__28414,G__28415,G__28416,G__28417,G__28418,G__28419,G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429,G__28430,G__28431) : self__.dispatch_fn.call(null,G__28413,G__28414,G__28415,G__28416,G__28417,G__28418,G__28419,G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429,G__28430,G__28431));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28432 = a;
var G__28433 = b;
var G__28434 = c;
var G__28435 = d;
var G__28436 = e;
var G__28437 = f;
var G__28438 = g;
var G__28439 = h;
var G__28440 = i;
var G__28441 = j;
var G__28442 = k;
var G__28443 = l;
var G__28444 = m;
var G__28445 = n;
var G__28446 = o;
var G__28447 = p;
var G__28448 = q;
var G__28449 = r;
var G__28450 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439,G__28440,G__28441,G__28442,G__28443,G__28444,G__28445,G__28446,G__28447,G__28448,G__28449,G__28450) : target_fn.call(null,G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439,G__28440,G__28441,G__28442,G__28443,G__28444,G__28445,G__28446,G__28447,G__28448,G__28449,G__28450));
});
var G__28911__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28451 = a;
var G__28452 = b;
var G__28453 = c;
var G__28454 = d;
var G__28455 = e;
var G__28456 = f;
var G__28457 = g;
var G__28458 = h;
var G__28459 = i;
var G__28460 = j;
var G__28461 = k;
var G__28462 = l;
var G__28463 = m;
var G__28464 = n;
var G__28465 = o;
var G__28466 = p;
var G__28467 = q;
var G__28468 = r;
var G__28469 = s;
var G__28470 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28451,G__28452,G__28453,G__28454,G__28455,G__28456,G__28457,G__28458,G__28459,G__28460,G__28461,G__28462,G__28463,G__28464,G__28465,G__28466,G__28467,G__28468,G__28469,G__28470) : self__.dispatch_fn.call(null,G__28451,G__28452,G__28453,G__28454,G__28455,G__28456,G__28457,G__28458,G__28459,G__28460,G__28461,G__28462,G__28463,G__28464,G__28465,G__28466,G__28467,G__28468,G__28469,G__28470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28471 = a;
var G__28472 = b;
var G__28473 = c;
var G__28474 = d;
var G__28475 = e;
var G__28476 = f;
var G__28477 = g;
var G__28478 = h;
var G__28479 = i;
var G__28480 = j;
var G__28481 = k;
var G__28482 = l;
var G__28483 = m;
var G__28484 = n;
var G__28485 = o;
var G__28486 = p;
var G__28487 = q;
var G__28488 = r;
var G__28489 = s;
var G__28490 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28471,G__28472,G__28473,G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480,G__28481,G__28482,G__28483,G__28484,G__28485,G__28486,G__28487,G__28488,G__28489,G__28490) : target_fn.call(null,G__28471,G__28472,G__28473,G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480,G__28481,G__28482,G__28483,G__28484,G__28485,G__28486,G__28487,G__28488,G__28489,G__28490));
});
var G__28911__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__28911 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__28911__1.call(this,self__);
case 2:
return G__28911__2.call(this,self__,a);
case 3:
return G__28911__3.call(this,self__,a,b);
case 4:
return G__28911__4.call(this,self__,a,b,c);
case 5:
return G__28911__5.call(this,self__,a,b,c,d);
case 6:
return G__28911__6.call(this,self__,a,b,c,d,e);
case 7:
return G__28911__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__28911__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__28911__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__28911__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__28911__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__28911__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__28911__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__28911__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__28911__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__28911__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__28911__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__28911__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__28911__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__28911__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__28911__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__28911__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28911.cljs$core$IFn$_invoke$arity$1 = G__28911__1;
G__28911.cljs$core$IFn$_invoke$arity$2 = G__28911__2;
G__28911.cljs$core$IFn$_invoke$arity$3 = G__28911__3;
G__28911.cljs$core$IFn$_invoke$arity$4 = G__28911__4;
G__28911.cljs$core$IFn$_invoke$arity$5 = G__28911__5;
G__28911.cljs$core$IFn$_invoke$arity$6 = G__28911__6;
G__28911.cljs$core$IFn$_invoke$arity$7 = G__28911__7;
G__28911.cljs$core$IFn$_invoke$arity$8 = G__28911__8;
G__28911.cljs$core$IFn$_invoke$arity$9 = G__28911__9;
G__28911.cljs$core$IFn$_invoke$arity$10 = G__28911__10;
G__28911.cljs$core$IFn$_invoke$arity$11 = G__28911__11;
G__28911.cljs$core$IFn$_invoke$arity$12 = G__28911__12;
G__28911.cljs$core$IFn$_invoke$arity$13 = G__28911__13;
G__28911.cljs$core$IFn$_invoke$arity$14 = G__28911__14;
G__28911.cljs$core$IFn$_invoke$arity$15 = G__28911__15;
G__28911.cljs$core$IFn$_invoke$arity$16 = G__28911__16;
G__28911.cljs$core$IFn$_invoke$arity$17 = G__28911__17;
G__28911.cljs$core$IFn$_invoke$arity$18 = G__28911__18;
G__28911.cljs$core$IFn$_invoke$arity$19 = G__28911__19;
G__28911.cljs$core$IFn$_invoke$arity$20 = G__28911__20;
G__28911.cljs$core$IFn$_invoke$arity$21 = G__28911__21;
G__28911.cljs$core$IFn$_invoke$arity$22 = G__28911__22;
return G__28911;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args28063){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28063)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28491 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28491) : self__.dispatch_fn.call(null,G__28491));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28492 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28492) : target_fn.call(null,G__28492));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28493 = a;
var G__28494 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28493,G__28494) : self__.dispatch_fn.call(null,G__28493,G__28494));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28495 = a;
var G__28496 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28495,G__28496) : target_fn.call(null,G__28495,G__28496));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28497 = a;
var G__28498 = b;
var G__28499 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28497,G__28498,G__28499) : self__.dispatch_fn.call(null,G__28497,G__28498,G__28499));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28500 = a;
var G__28501 = b;
var G__28502 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28500,G__28501,G__28502) : target_fn.call(null,G__28500,G__28501,G__28502));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28503 = a;
var G__28504 = b;
var G__28505 = c;
var G__28506 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28503,G__28504,G__28505,G__28506) : self__.dispatch_fn.call(null,G__28503,G__28504,G__28505,G__28506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28507 = a;
var G__28508 = b;
var G__28509 = c;
var G__28510 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28507,G__28508,G__28509,G__28510) : target_fn.call(null,G__28507,G__28508,G__28509,G__28510));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28511 = a;
var G__28512 = b;
var G__28513 = c;
var G__28514 = d;
var G__28515 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28511,G__28512,G__28513,G__28514,G__28515) : self__.dispatch_fn.call(null,G__28511,G__28512,G__28513,G__28514,G__28515));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28516 = a;
var G__28517 = b;
var G__28518 = c;
var G__28519 = d;
var G__28520 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28516,G__28517,G__28518,G__28519,G__28520) : target_fn.call(null,G__28516,G__28517,G__28518,G__28519,G__28520));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28521 = a;
var G__28522 = b;
var G__28523 = c;
var G__28524 = d;
var G__28525 = e;
var G__28526 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28521,G__28522,G__28523,G__28524,G__28525,G__28526) : self__.dispatch_fn.call(null,G__28521,G__28522,G__28523,G__28524,G__28525,G__28526));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28527 = a;
var G__28528 = b;
var G__28529 = c;
var G__28530 = d;
var G__28531 = e;
var G__28532 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28527,G__28528,G__28529,G__28530,G__28531,G__28532) : target_fn.call(null,G__28527,G__28528,G__28529,G__28530,G__28531,G__28532));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28533 = a;
var G__28534 = b;
var G__28535 = c;
var G__28536 = d;
var G__28537 = e;
var G__28538 = f;
var G__28539 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28533,G__28534,G__28535,G__28536,G__28537,G__28538,G__28539) : self__.dispatch_fn.call(null,G__28533,G__28534,G__28535,G__28536,G__28537,G__28538,G__28539));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28540 = a;
var G__28541 = b;
var G__28542 = c;
var G__28543 = d;
var G__28544 = e;
var G__28545 = f;
var G__28546 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28540,G__28541,G__28542,G__28543,G__28544,G__28545,G__28546) : target_fn.call(null,G__28540,G__28541,G__28542,G__28543,G__28544,G__28545,G__28546));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28547 = a;
var G__28548 = b;
var G__28549 = c;
var G__28550 = d;
var G__28551 = e;
var G__28552 = f;
var G__28553 = g;
var G__28554 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28547,G__28548,G__28549,G__28550,G__28551,G__28552,G__28553,G__28554) : self__.dispatch_fn.call(null,G__28547,G__28548,G__28549,G__28550,G__28551,G__28552,G__28553,G__28554));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28555 = a;
var G__28556 = b;
var G__28557 = c;
var G__28558 = d;
var G__28559 = e;
var G__28560 = f;
var G__28561 = g;
var G__28562 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28555,G__28556,G__28557,G__28558,G__28559,G__28560,G__28561,G__28562) : target_fn.call(null,G__28555,G__28556,G__28557,G__28558,G__28559,G__28560,G__28561,G__28562));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28563 = a;
var G__28564 = b;
var G__28565 = c;
var G__28566 = d;
var G__28567 = e;
var G__28568 = f;
var G__28569 = g;
var G__28570 = h;
var G__28571 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28563,G__28564,G__28565,G__28566,G__28567,G__28568,G__28569,G__28570,G__28571) : self__.dispatch_fn.call(null,G__28563,G__28564,G__28565,G__28566,G__28567,G__28568,G__28569,G__28570,G__28571));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28572 = a;
var G__28573 = b;
var G__28574 = c;
var G__28575 = d;
var G__28576 = e;
var G__28577 = f;
var G__28578 = g;
var G__28579 = h;
var G__28580 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28572,G__28573,G__28574,G__28575,G__28576,G__28577,G__28578,G__28579,G__28580) : target_fn.call(null,G__28572,G__28573,G__28574,G__28575,G__28576,G__28577,G__28578,G__28579,G__28580));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28581 = a;
var G__28582 = b;
var G__28583 = c;
var G__28584 = d;
var G__28585 = e;
var G__28586 = f;
var G__28587 = g;
var G__28588 = h;
var G__28589 = i;
var G__28590 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28581,G__28582,G__28583,G__28584,G__28585,G__28586,G__28587,G__28588,G__28589,G__28590) : self__.dispatch_fn.call(null,G__28581,G__28582,G__28583,G__28584,G__28585,G__28586,G__28587,G__28588,G__28589,G__28590));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28591 = a;
var G__28592 = b;
var G__28593 = c;
var G__28594 = d;
var G__28595 = e;
var G__28596 = f;
var G__28597 = g;
var G__28598 = h;
var G__28599 = i;
var G__28600 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28591,G__28592,G__28593,G__28594,G__28595,G__28596,G__28597,G__28598,G__28599,G__28600) : target_fn.call(null,G__28591,G__28592,G__28593,G__28594,G__28595,G__28596,G__28597,G__28598,G__28599,G__28600));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28601 = a;
var G__28602 = b;
var G__28603 = c;
var G__28604 = d;
var G__28605 = e;
var G__28606 = f;
var G__28607 = g;
var G__28608 = h;
var G__28609 = i;
var G__28610 = j;
var G__28611 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28601,G__28602,G__28603,G__28604,G__28605,G__28606,G__28607,G__28608,G__28609,G__28610,G__28611) : self__.dispatch_fn.call(null,G__28601,G__28602,G__28603,G__28604,G__28605,G__28606,G__28607,G__28608,G__28609,G__28610,G__28611));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28612 = a;
var G__28613 = b;
var G__28614 = c;
var G__28615 = d;
var G__28616 = e;
var G__28617 = f;
var G__28618 = g;
var G__28619 = h;
var G__28620 = i;
var G__28621 = j;
var G__28622 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619,G__28620,G__28621,G__28622) : target_fn.call(null,G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619,G__28620,G__28621,G__28622));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28623 = a;
var G__28624 = b;
var G__28625 = c;
var G__28626 = d;
var G__28627 = e;
var G__28628 = f;
var G__28629 = g;
var G__28630 = h;
var G__28631 = i;
var G__28632 = j;
var G__28633 = k;
var G__28634 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28623,G__28624,G__28625,G__28626,G__28627,G__28628,G__28629,G__28630,G__28631,G__28632,G__28633,G__28634) : self__.dispatch_fn.call(null,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628,G__28629,G__28630,G__28631,G__28632,G__28633,G__28634));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28635 = a;
var G__28636 = b;
var G__28637 = c;
var G__28638 = d;
var G__28639 = e;
var G__28640 = f;
var G__28641 = g;
var G__28642 = h;
var G__28643 = i;
var G__28644 = j;
var G__28645 = k;
var G__28646 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645,G__28646) : target_fn.call(null,G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645,G__28646));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28647 = a;
var G__28648 = b;
var G__28649 = c;
var G__28650 = d;
var G__28651 = e;
var G__28652 = f;
var G__28653 = g;
var G__28654 = h;
var G__28655 = i;
var G__28656 = j;
var G__28657 = k;
var G__28658 = l;
var G__28659 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28647,G__28648,G__28649,G__28650,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658,G__28659) : self__.dispatch_fn.call(null,G__28647,G__28648,G__28649,G__28650,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658,G__28659));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28660 = a;
var G__28661 = b;
var G__28662 = c;
var G__28663 = d;
var G__28664 = e;
var G__28665 = f;
var G__28666 = g;
var G__28667 = h;
var G__28668 = i;
var G__28669 = j;
var G__28670 = k;
var G__28671 = l;
var G__28672 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667,G__28668,G__28669,G__28670,G__28671,G__28672) : target_fn.call(null,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667,G__28668,G__28669,G__28670,G__28671,G__28672));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28673 = a;
var G__28674 = b;
var G__28675 = c;
var G__28676 = d;
var G__28677 = e;
var G__28678 = f;
var G__28679 = g;
var G__28680 = h;
var G__28681 = i;
var G__28682 = j;
var G__28683 = k;
var G__28684 = l;
var G__28685 = m;
var G__28686 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681,G__28682,G__28683,G__28684,G__28685,G__28686) : self__.dispatch_fn.call(null,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681,G__28682,G__28683,G__28684,G__28685,G__28686));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28687 = a;
var G__28688 = b;
var G__28689 = c;
var G__28690 = d;
var G__28691 = e;
var G__28692 = f;
var G__28693 = g;
var G__28694 = h;
var G__28695 = i;
var G__28696 = j;
var G__28697 = k;
var G__28698 = l;
var G__28699 = m;
var G__28700 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28687,G__28688,G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698,G__28699,G__28700) : target_fn.call(null,G__28687,G__28688,G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698,G__28699,G__28700));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28701 = a;
var G__28702 = b;
var G__28703 = c;
var G__28704 = d;
var G__28705 = e;
var G__28706 = f;
var G__28707 = g;
var G__28708 = h;
var G__28709 = i;
var G__28710 = j;
var G__28711 = k;
var G__28712 = l;
var G__28713 = m;
var G__28714 = n;
var G__28715 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713,G__28714,G__28715) : self__.dispatch_fn.call(null,G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713,G__28714,G__28715));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28716 = a;
var G__28717 = b;
var G__28718 = c;
var G__28719 = d;
var G__28720 = e;
var G__28721 = f;
var G__28722 = g;
var G__28723 = h;
var G__28724 = i;
var G__28725 = j;
var G__28726 = k;
var G__28727 = l;
var G__28728 = m;
var G__28729 = n;
var G__28730 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28716,G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727,G__28728,G__28729,G__28730) : target_fn.call(null,G__28716,G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727,G__28728,G__28729,G__28730));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28731 = a;
var G__28732 = b;
var G__28733 = c;
var G__28734 = d;
var G__28735 = e;
var G__28736 = f;
var G__28737 = g;
var G__28738 = h;
var G__28739 = i;
var G__28740 = j;
var G__28741 = k;
var G__28742 = l;
var G__28743 = m;
var G__28744 = n;
var G__28745 = o;
var G__28746 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742,G__28743,G__28744,G__28745,G__28746) : self__.dispatch_fn.call(null,G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742,G__28743,G__28744,G__28745,G__28746));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28747 = a;
var G__28748 = b;
var G__28749 = c;
var G__28750 = d;
var G__28751 = e;
var G__28752 = f;
var G__28753 = g;
var G__28754 = h;
var G__28755 = i;
var G__28756 = j;
var G__28757 = k;
var G__28758 = l;
var G__28759 = m;
var G__28760 = n;
var G__28761 = o;
var G__28762 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758,G__28759,G__28760,G__28761,G__28762) : target_fn.call(null,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758,G__28759,G__28760,G__28761,G__28762));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28763 = a;
var G__28764 = b;
var G__28765 = c;
var G__28766 = d;
var G__28767 = e;
var G__28768 = f;
var G__28769 = g;
var G__28770 = h;
var G__28771 = i;
var G__28772 = j;
var G__28773 = k;
var G__28774 = l;
var G__28775 = m;
var G__28776 = n;
var G__28777 = o;
var G__28778 = p;
var G__28779 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771,G__28772,G__28773,G__28774,G__28775,G__28776,G__28777,G__28778,G__28779) : self__.dispatch_fn.call(null,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771,G__28772,G__28773,G__28774,G__28775,G__28776,G__28777,G__28778,G__28779));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28780 = a;
var G__28781 = b;
var G__28782 = c;
var G__28783 = d;
var G__28784 = e;
var G__28785 = f;
var G__28786 = g;
var G__28787 = h;
var G__28788 = i;
var G__28789 = j;
var G__28790 = k;
var G__28791 = l;
var G__28792 = m;
var G__28793 = n;
var G__28794 = o;
var G__28795 = p;
var G__28796 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789,G__28790,G__28791,G__28792,G__28793,G__28794,G__28795,G__28796) : target_fn.call(null,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789,G__28790,G__28791,G__28792,G__28793,G__28794,G__28795,G__28796));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28797 = a;
var G__28798 = b;
var G__28799 = c;
var G__28800 = d;
var G__28801 = e;
var G__28802 = f;
var G__28803 = g;
var G__28804 = h;
var G__28805 = i;
var G__28806 = j;
var G__28807 = k;
var G__28808 = l;
var G__28809 = m;
var G__28810 = n;
var G__28811 = o;
var G__28812 = p;
var G__28813 = q;
var G__28814 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811,G__28812,G__28813,G__28814) : self__.dispatch_fn.call(null,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811,G__28812,G__28813,G__28814));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28815 = a;
var G__28816 = b;
var G__28817 = c;
var G__28818 = d;
var G__28819 = e;
var G__28820 = f;
var G__28821 = g;
var G__28822 = h;
var G__28823 = i;
var G__28824 = j;
var G__28825 = k;
var G__28826 = l;
var G__28827 = m;
var G__28828 = n;
var G__28829 = o;
var G__28830 = p;
var G__28831 = q;
var G__28832 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831,G__28832) : target_fn.call(null,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831,G__28832));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28833 = a;
var G__28834 = b;
var G__28835 = c;
var G__28836 = d;
var G__28837 = e;
var G__28838 = f;
var G__28839 = g;
var G__28840 = h;
var G__28841 = i;
var G__28842 = j;
var G__28843 = k;
var G__28844 = l;
var G__28845 = m;
var G__28846 = n;
var G__28847 = o;
var G__28848 = p;
var G__28849 = q;
var G__28850 = r;
var G__28851 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851) : self__.dispatch_fn.call(null,G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28852 = a;
var G__28853 = b;
var G__28854 = c;
var G__28855 = d;
var G__28856 = e;
var G__28857 = f;
var G__28858 = g;
var G__28859 = h;
var G__28860 = i;
var G__28861 = j;
var G__28862 = k;
var G__28863 = l;
var G__28864 = m;
var G__28865 = n;
var G__28866 = o;
var G__28867 = p;
var G__28868 = q;
var G__28869 = r;
var G__28870 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869,G__28870) : target_fn.call(null,G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869,G__28870));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28871 = a;
var G__28872 = b;
var G__28873 = c;
var G__28874 = d;
var G__28875 = e;
var G__28876 = f;
var G__28877 = g;
var G__28878 = h;
var G__28879 = i;
var G__28880 = j;
var G__28881 = k;
var G__28882 = l;
var G__28883 = m;
var G__28884 = n;
var G__28885 = o;
var G__28886 = p;
var G__28887 = q;
var G__28888 = r;
var G__28889 = s;
var G__28890 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28871,G__28872,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889,G__28890) : self__.dispatch_fn.call(null,G__28871,G__28872,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889,G__28890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28891 = a;
var G__28892 = b;
var G__28893 = c;
var G__28894 = d;
var G__28895 = e;
var G__28896 = f;
var G__28897 = g;
var G__28898 = h;
var G__28899 = i;
var G__28900 = j;
var G__28901 = k;
var G__28902 = l;
var G__28903 = m;
var G__28904 = n;
var G__28905 = o;
var G__28906 = p;
var G__28907 = q;
var G__28908 = r;
var G__28909 = s;
var G__28910 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910) : target_fn.call(null,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28912 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__28912);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__28917 = msg;
return Error(G__28917);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__28922 = x;
var G__28923 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__28922,G__28923) : pred.call(null,G__28922,G__28923));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__28924 = y;
var G__28925 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__28924,G__28925) : pred.call(null,G__28924,G__28925));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1427852713371